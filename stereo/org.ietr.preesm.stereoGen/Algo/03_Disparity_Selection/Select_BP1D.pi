<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">Select_BP1D</data>
        <node id="height" kind="cfg_in_iface"/>
        <node id="width" kind="cfg_in_iface"/>
        <node id="ndisp" kind="cfg_in_iface"/>
        <node expr="8" id="Phi0" kind="param"/>
        <node id="CostIN" kind="src">
            <port annotation="NONE" expr="height*width*ndisp"
                kind="output" name="CostIN"/>
        </node>
        <node id="disparity_map" kind="snk">
            <port annotation="NONE" expr="height*width" kind="input" name="disparity_map"/>
        </node>
        <node id="getLine" kind="actor">
            <data key="graph_desc">Code/include/costMatrix.h</data>
            <loop name="costMatrix_dxy_getLine">
                <param direction="IN" isConfig="true" name="height" type="uint8_t"/>
                <param direction="IN" isConfig="true" name="width" type="uint8_t"/>
                <param direction="IN" isConfig="true" name="ndisp" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="CostIN" type="const uint8_t"/>
                <param direction="OUT" isConfig="false" name="phiB" type="uint8_t"/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="READ_ONLY" expr="height*width*ndisp"
                kind="input" name="CostIN"/>
            <port annotation="NONE"
                expr="height*(width-(ndisp-1)/2-1)*(ndisp+1)"
                kind="output" name="phiB"/>
        </node>
        <node id="computeFi" kind="actor">
            <data key="graph_desc">Code/include/BP1D.h</data>
            <loop name="BP_ComputeFi">
                <param direction="IN" isConfig="false" name="phiB" type="phib_type"/>
                <param direction="OUT" isConfig="false" name="Fi" type="fi_type"/>
                <param direction="IN" isConfig="true" name="width" type="unsigned int"/>
                <param direction="IN" isConfig="true" name="ndisp" type="unsigned"/>
                <param direction="IN" isConfig="true" name="Phi0" type="int"/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="ndisp"/>
            <port kind="cfg_input" name="Phi0"/>
            <port annotation="READ_ONLY"
                expr="(width-(ndisp-1)/2-1)*(ndisp+1)" kind="input" name="phiB"/>
            <port annotation="NONE"
                expr="(width-(ndisp-1)/2-1)*(ndisp+2)" kind="output" name="Fi"/>
        </node>
        <node id="computeEnergy" kind="actor">
            <data key="graph_desc">Code/include/BP1D.h</data>
            <loop name="BP_Compute_Energy">
                <param direction="IN" isConfig="false" name="phiB" type="phib_type"/>
                <param direction="IN" isConfig="false" name="Fi" type="fi_type"/>
                <param direction="OUT" isConfig="false"
                    name="disparity_map" type="unsigned char"/>
                <param direction="IN" isConfig="true" name="width" type="unsigned int"/>
                <param direction="IN" isConfig="true" name="ndisp" type="unsigned int"/>
                <param direction="IN" isConfig="true" name="Phi0" type="int"/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="ndisp"/>
            <port kind="cfg_input" name="Phi0"/>
            <port annotation="READ_ONLY"
                expr="(width-(ndisp-1)/2-1)*(ndisp+2)" kind="input" name="Fi"/>
            <port annotation="READ_ONLY"
                expr="(width-(ndisp-1)/2-1)*(ndisp+1)" kind="input" name="phiB"/>
            <port annotation="NONE" expr="width" kind="output" name="disparity_map"/>
        </node>
        <node id="BroadcastPhiB" kind="broadcast">
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="READ_ONLY"
                expr="(width-(ndisp-1)/2-1)*(ndisp+1)" kind="input" name="in"/>
            <port annotation="NONE"
                expr="(width-(ndisp-1)/2-1)*(ndisp+1)" kind="output" name="out0"/>
            <port annotation="NONE"
                expr="(width-(ndisp-1)/2-1)*(ndisp+1)" kind="output" name="out1"/>
        </node>
        <edge kind="fifo" source="computeEnergy"
            sourceport="disparity_map" target="disparity_map"
            targetport="disparity_map" type="uchar"/>
        <edge kind="fifo" source="computeFi" sourceport="Fi"
            target="computeEnergy" targetport="Fi" type="fi_type"/>
        <edge kind="fifo" source="getLine" sourceport="phiB"
            target="BroadcastPhiB" targetport="in" type="uchar"/>
        <edge kind="fifo" source="BroadcastPhiB" sourceport="out0"
            target="computeFi" targetport="phiB" type="uchar"/>
        <edge kind="fifo" source="BroadcastPhiB" sourceport="out1"
            target="computeEnergy" targetport="phiB" type="uchar"/>
        <edge kind="fifo" source="CostIN" sourceport="CostIN"
            target="getLine" targetport="CostIN" type="uchar"/>
        <edge kind="dependency" source="height" target="getLine" targetport="height"/>
        <edge kind="dependency" source="width" target="getLine" targetport="width"/>
        <edge kind="dependency" source="width" target="BroadcastPhiB" targetport="width"/>
        <edge kind="dependency" source="height" target="BroadcastPhiB" targetport="height"/>
        <edge kind="dependency" source="width" target="computeFi" targetport="width"/>
        <edge kind="dependency" source="width" target="computeEnergy" targetport="width"/>
        <edge kind="dependency" source="height" target="computeEnergy" targetport="height"/>
        <edge kind="dependency" source="height" target="CostIN"/>
        <edge kind="dependency" source="width" target="CostIN"/>
        <edge kind="dependency" source="ndisp" target="CostIN"/>
        <edge kind="dependency" source="height" target="disparity_map"/>
        <edge kind="dependency" source="height" target="disparity_map"/>
        <edge kind="dependency" source="height" target="disparity_map"/>
        <edge kind="dependency" source="width" target="disparity_map"/>
        <edge kind="dependency" source="Phi0" target="computeFi" targetport="Phi0"/>
        <edge kind="dependency" source="Phi0" target="computeEnergy" targetport="Phi0"/>
        <edge kind="dependency" source="ndisp" target="getLine" targetport="ndisp"/>
        <edge kind="dependency" source="ndisp" target="BroadcastPhiB" targetport="ndisp"/>
        <edge kind="dependency" source="ndisp" target="computeFi" targetport="ndisp"/>
        <edge kind="dependency" source="ndisp" target="computeEnergy" targetport="ndisp"/>
    </graph>
</graphml>
