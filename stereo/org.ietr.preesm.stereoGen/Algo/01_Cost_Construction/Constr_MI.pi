<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">Constr_MI</data>
        <node id="height" kind="cfg_in_iface"/>
        <node id="width" kind="cfg_in_iface"/>
        <node id="ndisp" kind="cfg_in_iface"/>
        <node expr="height*width" id="size" kind="param"/>
        <node expr="2" id="two" kind="param"/>
        <node expr="65536" id="MISize" kind="param"/>
        <node id="lgray" kind="src">
            <port annotation="NONE" expr="height*width" kind="output" name="lgray"/>
        </node>
        <node id="rgray" kind="src">
            <port annotation="NONE" expr="height*width" kind="output" name="rgray"/>
        </node>
        <node id="CostOUT" kind="snk">
            <port annotation="NONE" expr="height*width*ndisp"
                kind="input" name="CostOUT"/>
        </node>
        <node id="ReadDisp" kind="actor">
            <data key="graph_desc">Code/include/ppm.h</data>
            <loop name="readPPM">
                <param direction="IN" isConfig="true" name="id" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="OUT" isConfig="false" name="rgb" type="unsigned char "/>
            </loop>
            <init name="readPPMInit">
                <param direction="IN" isConfig="true" name="id" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
            </init>
            <port kind="cfg_input" name="id"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port annotation="NONE" expr="height*width" kind="output" name="rgb"/>
        </node>
        <node id="CostConstruction" kind="actor">
            <data key="graph_desc">Code/include/mi.h</data>
            <loop name="mi_cost_d">
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="ndisp" type="int"/>
                <param direction="IN" isConfig="false" name="rgray" type="const uint8_t "/>
                <param direction="IN" isConfig="false" name="lgray" type="const uint8_t "/>
                <param direction="IN" isConfig="false" name="d" type="uint8_t "/>
                <param direction="IN" isConfig="false" name="mi" type="uint8_t "/>
                <param direction="OUT" isConfig="false" name="CostOUT" type="uint8_t "/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="NONE" expr="65536" kind="input" name="mi"/>
            <port annotation="NONE" expr="1" kind="input" name="d"/>
            <port annotation="NONE" expr="height*width" kind="input" name="rgray"/>
            <port annotation="NONE" expr="height*width" kind="input" name="lgray"/>
            <port annotation="NONE" expr="height*width" kind="output" name="CostOUT"/>
        </node>
        <node id="genDisp" kind="actor">
            <data key="graph_desc">Code/include/genDispLvl.h</data>
            <loop name="genDispLvl">
                <param direction="IN" isConfig="true" name="ndisp" type="int"/>
                <param direction="OUT" isConfig="false" name="disp" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="NONE" expr="ndisp" kind="output" name="disp"/>
        </node>
        <node id="miMatrix" kind="actor">
            <data key="graph_desc">Code/include/mi.h</data>
            <loop name="stereo_mutual_info">
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="ndisp" type="int"/>
                <param direction="OUT" isConfig="false" name="mi" type="uint8_t "/>
                <param direction="IN" isConfig="false" name="rgray" type="const uint8_t "/>
                <param direction="IN" isConfig="false" name="lgray" type="const uint8_t "/>
                <param direction="IN" isConfig="false"
                    name="disparitymap" type="const uint8_t "/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="NONE" expr="height*width" kind="input" name="disparitymap"/>
            <port annotation="NONE" expr="height*width" kind="input" name="rgray"/>
            <port annotation="NONE" expr="height*width" kind="input" name="lgray"/>
            <port annotation="NONE" expr="65536" kind="output" name="mi"/>
        </node>
        <node id="BroadcastR" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="NONE" expr="size" kind="input" name="in"/>
            <port annotation="NONE" expr="size" kind="output" name="out0"/>
            <port annotation="NONE" expr="size*ndisp" kind="output" name="out1"/>
        </node>
        <node id="BroadcastL" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="NONE" expr="size" kind="input" name="in"/>
            <port annotation="NONE" expr="size" kind="output" name="out0"/>
            <port annotation="NONE" expr="size*ndisp" kind="output" name="out1"/>
        </node>
        <node id="BroadcastMI" kind="broadcast">
            <port kind="cfg_input" name="MISize"/>
            <port kind="cfg_input" name="ndisp"/>
            <port annotation="NONE" expr="MISize" kind="input" name="in"/>
            <port annotation="NONE" expr="MISize*ndisp" kind="output" name="out"/>
        </node>
        <edge kind="fifo" source="genDisp" sourceport="disp"
            target="CostConstruction" targetport="d" type="uchar"/>
        <edge kind="fifo" source="CostConstruction" sourceport="CostOUT"
            target="CostOUT" targetport="CostOUT" type="uchar"/>
        <edge kind="fifo" source="lgray" sourceport="lgray"
            target="BroadcastR" targetport="in" type="uchar"/>
        <edge kind="fifo" source="rgray" sourceport="rgray"
            target="BroadcastL" targetport="in" type="uchar"/>
        <edge kind="fifo" source="BroadcastL" sourceport="out1"
            target="CostConstruction" targetport="lgray" type="uchar"/>
        <edge kind="fifo" source="BroadcastL" sourceport="out0"
            target="miMatrix" targetport="lgray" type="uchar"/>
        <edge kind="fifo" source="BroadcastR" sourceport="out0"
            target="miMatrix" targetport="rgray" type="uchar"/>
        <edge kind="fifo" source="BroadcastR" sourceport="out1"
            target="CostConstruction" targetport="rgray" type="uchar"/>
        <edge kind="fifo" source="miMatrix" sourceport="mi"
            target="BroadcastMI" targetport="in" type="uchar"/>
        <edge kind="fifo" source="BroadcastMI" sourceport="out"
            target="CostConstruction" targetport="mi" type="uchar"/>
        <edge kind="fifo" source="ReadDisp" sourceport="rgb"
            target="miMatrix" targetport="disparitymap" type="uchar"/>
        <edge kind="dependency" source="two" target="ReadDisp" targetport="id"/>
        <edge kind="dependency" source="width" target="ReadDisp" targetport="width"/>
        <edge kind="dependency" source="width" target="size"/>
        <edge kind="dependency" source="height" target="size"/>
        <edge kind="dependency" source="ndisp" target="genDisp" targetport="ndisp"/>
        <edge kind="dependency" source="size" target="BroadcastR" targetport="size"/>
        <edge kind="dependency" source="size" target="BroadcastL" targetport="size"/>
        <edge kind="dependency" source="width" target="miMatrix" targetport="width"/>
        <edge kind="dependency" source="width" target="CostConstruction" targetport="width"/>
        <edge kind="dependency" source="ndisp" target="miMatrix" targetport="ndisp"/>
        <edge kind="dependency" source="ndisp" target="CostConstruction" targetport="ndisp"/>
        <edge kind="dependency" source="height" target="ReadDisp" targetport="height"/>
        <edge kind="dependency" source="height" target="miMatrix" targetport="height"/>
        <edge kind="dependency" source="MISize" target="BroadcastMI" targetport="MISize"/>
        <edge kind="dependency" source="ndisp" target="BroadcastMI" targetport="ndisp"/>
        <edge kind="dependency" source="height"
            target="CostConstruction" targetport="height"/>
        <edge kind="dependency" source="width" target="CostOUT"/>
        <edge kind="dependency" source="height" target="CostOUT"/>
        <edge kind="dependency" source="ndisp" target="CostOUT"/>
        <edge kind="dependency" source="width" target="lgray"/>
        <edge kind="dependency" source="width" target="rgray"/>
        <edge kind="dependency" source="height" target="lgray"/>
        <edge kind="dependency" source="height" target="rgray"/>
        <edge kind="dependency" source="ndisp" target="BroadcastR" targetport="ndisp"/>
        <edge kind="dependency" source="ndisp" target="BroadcastL" targetport="ndisp"/>
    </graph>
</graphml>
