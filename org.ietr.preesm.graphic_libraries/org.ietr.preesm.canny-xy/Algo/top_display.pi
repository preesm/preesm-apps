<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">top_display</data>
        <node expr="1280" id="width" kind="param"/>
        <node expr="720" id="height" kind="param"/>
        <node expr="2" id="nbSlice" kind="param"/>
        <node expr="2" id="nbColumn" kind="param"/>
        <node expr="height / nbSlice + 2" id="sliceHeight" kind="param"/>
        <node expr="width / nbColumn + 2" id="columnWidth" kind="param"/>
        <node expr="0" id="index" kind="param"/>
        <node expr="100" id="border" kind="param"/>
        <node expr="height+2*border" id="displayHeight" kind="param"/>
        <node expr="width+2*border" id="displayWidth" kind="param"/>
        <node expr="displayHeight*displayWidth" id="displaySize" kind="param"/>
        <node id="Read_YUV" kind="actor">
            <data key="graph_desc">Code/include/yuvRead.h</data>
            <loop name="readY">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="OUT" isConfig="false" name="y" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="u" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="v" type="unsigned char "/>
            </loop>
            <init name="initReadYUV">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
            </init>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="width*height" kind="output" name="y"/>
            <port annotation="NONE" expr="(width/2)*(height/2)"
                kind="output" name="u"/>
            <port annotation="NONE" expr="(width/2)*(height/2)"
                kind="output" name="v"/>
        </node>
        <node id="Split" kind="actor">
            <data key="graph_desc">Code/include/splitMerge2.h</data>
            <loop name="split2">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="nbColumn" type="int"/>
                <param direction="IN" isConfig="true" name="nbSlice" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="output" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="nbColumn"/>
            <port kind="cfg_input" name="nbSlice"/>
            <port annotation="NONE" expr="width*height" kind="input" name="input"/>
            <port annotation="NONE"
                expr="nbColumn*(width/nbColumn+2)*nbSlice*(height/nbSlice+2)"
                kind="output" name="output"/>
        </node>
        <node id="Canny" kind="actor">
            <data key="graph_desc">Code/include/canny.h</data>
            <loop name="canny">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="false" name="gx" type="char "/>
                <param direction="IN" isConfig="false" name="gy" type="char "/>
                <param direction="OUT" isConfig="false" name="output" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="width*height" kind="input" name="gx"/>
            <port annotation="NONE" expr="width*height" kind="input" name="gy"/>
            <port annotation="NONE" expr="width*height" kind="output" name="output"/>
        </node>
        <node id="Merge" kind="actor">
            <data key="graph_desc">Code/include/splitMerge2.h</data>
            <loop name="merge2">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="nbColumn" type="int"/>
                <param direction="IN" isConfig="true" name="nbSlice" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="output" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="nbColumn"/>
            <port kind="cfg_input" name="nbSlice"/>
            <port annotation="NONE"
                expr="nbColumn*(width/nbColumn+2)*nbSlice*(height/nbSlice+2)"
                kind="input" name="input"/>
            <port annotation="NONE" expr="width*height" kind="output" name="output"/>
        </node>
        <node id="Display" kind="actor">
            <data key="graph_desc">Code/include/yuvDisplay.h</data>
            <loop name="yuvDisplay">
                <param direction="IN" isConfig="true" name="id" type="int"/>
                <param direction="IN" isConfig="false" name="y" type="unsigned char "/>
                <param direction="IN" isConfig="false" name="u" type="unsigned char "/>
                <param direction="IN" isConfig="false" name="v" type="unsigned char "/>
            </loop>
            <init name="yuvDisplayInit">
                <param direction="IN" isConfig="true" name="id" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
            </init>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="id"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="width*height" kind="input" name="y"/>
            <port annotation="NONE" expr="(width/2)*(height/2)"
                kind="input" name="u"/>
            <port annotation="NONE" expr="(width/2)*(height/2)"
                kind="input" name="v"/>
        </node>
        <node id="Sobel2" kind="actor">
            <data key="graph_desc">Code/include/sobel2.h</data>
            <loop name="sobel2">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="output_x" type="char "/>
                <param direction="OUT" isConfig="false" name="output_y" type="char "/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="width*height" kind="input" name="input"/>
            <port annotation="NONE" expr="width*height" kind="output" name="output_x"/>
            <port annotation="NONE" expr="width*height" kind="output" name="output_y"/>
        </node>
        <edge kind="fifo" source="Read_YUV" sourceport="y"
            target="Split" targetport="input" type="uchar"/>
        <edge kind="fifo" source="Canny" sourceport="output"
            target="Merge" targetport="input" type="uchar"/>
        <edge kind="fifo" source="Read_YUV" sourceport="u"
            target="Display" targetport="u" type="uchar"/>
        <edge kind="fifo" source="Read_YUV" sourceport="v"
            target="Display" targetport="v" type="uchar"/>
        <edge kind="fifo" source="Split" sourceport="output"
            target="Sobel2" targetport="input" type="uchar"/>
        <edge kind="fifo" source="Sobel2" sourceport="output_x"
            target="Canny" targetport="gx" type="char"/>
        <edge kind="fifo" source="Sobel2" sourceport="output_y"
            target="Canny" targetport="gy" type="char"/>
        <edge kind="fifo" source="Merge" sourceport="output"
            target="Display" targetport="y" type="uchar"/>
        <edge kind="dependency" source="width" target="columnWidth"/>
        <edge kind="dependency" source="nbColumn" target="columnWidth"/>
        <edge kind="dependency" source="height" target="sliceHeight"/>
        <edge kind="dependency" source="nbSlice" target="sliceHeight"/>
        <edge kind="dependency" source="width" target="Read_YUV" targetport="width"/>
        <edge kind="dependency" source="height" target="Read_YUV" targetport="height"/>
        <edge kind="dependency" source="width" target="Split" targetport="width"/>
        <edge kind="dependency" source="height" target="Split" targetport="height"/>
        <edge kind="dependency" source="nbColumn" target="Split" targetport="nbColumn"/>
        <edge kind="dependency" source="nbSlice" target="Split" targetport="nbSlice"/>
        <edge kind="dependency" source="sliceHeight" target="Canny" targetport="width"/>
        <edge kind="dependency" source="columnWidth" target="Canny" targetport="height"/>
        <edge kind="dependency" source="width" target="Merge" targetport="width"/>
        <edge kind="dependency" source="height" target="Merge" targetport="height"/>
        <edge kind="dependency" source="nbColumn" target="Merge" targetport="nbColumn"/>
        <edge kind="dependency" source="nbSlice" target="Merge" targetport="nbSlice"/>
        <edge kind="dependency" source="width" target="Display" targetport="width"/>
        <edge kind="dependency" source="index" target="Display" targetport="id"/>
        <edge kind="dependency" source="height" target="Display" targetport="height"/>
        <edge kind="dependency" source="height" target="displayHeight"/>
        <edge kind="dependency" source="border" target="displayHeight"/>
        <edge kind="dependency" source="width" target="displayWidth"/>
        <edge kind="dependency" source="border" target="displayWidth"/>
        <edge kind="dependency" source="displayHeight" target="displaySize"/>
        <edge kind="dependency" source="displayWidth" target="displaySize"/>
        <edge kind="dependency" source="sliceHeight" target="Sobel2" targetport="height"/>
        <edge kind="dependency" source="columnWidth" target="Sobel2" targetport="width"/>
    </graph>
</graphml>
