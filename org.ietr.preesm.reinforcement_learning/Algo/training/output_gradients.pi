<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">output_gradients</data>
        <node id="output_size" kind="cfg_in_iface"/>
        <node id="input_size" kind="cfg_in_iface"/>
        <node id="valid" kind="cfg_in_iface"/>
        <node id="layer_weights" kind="src">
            <port annotation="NONE" expr="output_size *  input_size"
                kind="output" name="layer_weights"/>
        </node>
        <node id="target" kind="src">
            <port annotation="NONE" expr="output_size" kind="output" name="target"/>
        </node>
        <node id="inputs" kind="src">
            <port annotation="NONE" expr="input_size" kind="output" name="inputs"/>
        </node>
        <node id="weights_gradient" kind="snk">
            <port annotation="NONE" expr="layer_size * input_size"
                kind="input" name="weights_gradient"/>
        </node>
        <node id="Compute_Sigma" kind="actor">
            <data key="graph_desc">Code/include/mlp_training.h</data>
            <loop name="computeOutputSigma">
                <param direction="IN" isConfig="true" name="output_size" type="int"/>
                <param direction="IN" isConfig="true" name="valid" type="int"/>
                <param direction="IN" isConfig="false"
                    name="derivative_values" type="float "/>
                <param direction="IN" isConfig="false" name="predicted" type="float "/>
                <param direction="IN" isConfig="false" name="target" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="output_sigmas" type="float "/>
            </loop>
            <port kind="cfg_input" name="output_size"/>
            <port kind="cfg_input" name="valid"/>
            <port annotation="NONE" expr="output_size" kind="input" name="derivative_values"/>
            <port annotation="NONE" expr="output_size" kind="input" name="predicted"/>
            <port annotation="NONE" expr="output_size" kind="input" name="target"/>
            <port annotation="NONE" expr="output_size" kind="output" name="output_sigmas"/>
        </node>
        <node id="layer_bias" kind="src">
            <port annotation="NONE" expr="output_size" kind="output" name="layer_bias"/>
        </node>
        <node id="Compute_Gradients" kind="actor">
            <data key="graph_desc">Code/include/mlp_training.h</data>
            <loop name="computeLayerWeightsGradients">
                <param direction="IN" isConfig="true" name="input_size" type="int"/>
                <param direction="IN" isConfig="true" name="layer_size" type="int"/>
                <param direction="IN" isConfig="true" name="valid" type="int"/>
                <param direction="IN" isConfig="false" name="sigmas" type="float "/>
                <param direction="IN" isConfig="false" name="inputs" type="float "/>
                <param direction="OUT" isConfig="false" name="gradients" type="float "/>
            </loop>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="layer_size"/>
            <port kind="cfg_input" name="valid"/>
            <port annotation="NONE" expr="layer_size" kind="input" name="sigmas"/>
            <port annotation="NONE" expr="input_size" kind="input" name="inputs"/>
            <port annotation="NONE" expr="layer_size * input_size"
                kind="output" name="gradients"/>
        </node>
        <node id="layer" kind="actor">
            <data key="graph_desc">Algo/common/mlp_layer.pi</data>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="layer_size"/>
            <port kind="cfg_input" name="valid"/>
            <port annotation="NONE" expr="input_size" kind="input" name="input"/>
            <port annotation="NONE" expr="layer_size" kind="input" name="bias_values"/>
            <port annotation="NONE" expr="input_size * layer_size"
                kind="input" name="weights"/>
            <port annotation="NONE" expr="layer_size" kind="output" name="output"/>
        </node>
        <node id="BroadcastInput" kind="broadcast">
            <port kind="cfg_input" name="input_size"/>
            <port annotation="NONE" expr="input_size" kind="input" name="in"/>
            <port annotation="NONE" expr="input_size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="input_size" kind="output" name="out_0"/>
        </node>
        <node id="Derivative_Function" kind="actor">
            <data key="graph_desc">Code/include/mlp.h</data>
            <loop name="derivativeTanHyperbolic">
                <param direction="IN" isConfig="true" name="valid" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="float "/>
                <param direction="OUT" isConfig="false" name="output" type="float "/>
            </loop>
            <port kind="cfg_input" name="valid"/>
            <port annotation="NONE" expr="1" kind="input" name="input"/>
            <port annotation="NONE" expr="1" kind="output" name="output"/>
        </node>
        <node id="bias_gradient" kind="snk">
            <port annotation="NONE" expr="layer_size" kind="input" name="bias_gradient"/>
        </node>
        <node id="BroadcastSigma" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="in"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
        </node>
        <node id="Activation_Function" kind="actor">
            <data key="graph_desc">Code/include/mlp.h</data>
            <loop name="activateTanHyperbolic">
                <param direction="IN" isConfig="true" name="valid" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="float "/>
                <param direction="OUT" isConfig="false" name="output" type="float "/>
            </loop>
            <port kind="cfg_input" name="valid"/>
            <port annotation="NONE" expr="1" kind="input" name="input"/>
            <port annotation="NONE" expr="1" kind="output" name="output"/>
        </node>
        <node id="BroadcastPre-Activated" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="in"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
        </node>
        <edge kind="fifo" source="target" sourceport="target"
            target="Compute_Sigma" targetport="target" type="float"/>
        <edge kind="fifo" source="Compute_Gradients"
            sourceport="gradients" target="weights_gradient"
            targetport="weights_gradient" type="float"/>
        <edge kind="fifo" source="BroadcastInput" sourceport="out_0"
            target="Compute_Gradients" targetport="inputs" type="float"/>
        <edge kind="fifo" source="inputs" sourceport="inputs"
            target="BroadcastInput" targetport="in" type="float"/>
        <edge kind="fifo" source="BroadcastInput" sourceport="out_1"
            target="layer" targetport="input" type="float"/>
        <edge kind="fifo" source="layer_weights"
            sourceport="layer_weights" target="layer"
            targetport="weights" type="float"/>
        <edge kind="fifo" source="Derivative_Function"
            sourceport="output" target="Compute_Sigma"
            targetport="derivative_values" type="float"/>
        <edge kind="fifo" source="layer_bias" sourceport="layer_bias"
            target="layer" targetport="bias_values" type="float"/>
        <edge kind="fifo" source="Compute_Sigma"
            sourceport="output_sigmas" target="BroadcastSigma"
            targetport="in" type="float"/>
        <edge kind="fifo" source="BroadcastSigma" sourceport="out_1"
            target="Compute_Gradients" targetport="sigmas" type="float"/>
        <edge kind="fifo" source="BroadcastSigma" sourceport="out_0"
            target="bias_gradient" targetport="bias_gradient" type="float"/>
        <edge kind="fifo" source="layer" sourceport="output"
            target="BroadcastPre-Activated" targetport="in" type="float"/>
        <edge kind="fifo" source="BroadcastPre-Activated"
            sourceport="out_1" target="Derivative_Function"
            targetport="input" type="float"/>
        <edge kind="fifo" source="BroadcastPre-Activated"
            sourceport="out_0" target="Activation_Function"
            targetport="input" type="float"/>
        <edge kind="fifo" source="Activation_Function"
            sourceport="output" target="Compute_Sigma"
            targetport="predicted" type="float"/>
        <edge kind="dependency" source="output_size"
            target="Compute_Sigma" targetport="output_size"/>
        <edge kind="dependency" source="input_size" target="inputs"/>
        <edge kind="dependency" source="input_size" target="weights_gradient"/>
        <edge kind="dependency" source="input_size"
            target="Compute_Gradients" targetport="input_size"/>
        <edge kind="dependency" source="output_size" target="target"/>
        <edge kind="dependency" source="input_size" target="layer_weights"/>
        <edge kind="dependency" source="input_size" target="layer" targetport="input_size"/>
        <edge kind="dependency" source="input_size"
            target="BroadcastInput" targetport="input_size"/>
        <edge kind="dependency" source="output_size" target="layer" targetport="layer_size"/>
        <edge kind="dependency" source="output_size" target="layer_weights"/>
        <edge kind="dependency" source="output_size" target="layer_bias"/>
        <edge kind="dependency" source="output_size"
            target="BroadcastPre-Activated" targetport="size"/>
        <edge kind="dependency" source="output_size"
            target="Compute_Gradients" targetport="layer_size"/>
        <edge kind="dependency" source="output_size"
            target="BroadcastSigma" targetport="size"/>
        <edge kind="dependency" source="valid" target="layer" targetport="valid"/>
        <edge kind="dependency" source="valid"
            target="Derivative_Function" targetport="valid"/>
        <edge kind="dependency" source="valid"
            target="Activation_Function" targetport="valid"/>
        <edge kind="dependency" source="valid" target="Compute_Sigma" targetport="valid"/>
        <edge kind="dependency" source="valid"
            target="Compute_Gradients" targetport="valid"/>
    </graph>
</graphml>
