<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">mlp_2layers</data>
        <node id="output_size" kind="cfg_in_iface"/>
        <node id="input_size" kind="cfg_in_iface"/>
        <node expr="hidden_size_1*output_size"
            id="size_weights_output" kind="param"/>
        <node id="hidden_size_0" kind="cfg_in_iface"/>
        <node id="hidden_size_1" kind="cfg_in_iface"/>
        <node expr="input_size * hidden_size_0"
            id="size_weights_hidden_0" kind="param"/>
        <node expr="hidden_size_0*hidden_size_1"
            id="size_weights_hidden_1" kind="param"/>
        <node expr="hidden_size_0 + hidden_size_1 + output_size"
            id="size_bias" kind="param"/>
        <node
            expr="size_weights_hidden_0 + size_weights_hidden_1 + size_weights_output"
            id="size_weights" kind="param"/>
        <node id="Output_layer" kind="actor" period="0">
            <data key="graph_desc">Algo/common/neuron.pi</data>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="layer_size"/>
            <port annotation="NONE" expr="input_size"
                kind="input" name="input"/>
            <port annotation="NONE" expr="1" kind="input" name="valid"/>
            <port annotation="NONE" expr="layer_size"
                kind="input" name="bias_values"/>
            <port annotation="NONE"
                expr="input_size * layer_size" kind="input" name="weights"/>
            <port annotation="NONE" expr="layer_size"
                kind="output" name="output"/>
        </node>
        <node id="Hidden_layer_0" kind="actor" period="0">
            <data key="graph_desc">Algo/common/neuron.pi</data>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="layer_size"/>
            <port annotation="NONE" expr="1" kind="input" name="valid"/>
            <port annotation="NONE" expr="input_size"
                kind="input" name="input"/>
            <port annotation="NONE" expr="layer_size"
                kind="input" name="bias_values"/>
            <port annotation="NONE"
                expr="input_size * layer_size" kind="input" name="weights"/>
            <port annotation="NONE" expr="layer_size"
                kind="output" name="output"/>
        </node>
        <node id="output" kind="snk">
            <port annotation="NONE" expr="output_size"
                kind="input" name="output"/>
        </node>
        <node id="input" kind="src">
            <port annotation="NONE" expr="input_size"
                kind="output" name="input"/>
        </node>
        <node id="weights" kind="src">
            <port annotation="NONE" expr="size_weights"
                kind="output" name="weights"/>
        </node>
        <node id="bias" kind="src">
            <port annotation="NONE" expr="size_bias"
                kind="output" name="bias"/>
        </node>
        <node id="ForkBias" kind="fork">
            <port kind="cfg_input" name="size_out0"/>
            <port kind="cfg_input" name="size_out1"/>
            <port kind="cfg_input" name="size_out2"/>
            <port annotation="NONE"
                expr="size_out0 + size_out1 + size_out2"
                kind="input" name="bias_in"/>
            <port annotation="NONE" expr="size_out0"
                kind="output" name="bias_out0"/>
            <port annotation="NONE" expr="size_out1"
                kind="output" name="bias_out1"/>
            <port annotation="NONE" expr="size_out2"
                kind="output" name="bias_out2"/>
        </node>
        <node id="activationFunction_0" kind="actor" period="0">
            <data key="graph_desc">Spider/include/mlp.h</data>
            <loop name="activateTanHyperbolic">
                <param direction="IN" isConfig="false"
                    name="input" type="float "/>
                <param direction="IN" isConfig="false"
                    name="valid" type="int "/>
                <param direction="OUT" isConfig="false"
                    name="output" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="input" name="input"/>
            <port annotation="NONE" expr="1" kind="input" name="valid"/>
            <port annotation="NONE" expr="1" kind="output" name="output"/>
        </node>
        <node id="valid_mlp" kind="actor" period="0">
            <data key="graph_desc">Spider/include/common.h</data>
            <loop name="valid">
                <param direction="OUT" isConfig="false"
                    name="valid" type="int "/>
            </loop>
            <port annotation="NONE" expr="1" kind="output" name="valid"/>
        </node>
        <node id="BroadCastValid" kind="broadcast">
            <port kind="cfg_input" name="hidden_size_0"/>
            <port kind="cfg_input" name="hidden_size_1"/>
            <port annotation="NONE" expr="1" kind="input" name="in"/>
            <port annotation="NONE" expr="1" kind="output" name="out_0"/>
            <port annotation="NONE" expr="hidden_size_0"
                kind="output" name="out_1"/>
            <port annotation="NONE" expr="1" kind="output" name="out_2"/>
            <port annotation="NONE" expr="hidden_size_1"
                kind="output" name="out_3"/>
            <port annotation="NONE" expr="1" kind="output" name="out_4"/>
        </node>
        <node id="outputActivation" kind="actor" period="0">
            <data key="graph_desc">Spider/include/mlp.h</data>
            <loop name="activateLinear">
                <param direction="IN" isConfig="false"
                    name="input" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="output" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="input" name="input"/>
            <port annotation="NONE" expr="1" kind="output" name="output"/>
        </node>
        <node id="ForkWeights" kind="fork">
            <port kind="cfg_input" name="size_out0"/>
            <port kind="cfg_input" name="size_out1"/>
            <port kind="cfg_input" name="size_out2"/>
            <port annotation="NONE"
                expr="size_out0 + size_out1 + size_out2"
                kind="input" name="weights_in"/>
            <port annotation="NONE" expr="size_out0"
                kind="output" name="weights_out0"/>
            <port annotation="NONE" expr="size_out1"
                kind="output" name="weights_out1"/>
            <port annotation="NONE" expr="size_out2"
                kind="output" name="weights_out2"/>
        </node>
        <node id="Hidden_layer_1" kind="actor" period="0">
            <data key="graph_desc">Algo/common/neuron.pi</data>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="layer_size"/>
            <port annotation="NONE" expr="1" kind="input" name="valid"/>
            <port annotation="NONE" expr="input_size"
                kind="input" name="input"/>
            <port annotation="NONE" expr="layer_size"
                kind="input" name="bias_values"/>
            <port annotation="NONE"
                expr="input_size * layer_size" kind="input" name="weights"/>
            <port annotation="NONE" expr="layer_size"
                kind="output" name="output"/>
        </node>
        <node id="activationFunction_1" kind="actor" period="0">
            <data key="graph_desc">Spider/include/mlp.h</data>
            <loop name="activateTanHyperbolic">
                <param direction="IN" isConfig="false"
                    name="input" type="float "/>
                <param direction="IN" isConfig="false"
                    name="valid" type="int "/>
                <param direction="OUT" isConfig="false"
                    name="output" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="input" name="input"/>
            <port annotation="NONE" expr="1" kind="input" name="valid"/>
            <port annotation="NONE" expr="1" kind="output" name="output"/>
        </node>
        <edge kind="fifo" source="input" sourceport="input"
            target="Hidden_layer_0" targetport="input" type="float"/>
        <edge kind="fifo" source="bias" sourceport="bias"
            target="ForkBias" targetport="bias_in" type="float"/>
        <edge kind="fifo" source="Hidden_layer_0"
            sourceport="output" target="activationFunction_0"
            targetport="input" type="float"/>
        <edge kind="fifo" source="valid_mlp" sourceport="valid"
            target="BroadCastValid" targetport="in" type="int"/>
        <edge kind="fifo" source="BroadCastValid"
            sourceport="out_0" target="Hidden_layer_0"
            targetport="valid" type="int"/>
        <edge kind="fifo" source="outputActivation"
            sourceport="output" target="output"
            targetport="output" type="float"/>
        <edge kind="fifo" source="Output_layer"
            sourceport="output" target="outputActivation"
            targetport="input" type="float"/>
        <edge kind="fifo" source="weights" sourceport="weights"
            target="ForkWeights" targetport="weights_in" type="float"/>
        <edge kind="fifo" source="Hidden_layer_1"
            sourceport="output" target="activationFunction_1"
            targetport="input" type="float"/>
        <edge kind="fifo" source="activationFunction_0"
            sourceport="output" target="Hidden_layer_1"
            targetport="input" type="float"/>
        <edge kind="fifo" source="activationFunction_1"
            sourceport="output" target="Output_layer"
            targetport="input" type="float"/>
        <edge kind="fifo" source="BroadCastValid"
            sourceport="out_1" target="activationFunction_0"
            targetport="valid" type="int"/>
        <edge kind="fifo" source="BroadCastValid"
            sourceport="out_2" target="Hidden_layer_1"
            targetport="valid" type="int"/>
        <edge kind="fifo" source="BroadCastValid"
            sourceport="out_3" target="activationFunction_1"
            targetport="valid" type="int"/>
        <edge kind="fifo" source="BroadCastValid"
            sourceport="out_4" target="Output_layer"
            targetport="valid" type="int"/>
        <edge kind="fifo" source="ForkBias"
            sourceport="bias_out0" target="Hidden_layer_0"
            targetport="bias_values" type="float"/>
        <edge kind="fifo" source="ForkBias"
            sourceport="bias_out1" target="Hidden_layer_1"
            targetport="bias_values" type="float"/>
        <edge kind="fifo" source="ForkBias"
            sourceport="bias_out2" target="Output_layer"
            targetport="bias_values" type="float"/>
        <edge kind="fifo" source="ForkWeights"
            sourceport="weights_out0" target="Hidden_layer_0"
            targetport="weights" type="float"/>
        <edge kind="fifo" source="ForkWeights"
            sourceport="weights_out1" target="Hidden_layer_1"
            targetport="weights" type="float"/>
        <edge kind="fifo" source="ForkWeights"
            sourceport="weights_out2" target="Output_layer"
            targetport="weights" type="float"/>
        <edge kind="dependency" source="output_size" target="output"/>
        <edge kind="dependency" source="input_size" target="input"/>
        <edge kind="dependency" source="input_size"
            target="Hidden_layer_0" targetport="input_size"/>
        <edge kind="dependency" source="output_size"
            target="Output_layer" targetport="layer_size"/>
        <edge kind="dependency" source="output_size" target="size_weights_output"/>
        <edge kind="dependency" source="hidden_size_0" target="size_weights_hidden_0"/>
        <edge kind="dependency" source="input_size" target="size_weights_hidden_0"/>
        <edge kind="dependency" source="hidden_size_0" target="size_weights_hidden_1"/>
        <edge kind="dependency" source="hidden_size_1" target="size_weights_hidden_1"/>
        <edge kind="dependency" source="hidden_size_1" target="size_weights_output"/>
        <edge kind="dependency" source="hidden_size_0"
            target="BroadCastValid" targetport="hidden_size_0"/>
        <edge kind="dependency" source="hidden_size_1"
            target="BroadCastValid" targetport="hidden_size_1"/>
        <edge kind="dependency" source="hidden_size_0"
            target="Hidden_layer_0" targetport="layer_size"/>
        <edge kind="dependency" source="hidden_size_1"
            target="Hidden_layer_1" targetport="layer_size"/>
        <edge kind="dependency" source="hidden_size_1"
            target="Output_layer" targetport="input_size"/>
        <edge kind="dependency" source="hidden_size_0"
            target="ForkBias" targetport="size_out0"/>
        <edge kind="dependency" source="hidden_size_1"
            target="ForkBias" targetport="size_out1"/>
        <edge kind="dependency" source="output_size"
            target="ForkBias" targetport="size_out2"/>
        <edge kind="dependency" source="size_weights_hidden_0"
            target="ForkWeights" targetport="size_out0"/>
        <edge kind="dependency" source="size_weights_hidden_1"
            target="ForkWeights" targetport="size_out1"/>
        <edge kind="dependency" source="size_weights_output"
            target="ForkWeights" targetport="size_out2"/>
        <edge kind="dependency" source="hidden_size_0" target="size_bias"/>
        <edge kind="dependency" source="hidden_size_1" target="size_bias"/>
        <edge kind="dependency" source="output_size" target="size_bias"/>
        <edge kind="dependency" source="size_weights_output" target="size_weights"/>
        <edge kind="dependency" source="size_weights_hidden_1" target="size_weights"/>
        <edge kind="dependency" source="size_weights_hidden_0" target="size_weights"/>
        <edge kind="dependency" source="size_weights" target="weights"/>
        <edge kind="dependency" source="size_bias" target="bias"/>
        <edge kind="dependency" source="hidden_size_0"
            target="Hidden_layer_1" targetport="input_size"/>
    </graph>
</graphml>
