<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">dynamicWrapper</data>
        <node id="width" kind="cfg_in_iface"/>
        <node id="height" kind="cfg_in_iface"/>
        <node expr="1" id="decision" kind="param"/>
        <node id="background" kind="cfg_in_iface"/>
        <node id="in" kind="src">
            <port annotation="NONE" expr="height*width" kind="output" name="in"/>
        </node>
        <node id="out" kind="snk">
            <port annotation="NONE" expr="height*width" kind="input" name="out"/>
        </node>
        <node id="imgProcessing" kind="actor">
            <data key="graph_desc">Algo/imgProcessing.pi</data>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="decision"/>
            <port kind="cfg_input" name="background"/>
            <port annotation="NONE" expr="height*width*decision"
                kind="input" name="in"/>
            <port annotation="NONE" expr="height*width*decision"
                kind="output" name="out"/>
        </node>
        <node id="brightness" kind="src">
            <port annotation="NONE" expr="1" kind="output" name="brightness"/>
        </node>
        <node id="makeDecision" kind="actor">
            <data key="graph_desc">Code/include/brightnessEvaluation.h</data>
            <loop name="makeDecision">
                <param direction="IN" isConfig="false" name="brightness" type="float "/>
                <param direction="OUT" isConfig="true" name="decision" type="Param "/>
            </loop>
            <port annotation="NONE" kind="cfg_output" name="decision"/>
            <port annotation="NONE" expr="1" kind="input" name="brightness"/>
        </node>
        <node id="switch" kind="fork">
            <port kind="cfg_input" name="decision"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port annotation="NONE" expr="height*width" kind="input" name="in"/>
            <port annotation="NONE" expr="height*width*decision"
                kind="output" name="out_0"/>
        </node>
        <node id="select" kind="join">
            <port kind="cfg_input" name="decision"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port annotation="NONE" expr="height*width*decision"
                kind="input" name="in_0"/>
            <port annotation="NONE" expr="height*width*(1-decision)"
                kind="input" name="in_1"/>
            <port annotation="NONE" expr="height*width" kind="output" name="out"/>
        </node>
        <node id="generateNothing" kind="actor">
            <data key="graph_desc">Code/include/brightnessEvaluation.h</data>
            <loop name="generateNothing">
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="value" type="int"/>
                <param direction="OUT" isConfig="false" name="out" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="value"/>
            <port kind="cfg_input" name="decision"/>
            <port annotation="NONE" expr="height*width*(1-decision)"
                kind="output" name="out"/>
        </node>
        <edge kind="fifo" source="in" sourceport="in" target="switch"
            targetport="in" type="uchar"/>
        <edge kind="fifo" source="imgProcessing" sourceport="out"
            target="select" targetport="in_0" type="uchar"/>
        <edge kind="fifo" source="brightness" sourceport="brightness"
            target="makeDecision" targetport="brightness" type="float"/>
        <edge kind="fifo" source="switch" sourceport="out_0"
            target="imgProcessing" targetport="in" type="uchar"/>
        <edge kind="fifo" source="generateNothing" sourceport="out"
            target="select" targetport="in_1" type="uchar"/>
        <edge kind="fifo" source="select" sourceport="out" target="out"
            targetport="out" type="uchar"/>
        <edge kind="dependency" source="width" target="in"/>
        <edge kind="dependency" source="height" target="out"/>
        <edge kind="dependency" source="width" target="imgProcessing" targetport="width"/>
        <edge kind="dependency" source="height" target="in"/>
        <edge kind="dependency" source="width" target="out"/>
        <edge kind="dependency" source="makeDecision"
            sourceport="decision" target="decision"/>
        <edge kind="dependency" source="decision" target="imgProcessing" targetport="decision"/>
        <edge kind="dependency" source="height" target="imgProcessing" targetport="height"/>
        <edge kind="dependency" source="decision" target="switch" targetport="decision"/>
        <edge kind="dependency" source="decision" target="select" targetport="decision"/>
        <edge kind="dependency" source="height" target="select" targetport="height"/>
        <edge kind="dependency" source="width" target="select" targetport="width"/>
        <edge kind="dependency" source="height" target="switch" targetport="height"/>
        <edge kind="dependency" source="width" target="switch" targetport="width"/>
        <edge kind="dependency" source="background"
            target="generateNothing" targetport="value"/>
        <edge kind="dependency" source="height" target="generateNothing" targetport="height"/>
        <edge kind="dependency" source="width" target="generateNothing" targetport="width"/>
        <edge kind="dependency" source="decision"
            target="generateNothing" targetport="decision"/>
        <edge kind="dependency" source="background"
            target="imgProcessing" targetport="background"/>
    </graph>
</graphml>
