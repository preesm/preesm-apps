<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">imgProcessing</data>
        <node id="height" kind="cfg_in_iface"/>
        <node id="width" kind="cfg_in_iface"/>
        <node expr="8" id="nbSlice" kind="param"/>
        <node expr="1" id="overlap" kind="param"/>
        <node expr="height/nbSlice+2*overlap" id="sobelHeight" kind="param"/>
        <node id="in" kind="src">
            <port annotation="NONE" expr="height*width" kind="output" name="in"/>
        </node>
        <node id="out" kind="snk">
            <port annotation="NONE" expr="height*width" kind="input" name="out"/>
        </node>
        <node id="Sobel" kind="actor">
            <data key="graph_desc">Code/include/sobel.h</data>
            <loop name="sobel">
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="output" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="width*height" kind="input" name="input"/>
            <port annotation="NONE" expr="width*(height-2)"
                kind="output" name="output"/>
        </node>
        <node id="split" kind="actor">
            <data key="graph_desc">Code/include/splitMerge.h</data>
            <loop name="split">
                <param direction="IN" isConfig="true" name="nbSlice" type="int"/>
                <param direction="IN" isConfig="true" name="width" type="int"/>
                <param direction="IN" isConfig="true" name="height" type="int"/>
                <param direction="IN" isConfig="true" name="overlap" type="int"/>
                <param direction="IN" isConfig="false" name="input" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="output" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="nbSlice"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="overlap"/>
            <port annotation="NONE" expr="height*width" kind="input" name="input"/>
            <port annotation="NONE"
                expr="nbSlice*width*(height/nbSlice+2*overlap)"
                kind="output" name="output"/>
        </node>
        <edge kind="fifo" source="in" sourceport="in" target="split"
            targetport="input" type="uchar"/>
        <edge kind="fifo" source="Sobel" sourceport="output"
            target="out" targetport="out" type="uchar"/>
        <edge kind="fifo" source="split" sourceport="output"
            target="Sobel" targetport="input" type="uchar"/>
        <edge kind="dependency" source="width" target="in"/>
        <edge kind="dependency" source="height" target="in"/>
        <edge kind="dependency" source="height" target="out"/>
        <edge kind="dependency" source="width" target="out"/>
        <edge kind="dependency" source="width" target="Sobel" targetport="width"/>
        <edge kind="dependency" source="width" target="split" targetport="width"/>
        <edge kind="dependency" source="height" target="split" targetport="height"/>
        <edge kind="dependency" source="nbSlice" target="split" targetport="nbSlice"/>
        <edge kind="dependency" source="overlap" target="split" targetport="overlap"/>
        <edge kind="dependency" source="height" target="sobelHeight"/>
        <edge kind="dependency" source="overlap" target="sobelHeight"/>
        <edge kind="dependency" source="nbSlice" target="sobelHeight"/>
        <edge kind="dependency" source="sobelHeight" target="Sobel" targetport="height"/>
    </graph>
</graphml>
