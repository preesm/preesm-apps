<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <key attr.name="delay" attr.type="string" for="edge"/>
    <graph edgedefault="directed">
        <data key="name">stabilization</data>
        <node id="width" kind="cfg_in_iface"/>
        <node id="height" kind="cfg_in_iface"/>
        <node id="border" kind="cfg_in_iface"/>
        <node expr="32" id="blockWidth" kind="param"/>
        <node expr="32" id="blockHeight" kind="param"/>
        <node expr="21" id="maxDeltaY" kind="param"/>
        <node expr="38" id="maxDeltaX" kind="param"/>
        <node expr="floor(height/blockHeight)*floor(width/blockWidth)"
            id="nbVectors" kind="param"/>
        <node expr="width+2*border" id="displayWidth" kind="param"/>
        <node expr="height+2*border" id="displayHeight" kind="param"/>
        <node id="y" kind="src">
            <port annotation="NONE" expr="height*width" kind="output" name="y"/>
        </node>
        <node id="rY" kind="snk">
            <port annotation="NONE" expr="displayHeight*displayWidth"
                kind="input" name="rY"/>
        </node>
        <node id="u" kind="src">
            <port annotation="NONE" expr="height/2*width/2"
                kind="output" name="u"/>
        </node>
        <node id="v" kind="src">
            <port annotation="NONE" expr="height/2*width/2"
                kind="output" name="v"/>
        </node>
        <node id="rU" kind="snk">
            <port annotation="NONE"
                expr="displayHeight/2*displayWidth/2" kind="input" name="rU"/>
        </node>
        <node id="rV" kind="snk">
            <port annotation="NONE"
                expr="displayHeight/2*displayWidth/2" kind="input" name="rV"/>
        </node>
        <node id="ComputeBlockMotionVectors" kind="actor">
            <data key="graph_desc">Code/include/stabilization.h</data>
            <loop name="computeBlockMotionVectors">
                <param direction="IN" isConfig="true" name="width" type="const int"/>
                <param direction="IN" isConfig="true" name="height" type="const int"/>
                <param direction="IN" isConfig="true" name="blockWidth" type="const int"/>
                <param direction="IN" isConfig="true" name="blockHeight" type="const int"/>
                <param direction="IN" isConfig="true" name="maxDeltaX" type="const int"/>
                <param direction="IN" isConfig="true" name="maxDeltaY" type="const int"/>
                <param direction="IN" isConfig="false" name="frame" type="const unsigned char "/>
                <param direction="IN" isConfig="false"
                    name="previousFrame" type="const unsigned char "/>
                <param direction="OUT" isConfig="false" name="vectors" type="coord "/>
            </loop>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="blockWidth"/>
            <port kind="cfg_input" name="blockHeight"/>
            <port kind="cfg_input" name="maxDeltaX"/>
            <port kind="cfg_input" name="maxDeltaY"/>
            <port kind="cfg_input" name="nbVectors"/>
            <port annotation="NONE" expr="height*width" kind="input" name="frame"/>
            <port annotation="NONE" expr="height*width" kind="input" name="previousFrame"/>
            <port annotation="NONE" expr="nbVectors" kind="output" name="vectors"/>
        </node>
        <node id="DuplicateFrame" kind="broadcast">
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="height*width" kind="input" name="in"/>
            <port annotation="NONE" expr="height*width" kind="output" name="out_0"/>
            <port annotation="NONE" expr="height*width" kind="output" name="out_1"/>
            <port annotation="NONE" expr="height*width" kind="output" name="out_2"/>
        </node>
        <node id="FindDominatingMotion" kind="actor">
            <data key="graph_desc">Code/include/stabilization.h</data>
            <loop name="findDominatingMotionVector">
                <param direction="IN" isConfig="true" name="nbVectors" type="const int"/>
                <param direction="IN" isConfig="false" name="vectors" type="const coord "/>
                <param direction="OUT" isConfig="false"
                    name="dominatingVector" type="coordf "/>
            </loop>
            <port kind="cfg_input" name="nbVectors"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="height"/>
            <port annotation="NONE" expr="nbVectors" kind="input" name="vectors"/>
            <port annotation="NONE" expr="1" kind="output" name="dominatingVector"/>
        </node>
        <node id="renderFrame" kind="actor">
            <data key="graph_desc">Code/include/stabilization.h</data>
            <loop name="renderFrame">
                <param direction="IN" isConfig="true" name="frameWidth" type="const int"/>
                <param direction="IN" isConfig="true" name="frameHeight" type="const int"/>
                <param direction="IN" isConfig="true" name="dispWidth" type="const int"/>
                <param direction="IN" isConfig="true" name="dispHeight" type="const int"/>
                <param direction="IN" isConfig="false" name="delta" type="const coord "/>
                <param direction="IN" isConfig="false" name="yIn" type="const unsigned char "/>
                <param direction="IN" isConfig="false" name="uIn" type="const unsigned char "/>
                <param direction="IN" isConfig="false" name="vIn" type="const unsigned char "/>
                <param direction="OUT" isConfig="false" name="yOut" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="uOut" type="unsigned char "/>
                <param direction="OUT" isConfig="false" name="vOut" type="unsigned char "/>
            </loop>
            <port kind="cfg_input" name="frameWidth"/>
            <port kind="cfg_input" name="frameHeight"/>
            <port kind="cfg_input" name="dispWidth"/>
            <port kind="cfg_input" name="dispHeight"/>
            <port annotation="NONE" expr="1" kind="input" name="delta"/>
            <port annotation="NONE" expr="frameHeight*frameWidth"
                kind="input" name="yIn"/>
            <port annotation="NONE" expr="frameHeight/2*frameWidth/2"
                kind="input" name="uIn"/>
            <port annotation="NONE" expr="frameHeight/2*frameWidth/2"
                kind="input" name="vIn"/>
            <port annotation="NONE" expr="dispHeight*dispWidth"
                kind="output" name="yOut"/>
            <port annotation="NONE" expr="dispHeight/2*dispWidth/2"
                kind="output" name="uOut"/>
            <port annotation="NONE" expr="dispHeight/2*dispWidth/2"
                kind="output" name="vOut"/>
        </node>
        <node id="AccumulateMotion" kind="actor">
            <data key="graph_desc">Code/include/stabilization.h</data>
            <loop name="accumulateMotion">
                <param direction="IN" isConfig="false"
                    name="motionVector" type="const coordf "/>
                <param direction="IN" isConfig="false"
                    name="accumulatedMotionIn" type="const coordf "/>
                <param direction="OUT" isConfig="false"
                    name="accumulatedMotionOut" type="coordf "/>
            </loop>
            <port annotation="NONE" expr="1" kind="input" name="motionVector"/>
            <port annotation="NONE" expr="1" kind="input" name="accumulatedMotionIn"/>
            <port annotation="NONE" expr="1" kind="output" name="accumulatedMotionOut"/>
        </node>
        <node id="DuplicateAccumulatedMotion" kind="broadcast">
            <port annotation="NONE" expr="1" kind="input" name="in"/>
            <port annotation="NONE" expr="1" kind="output" name="out_0"/>
            <port annotation="NONE" expr="1" kind="output" name="out_1"/>
        </node>
        <edge kind="fifo" source="DuplicateFrame" sourceport="out_0"
            target="ComputeBlockMotionVectors" targetport="frame" type="uchar"/>
        <edge kind="fifo" source="u" sourceport="u" target="renderFrame"
            targetport="uIn" type="uchar"/>
        <edge kind="fifo" source="v" sourceport="v" target="renderFrame"
            targetport="vIn" type="uchar"/>
        <edge kind="fifo" source="ComputeBlockMotionVectors"
            sourceport="vectors" target="FindDominatingMotion"
            targetport="vectors" type="coord"/>
        <edge kind="fifo" source="y" sourceport="y"
            target="DuplicateFrame" targetport="in" type="uchar"/>
        <edge expr="height*width" kind="fifo" source="DuplicateFrame"
            sourceport="out_1" target="ComputeBlockMotionVectors"
            targetport="previousFrame" type="uchar">
            <data key="delay"/>
        </edge>
        <edge kind="fifo" source="renderFrame" sourceport="yOut"
            target="rY" targetport="rY" type="uchar"/>
        <edge kind="fifo" source="DuplicateFrame" sourceport="out_2"
            target="renderFrame" targetport="yIn" type="uchar"/>
        <edge kind="fifo" source="FindDominatingMotion"
            sourceport="dominatingVector" target="AccumulateMotion"
            targetport="motionVector" type="coordf"/>
        <edge kind="fifo" source="renderFrame" sourceport="uOut"
            target="rU" targetport="rU" type="uchar"/>
        <edge kind="fifo" source="renderFrame" sourceport="vOut"
            target="rV" targetport="rV" type="uchar"/>
        <edge kind="fifo" source="DuplicateAccumulatedMotion"
            sourceport="out_0" target="renderFrame" targetport="delta" type="coordf"/>
        <edge kind="fifo" source="AccumulateMotion"
            sourceport="accumulatedMotionOut"
            target="DuplicateAccumulatedMotion" targetport="in" type="coordf"/>
        <edge expr="1" kind="fifo" source="DuplicateAccumulatedMotion"
            sourceport="out_1" target="AccumulateMotion"
            targetport="accumulatedMotionIn" type="coordf">
            <data key="delay"/>
        </edge>
        <edge kind="dependency" source="width"
            target="ComputeBlockMotionVectors" targetport="width"/>
        <edge kind="dependency" source="height"
            target="ComputeBlockMotionVectors" targetport="height"/>
        <edge kind="dependency" source="blockWidth"
            target="ComputeBlockMotionVectors" targetport="blockWidth"/>
        <edge kind="dependency" source="blockHeight"
            target="ComputeBlockMotionVectors" targetport="blockHeight"/>
        <edge kind="dependency" source="maxDeltaX"
            target="ComputeBlockMotionVectors" targetport="maxDeltaX"/>
        <edge kind="dependency" source="maxDeltaY"
            target="ComputeBlockMotionVectors" targetport="maxDeltaY"/>
        <edge kind="dependency" source="width" target="y"/>
        <edge kind="dependency" source="height" target="y"/>
        <edge kind="dependency" source="width" target="u"/>
        <edge kind="dependency" source="height" target="u"/>
        <edge kind="dependency" source="width" target="v"/>
        <edge kind="dependency" source="height" target="v"/>
        <edge kind="dependency" source="width" target="DuplicateFrame" targetport="width"/>
        <edge kind="dependency" source="height" target="DuplicateFrame" targetport="height"/>
        <edge kind="dependency" source="width" target="DuplicateFrame.out_1-ComputeBlockMotionVectors.previousFrame"/>
        <edge kind="dependency" source="height" target="DuplicateFrame.out_1-ComputeBlockMotionVectors.previousFrame"/>
        <edge kind="dependency" source="height" target="nbVectors"/>
        <edge kind="dependency" source="width" target="nbVectors"/>
        <edge kind="dependency" source="blockWidth" target="nbVectors"/>
        <edge kind="dependency" source="blockHeight" target="nbVectors"/>
        <edge kind="dependency" source="nbVectors"
            target="FindDominatingMotion" targetport="nbVectors"/>
        <edge kind="dependency" source="width"
            target="FindDominatingMotion" targetport="width"/>
        <edge kind="dependency" source="height"
            target="FindDominatingMotion" targetport="height"/>
        <edge kind="dependency" source="nbVectors"
            target="ComputeBlockMotionVectors" targetport="nbVectors"/>
        <edge kind="dependency" source="border" target="displayHeight"/>
        <edge kind="dependency" source="border" target="displayWidth"/>
        <edge kind="dependency" source="height" target="displayHeight"/>
        <edge kind="dependency" source="width" target="displayWidth"/>
        <edge kind="dependency" source="displayWidth" target="rU"/>
        <edge kind="dependency" source="displayWidth" target="rV"/>
        <edge kind="dependency" source="displayWidth" target="rY"/>
        <edge kind="dependency" source="displayHeight" target="rU"/>
        <edge kind="dependency" source="displayHeight" target="rV"/>
        <edge kind="dependency" source="displayHeight" target="rY"/>
        <edge kind="dependency" source="displayHeight"
            target="renderFrame" targetport="dispHeight"/>
        <edge kind="dependency" source="displayWidth"
            target="renderFrame" targetport="dispWidth"/>
        <edge kind="dependency" source="width" target="renderFrame" targetport="frameWidth"/>
        <edge kind="dependency" source="height" target="renderFrame" targetport="frameHeight"/>
    </graph>
</graphml>
