<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <key attr.name="delay" attr.type="string" for="edge"/>
    <graph edgedefault="directed">
        <data key="name">ddpg</data>
        <node expr="3" id="action_space_size" kind="param"/>
        <node expr="6" id="state_space_size" kind="param"/>
        <node expr="1" id="value_space_size" kind="param"/>
        <node
            expr="(state_space_size + action_space_size) * hidden_size_0 + hidden_size_0 *  hidden_size_1 + hidden_size_1 * value_space_size"
            id="critic_weights_size" kind="param"/>
        <node
            expr="value_space_size + hidden_size_1 + hidden_size_0"
            id="critic_bias_size" kind="param"/>
        <node expr="400" id="hidden_size_0" kind="param"/>
        <node
            expr="state_space_size * hidden_size_0 +  hidden_size_0 * hidden_size_1 + hidden_size_1 * action_space_size"
            id="actor_weights_size" kind="param"/>
        <node
            expr="action_space_size + hidden_size_1 + hidden_size_0"
            id="actor_bias_size" kind="param"/>
        <node expr="3" id="x_target" kind="param"/>
        <node expr="4" id="y_target" kind="param"/>
        <node expr="0" id="z_target" kind="param"/>
        <node expr="300" id="hidden_size_1" kind="param"/>
        <node expr="64" id="sampleSize" kind="param"/>
        <node expr="5000" id="bufferSize" kind="param"/>
        <node expr="action_space_size + state_space_size"
            id="actionState_space_size" kind="param"/>
        <node expr="0" id="nbFireActor" kind="param"/>
        <node id="Environment" kind="actor" period="0">
            <data key="graph_desc">Code/include/environment.h</data>
            <loop name="step">
                <param direction="IN" isConfig="true"
                    name="state_space_size" type="int"/>
                <param direction="IN" isConfig="true"
                    name="action_space_size" type="int"/>
                <param direction="IN" isConfig="true"
                    name="state_angular_size" type="int"/>
                <param direction="IN" isConfig="true"
                    name="x_target" type="float"/>
                <param direction="IN" isConfig="true"
                    name="y_target" type="float"/>
                <param direction="IN" isConfig="false"
                    name="state_angular_in" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="state_angular_out" type="float "/>
                <param direction="IN" isConfig="false"
                    name="input_actions" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="state_observation" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="reward" type="float "/>
            </loop>
            <port kind="cfg_input" name="state_space_size"/>
            <port kind="cfg_input" name="action_space_size"/>
            <port kind="cfg_input" name="x_target"/>
            <port kind="cfg_input" name="y_target"/>
            <port kind="cfg_input" name="z_target"/>
            <port annotation="NONE" expr="action_space_size"
                kind="input" name="input_actions"/>
            <port annotation="NONE" expr="state_space_size"
                kind="output" name="state_observation"/>
            <port annotation="NONE" expr="1" kind="output" name="reward"/>
        </node>
        <node id="BroadcastStateFeature" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="state"/>
            <port annotation="NONE" expr="size" kind="output" name="state_out0"/>
            <port annotation="NONE" expr="size" kind="output" name="state_out1"/>
            <port annotation="NONE" expr="size" kind="output" name="state_out2"/>
        </node>
        <node id="Temporal_Difference_Error" kind="actor" period="0">
            <data key="graph_desc">Code/include/critic.h</data>
            <loop name="td_error">
                <param direction="IN" isConfig="false"
                    name="gamma_in" type="float "/>
                <param direction="IN" isConfig="false"
                    name="reward" type="float "/>
                <param direction="IN" isConfig="false"
                    name="value_next_state" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="target" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="delta" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="input" name="value_next_state"/>
            <port annotation="NONE" expr="1" kind="input" name="reward"/>
            <port annotation="NONE" expr="1" kind="input" name="gamma_in"/>
            <port annotation="NONE" expr="1" kind="output" name="delta"/>
            <port annotation="NONE" expr="1" kind="output" name="target"/>
        </node>
        <node id="BroadcastWeightsCritic" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
        </node>
        <node id="BroadcastBiasCritic" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
        </node>
        <node id="Actor_MLP" kind="actor" period="0">
            <data key="graph_desc">Algo/ddpg/mlp_2layers.pi</data>
            <port kind="cfg_input" name="output_size"/>
            <port kind="cfg_input" name="hidden_size_0"/>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="hidden_size_1"/>
            <port annotation="NONE"
                expr="hidden_size_0 + hidden_size_1 + output_size"
                kind="input" name="bias"/>
            <port annotation="NONE"
                expr="input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * output_size"
                kind="input" name="weights"/>
            <port annotation="NONE" expr="input_size"
                kind="input" name="input"/>
            <port annotation="NONE" expr="output_size"
                kind="output" name="output"/>
        </node>
        <node id="GaussianPolicy" kind="actor" period="0">
            <data key="graph_desc">Code/include/actor.h</data>
            <loop name="actionSampler">
                <param direction="IN" isConfig="true" name="size" type="int"/>
                <param direction="IN" isConfig="false"
                    name="sigma_in" type="float "/>
                <param direction="IN" isConfig="false"
                    name="action_in" type="const float "/>
                <param direction="OUT" isConfig="false"
                    name="action_out" type="float "/>
            </loop>
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="action_in"/>
            <port annotation="NONE" expr="1" kind="input" name="sigma_in"/>
            <port annotation="NONE" expr="size" kind="output" name="action_out"/>
        </node>
        <node id="broadcastAction" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="action"/>
            <port annotation="NONE" expr="size" kind="output" name="action_out0"/>
            <port annotation="NONE" expr="size" kind="output" name="action_out1"/>
        </node>
        <node id="BroadcastWeightsActor" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
            <port annotation="NONE" expr="0" kind="output" name="out_2"/>
        </node>
        <node id="BroadcastBiasActor" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="0" kind="output" name="out_2"/>
        </node>
        <node id="valid_actor" kind="actor" period="0">
            <data key="graph_desc">Code/include/actor.h</data>
            <loop name="validActor">
                <param direction="IN" isConfig="false"
                    name="sigma" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="valid" type="int "/>
            </loop>
            <port annotation="NONE" expr="1" kind="input" name="sigma"/>
            <port annotation="NONE" expr="1" kind="output" name="valid"/>
        </node>
        <node id="valid_critic" kind="actor" period="0">
            <data key="graph_desc">Code/include/common.h</data>
            <loop name="valid">
                <param direction="OUT" isConfig="false"
                    name="valid" type="int "/>
            </loop>
            <port annotation="NONE" expr="1" kind="output" name="valid"/>
        </node>
        <node id="gen_gamma" kind="actor" period="0">
            <data key="graph_desc">Code/include/critic.h</data>
            <loop name="gammaGen">
                <param direction="OUT" isConfig="false"
                    name="gamma" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="output" name="gamma"/>
        </node>
        <node id="gen_sigma" kind="actor" period="0">
            <data key="graph_desc">Code/include/actor.h</data>
            <loop name="sigmaGen">
                <param direction="OUT" isConfig="false"
                    name="sigma" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="output" name="sigma"/>
        </node>
        <node id="gen_actor_learning_rate" kind="actor" period="0">
            <data key="graph_desc">Code/include/actor.h</data>
            <loop name="actorLearningRateGen">
                <param direction="OUT" isConfig="false"
                    name="learning_rate" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="output" name="learning_rate"/>
        </node>
        <node id="gen_critic_learning_rate" kind="actor" period="0">
            <data key="graph_desc">Code/include/critic.h</data>
            <loop name="criticLearningRateGen">
                <param direction="OUT" isConfig="false"
                    name="learning_rate" type="float "/>
            </loop>
            <port annotation="NONE" expr="1" kind="output" name="learning_rate"/>
        </node>
        <node id="ClipAction" kind="actor" period="0">
            <data key="graph_desc">Code/include/common.h</data>
            <loop name="clipValues">
                <param direction="IN" isConfig="true" name="size" type="int"/>
                <param direction="IN" isConfig="false"
                    name="input" type="float "/>
                <param direction="IN" isConfig="false"
                    name="limits" type="float "/>
                <param direction="OUT" isConfig="false"
                    name="output" type="float "/>
            </loop>
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="2" kind="input" name="limits"/>
            <port annotation="NONE" expr="size" kind="output" name="output"/>
        </node>
        <node id="gen_environment_limits" kind="actor" period="0">
            <data key="graph_desc">Code/include/environment.h</data>
            <loop name="envActionLimits">
                <param direction="OUT" isConfig="false"
                    name="limits" type="float "/>
            </loop>
            <port annotation="NONE" expr="2" kind="output" name="limits"/>
        </node>
        <node id="Fill_Buffer" kind="actor" period="0">
            <port kind="cfg_input" name="sampleSize"/>
            <port kind="cfg_input" name="bufferSize"/>
            <port kind="cfg_input" name="state_space_size"/>
            <port kind="cfg_input" name="nbFill"/>
            <port kind="cfg_input" name="action_space_size"/>
            <port annotation="NONE" expr="nbFill * 1"
                kind="input" name="reward"/>
            <port annotation="NONE"
                expr="nbFill * state_space_size" kind="input" name="state"/>
            <port annotation="NONE"
                expr="nbFill * state_space_size" kind="input" name="next_state"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFill) * 1" kind="input" name="reward_save"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFill) * state_space_size"
                kind="input" name="state_save"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFill) * state_space_size"
                kind="input" name="next_state_save"/>
            <port annotation="NONE"
                expr="nbFill * action_space_size" kind="input" name="action"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFill) * action_space_size"
                kind="input" name="action_save"/>
            <port annotation="NONE" expr="sampleSize * 1"
                kind="output" name="reward_out"/>
            <port annotation="NONE"
                expr="sampleSize * state_space_size"
                kind="output" name="next_state_out"/>
            <port annotation="NONE"
                expr="sampleSize * state_space_size"
                kind="output" name="state_out"/>
            <port annotation="NONE"
                expr="(bufferSize - sampleSize) * 1"
                kind="output" name="reward_toSave"/>
            <port annotation="NONE"
                expr="(bufferSize - sampleSize) * state_space_size"
                kind="output" name="state_toSave"/>
            <port annotation="NONE"
                expr="(bufferSize - sampleSize) * state_space_size"
                kind="output" name="next_state_toSave"/>
            <port annotation="NONE"
                expr="(bufferSize - sampleSize) * action_space_size"
                kind="output" name="action_toSave"/>
            <port annotation="NONE"
                expr="sampleSize * action_space_size"
                kind="output" name="action_out"/>
        </node>
        <node id="BroadcastWeightsTargetActor" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
        </node>
        <node id="BroadcastBiasTargetActor" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
        </node>
        <node id="BroadcastBiasTargetCritic" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
        </node>
        <node id="BroadcastWeightsTargetCritic" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="input"/>
            <port annotation="NONE" expr="size" kind="output" name="out_1"/>
            <port annotation="NONE" expr="size" kind="output" name="out_0"/>
        </node>
        <node id="TargetActor_MLP" kind="actor" period="0">
            <data key="graph_desc">Algo/ddpg/mlp_2layers.pi</data>
            <port kind="cfg_input" name="output_size"/>
            <port kind="cfg_input" name="hidden_size_0"/>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="hidden_size_1"/>
            <port annotation="NONE"
                expr="hidden_size_0 + hidden_size_1 + output_size"
                kind="input" name="bias"/>
            <port annotation="NONE"
                expr="input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * output_size"
                kind="input" name="weights"/>
            <port annotation="NONE" expr="input_size"
                kind="input" name="input"/>
            <port annotation="NONE" expr="output_size"
                kind="output" name="output"/>
        </node>
        <node id="TargetCritic_MLP" kind="actor" period="0">
            <data key="graph_desc">Algo/ddpg/mlp_2layers.pi</data>
            <port kind="cfg_input" name="output_size"/>
            <port kind="cfg_input" name="hidden_size_0"/>
            <port kind="cfg_input" name="input_size"/>
            <port kind="cfg_input" name="hidden_size_1"/>
            <port annotation="NONE"
                expr="hidden_size_0 + hidden_size_1 + output_size"
                kind="input" name="bias"/>
            <port annotation="NONE"
                expr="input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * output_size"
                kind="input" name="weights"/>
            <port annotation="NONE" expr="input_size"
                kind="input" name="input"/>
            <port annotation="NONE" expr="output_size"
                kind="output" name="output"/>
        </node>
        <node id="Set_TargetActor" kind="actor" period="0">
            <port annotation="NONE" expr="0" kind="input" name="weights_network"/>
            <port annotation="NONE" expr="0" kind="input" name="bias_network"/>
            <port annotation="NONE" expr="0" kind="input" name="weights_to_reach"/>
            <port annotation="NONE" expr="0" kind="input" name="bias_to_reach"/>
            <port annotation="NONE" expr="0" kind="output" name="weights_out"/>
            <port annotation="NONE" expr="0" kind="output" name="bias_out"/>
        </node>
        <node id="Set_TargetCritic" kind="actor" period="0">
            <port annotation="NONE" expr="0" kind="input" name="weights_network"/>
            <port annotation="NONE" expr="0" kind="input" name="bias_network"/>
            <port annotation="NONE" expr="0" kind="input" name="weights_to_reach"/>
            <port annotation="NONE" expr="0" kind="input" name="bias_to_reach"/>
            <port annotation="NONE" expr="0" kind="output" name="weights_out"/>
            <port annotation="NONE" expr="0" kind="output" name="bias_out"/>
        </node>
        <node id="JoinTargetActionState" kind="join">
            <port annotation="NONE" expr="0" kind="input" name="action"/>
            <port annotation="NONE" expr="0" kind="input" name="state"/>
            <port annotation="NONE" expr="0" kind="output" name="output"/>
        </node>
        <node id="ForkNextState" kind="fork">
            <port annotation="NONE" expr="0" kind="input" name="in"/>
            <port annotation="NONE" expr="0" kind="output" name="out_0"/>
            <port annotation="NONE" expr="0" kind="output" name="out_1"/>
        </node>
        <node id="BroadcastSampledState" kind="broadcast">
            <port annotation="NONE" expr="0" kind="input" name="in"/>
            <port annotation="NONE" expr="0" kind="output" name="out_0"/>
            <port annotation="NONE" expr="0" kind="output" name="out_1"/>
        </node>
        <node id="Set_FillSize" kind="actor" period="0">
            <port kind="cfg_input" name="NextSize"/>
            <port kind="cfg_input" name="initSize"/>
            <port annotation="NONE" kind="cfg_output" name="out"/>
        </node>
        <node id="JoinActionState" kind="join">
            <port annotation="NONE" expr="0" kind="input" name="action"/>
            <port annotation="NONE" expr="0" kind="input" name="state"/>
            <port annotation="NONE" expr="0" kind="output" name="output"/>
        </node>
        <node id="Update_Networks" kind="actor" period="0">
            <data key="graph_desc">Algo/ddpg/update_actor_critic.pi</data>
            <port kind="cfg_input" name="sampleSize"/>
            <port kind="cfg_input" name="actor_input_size"/>
            <port kind="cfg_input" name="actor_output_size"/>
            <port kind="cfg_input" name="hidden_size_0"/>
            <port kind="cfg_input" name="hidden_size_1"/>
            <port kind="cfg_input" name="critic_input_size"/>
            <port kind="cfg_input" name="critic_output_size"/>
            <port annotation="NONE" expr="sampleSize * 1"
                kind="input" name="valid_actor"/>
            <port annotation="NONE"
                expr="actor_output_size + hidden_size_1 + hidden_size_0"
                kind="input" name="bias_actor"/>
            <port annotation="NONE"
                expr="actor_input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * actor_output_size"
                kind="input" name="weights_actor"/>
            <port annotation="NONE" expr="sampleSize * 1"
                kind="input" name="actor_learning_rate"/>
            <port annotation="NONE"
                expr="sampleSize * actor_input_size" kind="input" name="actor_input"/>
            <port annotation="NONE"
                expr="critic_input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * critic_output_size"
                kind="input" name="weights_critic"/>
            <port annotation="NONE"
                expr="critic_output_size + hidden_size_1 + hidden_size_0"
                kind="input" name="bias_critic"/>
            <port annotation="NONE"
                expr="sampleSize * critic_input_size"
                kind="input" name="critic_input"/>
            <port annotation="NONE" expr="sampleSize * 1"
                kind="input" name="valid_critic"/>
            <port annotation="NONE" expr="sampleSize * 1"
                kind="input" name="critic_learning_rate"/>
            <port annotation="NONE"
                expr="sampleSize * critic_output_size"
                kind="input" name="critic_target"/>
            <port annotation="NONE"
                expr="actor_input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * actor_output_size"
                kind="output" name="actor_weights_out"/>
            <port annotation="NONE"
                expr="actor_output_size + hidden_size_1 + hidden_size_0"
                kind="output" name="actor_bias_out"/>
            <port annotation="NONE"
                expr="critic_input_size * hidden_size_0 + hidden_size_0 * hidden_size_1 + hidden_size_1 * critic_output_size"
                kind="output" name="critic_weights_out"/>
            <port annotation="NONE"
                expr="critic_output_size + hidden_size_1 + hidden_size_0"
                kind="output" name="critic_bias_out"/>
        </node>
        <node id="Init_State" kind="actor" period="0"/>
        <node id="End_State" kind="actor" period="0"/>
        <node
            expr="(bufferSize - nbFireActor) * state_space_size"
            getter=""
            id="Fill_Buffer_state_toSave__Fill_Buffer_state_save"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * state_space_size"
                kind="input" name="set"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * state_space_size"
                kind="output" name="get"/>
        </node>
        <node
            expr="(bufferSize - nbFireActor) * state_space_size"
            getter=""
            id="Fill_Buffer_next_state_toSave__Fill_Buffer_next_state_save"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * state_space_size"
                kind="input" name="set"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * state_space_size"
                kind="output" name="get"/>
        </node>
        <node expr="(bufferSize - nbFireActor) * 1" getter=""
            id="Fill_Buffer_reward_toSave__Fill_Buffer_reward_save"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * 1"
                kind="input" name="set"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * 1"
                kind="output" name="get"/>
        </node>
        <node
            expr="(bufferSize - nbFireActor) * action_space_size"
            getter=""
            id="Fill_Buffer_action_toSave__Fill_Buffer_action_save"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * action_space_size"
                kind="input" name="set"/>
            <port annotation="NONE"
                expr="(bufferSize - nbFireActor) * action_space_size"
                kind="output" name="get"/>
        </node>
        <node expr="0" getter=""
            id="Environment_state_observation__BroadcastStateFeature_state"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE" expr="0" kind="input" name="set"/>
            <port annotation="NONE" expr="0" kind="output" name="get"/>
        </node>
        <edge expr="(bufferSize - nbFireActor) * 1" kind="fifo"
            source="Fill_Buffer" sourceport="reward_toSave"
            target="Fill_Buffer" targetport="reward_save" type="void">
            <data key="delay">Fill_Buffer_reward_toSave__Fill_Buffer_reward_save</data>
        </edge>
        <edge
            expr="(bufferSize - nbFireActor) * state_space_size"
            kind="fifo" source="Fill_Buffer"
            sourceport="state_toSave" target="Fill_Buffer"
            targetport="state_save" type="void">
            <data key="delay">Fill_Buffer_state_toSave__Fill_Buffer_state_save</data>
        </edge>
        <edge
            expr="(bufferSize - nbFireActor) * state_space_size"
            kind="fifo" source="Fill_Buffer"
            sourceport="next_state_toSave" target="Fill_Buffer"
            targetport="next_state_save" type="void">
            <data key="delay">Fill_Buffer_next_state_toSave__Fill_Buffer_next_state_save</data>
        </edge>
        <edge expr="0" kind="fifo" source="Environment"
            sourceport="state_observation"
            target="BroadcastStateFeature" targetport="state" type="float">
            <data key="delay">Environment_state_observation__BroadcastStateFeature_state</data>
        </edge>
        <edge
            expr="(bufferSize - nbFireActor) * action_space_size"
            kind="fifo" source="Fill_Buffer"
            sourceport="action_toSave" target="Fill_Buffer"
            targetport="action_save" type="void">
            <data key="delay">Fill_Buffer_action_toSave__Fill_Buffer_action_save</data>
        </edge>
        <edge kind="fifo" source="BroadcastStateFeature"
            sourceport="state_out0" target="Actor_MLP"
            targetport="input" type="float"/>
        <edge kind="fifo" source="broadcastAction"
            sourceport="action_out0" target="Environment"
            targetport="input_actions" type="float"/>
        <edge kind="fifo" source="Actor_MLP" sourceport="output"
            target="GaussianPolicy" targetport="action_in" type="float"/>
        <edge kind="fifo" source="Temporal_Difference_Error"
            sourceport="delta" target="valid_actor"
            targetport="sigma" type="float"/>
        <edge kind="fifo" source="gen_gamma" sourceport="gamma"
            target="Temporal_Difference_Error"
            targetport="gamma_in" type="float"/>
        <edge kind="fifo" source="gen_sigma" sourceport="sigma"
            target="GaussianPolicy" targetport="sigma_in" type="float"/>
        <edge kind="fifo" source="GaussianPolicy"
            sourceport="action_out" target="ClipAction"
            targetport="input" type="float"/>
        <edge kind="fifo" source="ClipAction" sourceport="output"
            target="broadcastAction" targetport="action" type="float"/>
        <edge kind="fifo" source="gen_environment_limits"
            sourceport="limits" target="ClipAction"
            targetport="limits" type="float"/>
        <edge kind="fifo" source="BroadcastBiasActor"
            sourceport="out_0" target="Actor_MLP"
            targetport="bias" type="float"/>
        <edge kind="fifo" source="BroadcastWeightsActor"
            sourceport="out_1" target="Actor_MLP"
            targetport="weights" type="float"/>
        <edge kind="fifo" source="Environment"
            sourceport="reward" target="Fill_Buffer"
            targetport="reward" type="void"/>
        <edge kind="fifo" source="Fill_Buffer"
            sourceport="reward_out"
            target="Temporal_Difference_Error"
            targetport="reward" type="void"/>
        <edge kind="fifo" source="BroadcastStateFeature"
            sourceport="state_out1" target="Fill_Buffer"
            targetport="state" type="void"/>
        <edge kind="fifo" source="BroadcastStateFeature"
            sourceport="state_out2" target="Fill_Buffer"
            targetport="next_state" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsTargetCritic"
            sourceport="out_0" target="Set_TargetCritic"
            targetport="weights_network" type="void"/>
        <edge kind="fifo" source="BroadcastBiasTargetCritic"
            sourceport="out_0" target="Set_TargetCritic"
            targetport="bias_network" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsTargetActor"
            sourceport="out_0" target="Set_TargetActor"
            targetport="weights_network" type="void"/>
        <edge kind="fifo" source="BroadcastBiasTargetActor"
            sourceport="out_0" target="Set_TargetActor"
            targetport="bias_network" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsActor"
            sourceport="out_2" target="Set_TargetActor"
            targetport="weights_to_reach" type="void"/>
        <edge kind="fifo" source="BroadcastBiasActor"
            sourceport="out_2" target="Set_TargetActor"
            targetport="bias_to_reach" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsCritic"
            sourceport="out_0" target="Set_TargetCritic"
            targetport="weights_to_reach" type="void"/>
        <edge kind="fifo" source="BroadcastBiasCritic"
            sourceport="out_0" target="Set_TargetCritic"
            targetport="bias_to_reach" type="void"/>
        <edge kind="fifo" source="Set_TargetActor"
            sourceport="weights_out"
            target="BroadcastWeightsTargetActor"
            targetport="input" type="void"/>
        <edge kind="fifo" source="Set_TargetActor"
            sourceport="bias_out"
            target="BroadcastBiasTargetActor" targetport="input" type="void"/>
        <edge kind="fifo" source="Set_TargetCritic"
            sourceport="weights_out"
            target="BroadcastWeightsTargetCritic"
            targetport="input" type="void"/>
        <edge kind="fifo" source="Set_TargetCritic"
            sourceport="bias_out"
            target="BroadcastBiasTargetCritic" targetport="input" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsTargetActor"
            sourceport="out_1" target="TargetActor_MLP"
            targetport="weights" type="void"/>
        <edge kind="fifo" source="BroadcastBiasTargetActor"
            sourceport="out_1" target="TargetActor_MLP"
            targetport="bias" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsTargetCritic"
            sourceport="out_1" target="TargetCritic_MLP"
            targetport="weights" type="void"/>
        <edge kind="fifo" source="BroadcastBiasTargetCritic"
            sourceport="out_1" target="TargetCritic_MLP"
            targetport="bias" type="void"/>
        <edge kind="fifo" source="JoinTargetActionState"
            sourceport="output" target="TargetCritic_MLP"
            targetport="input" type="void"/>
        <edge kind="fifo" source="TargetActor_MLP"
            sourceport="output" target="JoinTargetActionState"
            targetport="action" type="void"/>
        <edge kind="fifo" source="Fill_Buffer"
            sourceport="next_state_out" target="ForkNextState"
            targetport="in" type="void"/>
        <edge kind="fifo" source="ForkNextState"
            sourceport="out_0" target="TargetActor_MLP"
            targetport="input" type="void"/>
        <edge kind="fifo" source="ForkNextState"
            sourceport="out_1" target="JoinTargetActionState"
            targetport="state" type="void"/>
        <edge kind="fifo" source="TargetCritic_MLP"
            sourceport="output"
            target="Temporal_Difference_Error"
            targetport="value_next_state" type="void"/>
        <edge kind="fifo" source="Fill_Buffer"
            sourceport="state_out" target="BroadcastSampledState"
            targetport="in" type="void"/>
        <edge kind="fifo" source="broadcastAction"
            sourceport="action_out1" target="Fill_Buffer"
            targetport="action" type="void"/>
        <edge kind="fifo" source="Fill_Buffer"
            sourceport="action_out" target="JoinActionState"
            targetport="action" type="void"/>
        <edge kind="fifo" source="BroadcastSampledState"
            sourceport="out_0" target="JoinActionState"
            targetport="state" type="void"/>
        <edge kind="fifo" source="valid_actor" sourceport="valid"
            target="Update_Networks" targetport="valid_actor" type="void"/>
        <edge kind="fifo" source="BroadcastBiasActor"
            sourceport="out_1" target="Update_Networks"
            targetport="bias_actor" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsActor"
            sourceport="out_0" target="Update_Networks"
            targetport="weights_actor" type="void"/>
        <edge kind="fifo" source="Update_Networks"
            sourceport="actor_weights_out"
            target="BroadcastWeightsActor" targetport="input" type="void"/>
        <edge kind="fifo" source="Update_Networks"
            sourceport="actor_bias_out"
            target="BroadcastBiasActor" targetport="input" type="void"/>
        <edge kind="fifo" source="gen_actor_learning_rate"
            sourceport="learning_rate" target="Update_Networks"
            targetport="actor_learning_rate" type="void"/>
        <edge kind="fifo" source="BroadcastSampledState"
            sourceport="out_1" target="Update_Networks"
            targetport="actor_input" type="void"/>
        <edge kind="fifo" source="BroadcastWeightsCritic"
            sourceport="out_1" target="Update_Networks"
            targetport="weights_critic" type="void"/>
        <edge kind="fifo" source="BroadcastBiasCritic"
            sourceport="out_1" target="Update_Networks"
            targetport="bias_critic" type="void"/>
        <edge kind="fifo" source="JoinActionState"
            sourceport="output" target="Update_Networks"
            targetport="critic_input" type="void"/>
        <edge kind="fifo" source="valid_critic"
            sourceport="valid" target="Update_Networks"
            targetport="valid_critic" type="void"/>
        <edge kind="fifo" source="gen_critic_learning_rate"
            sourceport="learning_rate" target="Update_Networks"
            targetport="critic_learning_rate" type="void"/>
        <edge kind="fifo" source="Temporal_Difference_Error"
            sourceport="target" target="Update_Networks"
            targetport="critic_target" type="void"/>
        <edge kind="fifo" source="Update_Networks"
            sourceport="critic_weights_out"
            target="BroadcastWeightsCritic" targetport="input" type="void"/>
        <edge kind="fifo" source="Update_Networks"
            sourceport="critic_bias_out"
            target="BroadcastBiasCritic" targetport="input" type="void"/>
        <edge kind="dependency" source="state_space_size"
            target="Environment" targetport="state_space_size"/>
        <edge kind="dependency" source="action_space_size"
            target="Environment" targetport="action_space_size"/>
        <edge kind="dependency" source="state_space_size"
            target="BroadcastStateFeature" targetport="size"/>
        <edge kind="dependency" source="critic_weights_size"
            target="BroadcastWeightsCritic" targetport="size"/>
        <edge kind="dependency" source="state_space_size" target="critic_weights_size"/>
        <edge kind="dependency" source="value_space_size" target="critic_weights_size"/>
        <edge kind="dependency" source="value_space_size" target="critic_bias_size"/>
        <edge kind="dependency" source="critic_bias_size"
            target="BroadcastBiasCritic" targetport="size"/>
        <edge kind="dependency" source="action_space_size"
            target="GaussianPolicy" targetport="size"/>
        <edge kind="dependency" source="action_space_size"
            target="broadcastAction" targetport="size"/>
        <edge kind="dependency" source="state_space_size"
            target="Actor_MLP" targetport="input_size"/>
        <edge kind="dependency" source="hidden_size_0"
            target="Actor_MLP" targetport="hidden_size_0"/>
        <edge kind="dependency" source="action_space_size"
            target="Actor_MLP" targetport="output_size"/>
        <edge kind="dependency" source="hidden_size_0" target="actor_weights_size"/>
        <edge kind="dependency" source="action_space_size" target="actor_weights_size"/>
        <edge kind="dependency" source="state_space_size" target="actor_weights_size"/>
        <edge kind="dependency" source="actor_weights_size"
            target="BroadcastWeightsActor" targetport="size"/>
        <edge kind="dependency" source="actor_bias_size"
            target="BroadcastBiasActor" targetport="size"/>
        <edge kind="dependency" source="hidden_size_0" target="actor_bias_size"/>
        <edge kind="dependency" source="action_space_size" target="actor_bias_size"/>
        <edge kind="dependency" source="action_space_size"
            target="ClipAction" targetport="size"/>
        <edge kind="dependency" source="x_target"
            target="Environment" targetport="x_target"/>
        <edge kind="dependency" source="y_target"
            target="Environment" targetport="y_target"/>
        <edge kind="dependency" source="z_target"
            target="Environment" targetport="z_target"/>
        <edge kind="dependency" source="hidden_size_1" target="actor_weights_size"/>
        <edge kind="dependency" source="hidden_size_1" target="actor_bias_size"/>
        <edge kind="dependency" source="sampleSize"
            target="Fill_Buffer" targetport="sampleSize"/>
        <edge kind="dependency" source="bufferSize"
            target="Fill_Buffer" targetport="bufferSize"/>
        <edge kind="dependency" source="actor_weights_size"
            target="BroadcastWeightsTargetActor" targetport="size"/>
        <edge kind="dependency" source="actor_bias_size"
            target="BroadcastBiasTargetActor" targetport="size"/>
        <edge kind="dependency" source="action_space_size" target="critic_weights_size"/>
        <edge kind="dependency" source="hidden_size_0" target="critic_weights_size"/>
        <edge kind="dependency" source="hidden_size_1" target="critic_weights_size"/>
        <edge kind="dependency" source="hidden_size_0" target="critic_bias_size"/>
        <edge kind="dependency" source="hidden_size_1" target="critic_bias_size"/>
        <edge kind="dependency" source="critic_bias_size"
            target="BroadcastBiasTargetCritic" targetport="size"/>
        <edge kind="dependency" source="critic_weights_size"
            target="BroadcastWeightsTargetCritic" targetport="size"/>
        <edge kind="dependency" source="state_space_size"
            target="Fill_Buffer" targetport="state_space_size"/>
        <edge kind="dependency" source="state_space_size"
            target="TargetActor_MLP" targetport="input_size"/>
        <edge kind="dependency" source="hidden_size_0"
            target="TargetActor_MLP" targetport="hidden_size_0"/>
        <edge kind="dependency" source="action_space_size"
            target="TargetActor_MLP" targetport="output_size"/>
        <edge kind="dependency" source="hidden_size_0"
            target="TargetCritic_MLP" targetport="hidden_size_0"/>
        <edge kind="dependency" source="state_space_size" target="actionState_space_size"/>
        <edge kind="dependency" source="action_space_size" target="actionState_space_size"/>
        <edge kind="dependency" source="actionState_space_size"
            target="TargetCritic_MLP" targetport="input_size"/>
        <edge kind="dependency" source="hidden_size_1"
            target="Actor_MLP" targetport="hidden_size_1"/>
        <edge kind="dependency" source="hidden_size_1"
            target="TargetCritic_MLP" targetport="hidden_size_1"/>
        <edge kind="dependency" source="hidden_size_1"
            target="TargetActor_MLP" targetport="hidden_size_1"/>
        <edge kind="dependency" source="bufferSize"
            target="Set_FillSize" targetport="initSize"/>
        <edge kind="dependency" source="sampleSize"
            target="Set_FillSize" targetport="NextSize"/>
        <edge kind="dependency" source="Set_FillSize"
            sourceport="out" target="nbFireActor"/>
        <edge kind="dependency" source="sampleSize"
            target="Update_Networks" targetport="sampleSize"/>
        <edge kind="dependency" source="state_space_size"
            target="Update_Networks" targetport="actor_input_size"/>
        <edge kind="dependency" source="action_space_size"
            target="Update_Networks" targetport="actor_output_size"/>
        <edge kind="dependency" source="hidden_size_0"
            target="Update_Networks" targetport="hidden_size_0"/>
        <edge kind="dependency" source="hidden_size_1"
            target="Update_Networks" targetport="hidden_size_1"/>
        <edge kind="dependency" source="actionState_space_size"
            target="Update_Networks" targetport="critic_input_size"/>
        <edge kind="dependency" source="value_space_size"
            target="TargetCritic_MLP" targetport="output_size"/>
        <edge kind="dependency" source="value_space_size"
            target="Update_Networks" targetport="critic_output_size"/>
        <edge kind="dependency" source="nbFireActor"
            target="Fill_Buffer" targetport="nbFill"/>
        <edge kind="dependency" source="action_space_size"
            target="Fill_Buffer" targetport="action_space_size"/>
        <edge kind="dependency" source="nbFireActor" target="Fill_Buffer_reward_toSave__Fill_Buffer_reward_save"/>
        <edge kind="dependency" source="nbFireActor" target="Fill_Buffer_state_toSave__Fill_Buffer_state_save"/>
        <edge kind="dependency" source="nbFireActor" target="Fill_Buffer_next_state_toSave__Fill_Buffer_next_state_save"/>
        <edge kind="dependency" source="nbFireActor" target="Fill_Buffer_action_toSave__Fill_Buffer_action_save"/>
        <edge kind="dependency" source="bufferSize" target="Fill_Buffer_action_toSave__Fill_Buffer_action_save"/>
        <edge kind="dependency" source="bufferSize" target="Fill_Buffer_next_state_toSave__Fill_Buffer_next_state_save"/>
        <edge kind="dependency" source="bufferSize" target="Fill_Buffer_state_toSave__Fill_Buffer_state_save"/>
        <edge kind="dependency" source="bufferSize" target="Fill_Buffer_reward_toSave__Fill_Buffer_reward_save"/>
        <edge kind="dependency" source="action_space_size" target="Fill_Buffer_action_toSave__Fill_Buffer_action_save"/>
        <edge kind="dependency" source="state_space_size" target="Fill_Buffer_state_toSave__Fill_Buffer_state_save"/>
        <edge kind="dependency" source="state_space_size" target="Fill_Buffer_next_state_toSave__Fill_Buffer_next_state_save"/>
    </graph>
</graphml>
