From 9f073a0c9d459ecee6075360dc3a241ecd618ce4 Mon Sep 17 00:00:00 2001
From: kdesnos <kdesnos@insa-rennes.fr>
Date: Thu, 16 Jul 2015 14:25:48 +0200
Subject: [PATCH] (Sobel) Multicore DSP codegen tutorial result.

---
 .../org.ietr.preesm.sobel/Archi/8CoreC6678.slam    | 135 ++++++++
 .../org.ietr.preesm.sobel/CodeC6678/.ccsproject    |  13 +
 .../org.ietr.preesm.sobel/CodeC6678/.cproject      | 196 ++++++++++++
 .../org.ietr.preesm.sobel/CodeC6678/.gitignore     |   8 +
 tutorials/org.ietr.preesm.sobel/CodeC6678/.project |  84 +++++
 tutorials/org.ietr.preesm.sobel/CodeC6678/.xdchelp |   0
 .../CodeC6678/TMS320C6678.ccxml                    |  60 ++++
 .../CodeC6678/generated/.dummy                     |   0
 .../CodeC6678/image_analyzer/config_rgb.txt        |  36 +++
 .../CodeC6678/image_analyzer/config_yuv.txt        |  63 ++++
 .../CodeC6678/include/c6678.h                      |  16 +
 .../CodeC6678/include/cache.h                      | 101 ++++++
 .../CodeC6678/include/communication.h              |  53 +++
 .../CodeC6678/include/cores.h                      |  33 ++
 .../org.ietr.preesm.sobel/CodeC6678/include/dump.h |  71 +++++
 .../org.ietr.preesm.sobel/CodeC6678/include/fifo.h |  64 ++++
 .../CodeC6678/include/memory.h                     | 113 +++++++
 .../CodeC6678/include/preesm.h                     |  17 +
 .../CodeC6678/include/semaphore6678.h              | 141 ++++++++
 .../CodeC6678/include/sobel.h                      |  31 ++
 .../CodeC6678/include/splitMerge.h                 |  52 +++
 .../CodeC6678/include/utils.h                      |  29 ++
 .../CodeC6678/include/yuvDisplay.h                 |  73 +++++
 .../CodeC6678/include/yuvRead.h                    |  48 +++
 .../CodeC6678/modelPreesm.cfg                      |  91 ++++++
 .../CodeC6678/package/preesm6678/.dlls             |   0
 .../CodeC6678/package/preesm6678/.executables      |   0
 .../CodeC6678/package/preesm6678/.interfaces       |   0
 .../CodeC6678/package/preesm6678/.libraries        |   0
 .../CodeC6678/package/preesm6678/.xdcenv.mak       |  16 +
 .../CodeC6678/package/preesm6678/Platform.xdc      |  55 ++++
 .../CodeC6678/package/preesm6678/Platform.xs       |  33 ++
 .../CodeC6678/package/preesm6678/config.bld        |   6 +
 .../CodeC6678/package/preesm6678/package.bld       |   9 +
 .../CodeC6678/package/preesm6678/package.mak       | 161 ++++++++++
 .../CodeC6678/package/preesm6678/package.xdc       |   9 +
 .../package/preesm6678/package/.vers_b150          |   0
 .../package/preesm6678/package/.vers_g180          |   0
 .../package/preesm6678/package/.vers_r170          |   0
 .../CodeC6678/package/preesm6678/package/.xdc-y30  |   0
 .../CodeC6678/package/preesm6678/package/build.cfg |   9 +
 .../package/preesm6678/package/package.bld.xml     |  42 +++
 .../package/preesm6678/package/package.cfg.dep     |  54 ++++
 .../package/preesm6678/package/package.cfg.xdc.inc |   1 +
 .../package/preesm6678/package/package.defs.h      |  13 +
 .../package/preesm6678/package/package.ext.xml     |  96 ++++++
 .../package/preesm6678/package/package.rel.dot     | 258 +++++++++++++++
 .../package/preesm6678/package/package.xdc.dep     |  69 ++++
 .../package/preesm6678/package/package.xdc.inc     |  13 +
 .../preesm6678/package/package_preesm6678.c        |  21 ++
 .../package/preesm6678/package/preesm6678.ccs      | Bin 0 -> 8558 bytes
 .../package/preesm6678/package/preesm6678.java     | 355 +++++++++++++++++++++
 .../package/preesm6678/package/preesm6678.sch      |   0
 .../preesm6678/package/rel/preesm6678.xdc.inc      |  11 +
 .../package/rel/preesm6678.xdc.inc.manifest        |  19 ++
 .../preesm6678/package/rel/preesm6678.xdc.ninc     |   0
 .../preesm6678/package/rel/preesm6678.zip.dep      |  38 +++
 .../preesm6678/preesm6678/package/package.rel.xml  |  96 ++++++
 .../org.ietr.preesm.sobel/CodeC6678/src/cache.c    |  67 ++++
 .../CodeC6678/src/communication.c                  | 130 ++++++++
 .../org.ietr.preesm.sobel/CodeC6678/src/dump.c     |  44 +++
 .../org.ietr.preesm.sobel/CodeC6678/src/fifo.c     |  35 ++
 .../org.ietr.preesm.sobel/CodeC6678/src/main.c     | 110 +++++++
 .../org.ietr.preesm.sobel/CodeC6678/src/memory.c   |  66 ++++
 .../CodeC6678/src/semaphore6678.c                  | 250 +++++++++++++++
 .../org.ietr.preesm.sobel/CodeC6678/src/sobel.c    |  38 +++
 .../CodeC6678/src/splitMerge.c                     |  58 ++++
 .../org.ietr.preesm.sobel/CodeC6678/src/utils.c    |  41 +++
 .../CodeC6678/src/yuvDisplay.c                     |  41 +++
 .../org.ietr.preesm.sobel/CodeC6678/src/yuvRead.c  |  66 ++++
 .../CodeC6678/yuv2dat/CMakeCodeblock.bat           |   8 +
 .../CodeC6678/yuv2dat/CMakeGCC.sh                  |   9 +
 .../CodeC6678/yuv2dat/CMakeLists.txt               |  33 ++
 .../CodeC6678/yuv2dat/CMakeVC2008.bat              |  11 +
 .../CodeC6678/yuv2dat/ReadMe.txt                   |  20 ++
 .../CodeC6678/yuv2dat/include/datCreate.h          |  39 +++
 .../CodeC6678/yuv2dat/include/yuvRead.h            |  50 +++
 .../CodeC6678/yuv2dat/src/datCreate.c              |  57 ++++
 .../CodeC6678/yuv2dat/src/main.c                   |  97 ++++++
 .../CodeC6678/yuv2dat/src/yuvRead.c                |  82 +++++
 .../Scenarios/8coreC6678.scenario                  | 108 +++++++
 81 files changed, 4372 insertions(+)
 create mode 100644 tutorials/org.ietr.preesm.sobel/Archi/8CoreC6678.slam
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/.ccsproject
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/.cproject
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/.gitignore
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/.project
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/.xdchelp
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/TMS320C6678.ccxml
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/generated/.dummy
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_rgb.txt
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_yuv.txt
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/c6678.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/cache.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/communication.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/cores.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/dump.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/fifo.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/memory.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/preesm.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/semaphore6678.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/sobel.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/splitMerge.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/utils.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvDisplay.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvRead.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/modelPreesm.cfg
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.dlls
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.executables
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.interfaces
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.libraries
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.xdcenv.mak
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xdc
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xs
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/config.bld
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.bld
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.mak
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.xdc
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_b150
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_g180
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_r170
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.xdc-y30
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/build.cfg
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.bld.xml
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.dep
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.xdc.inc
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.defs.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.ext.xml
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.rel.dot
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.dep
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.inc
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package_preesm6678.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.ccs
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.java
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.sch
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc.manifest
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.ninc
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.zip.dep
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678/preesm6678/package/package.rel.xml
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/cache.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/communication.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/dump.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/fifo.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/main.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/memory.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/semaphore6678.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/sobel.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/splitMerge.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/utils.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvDisplay.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvRead.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeCodeblock.bat
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeGCC.sh
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeLists.txt
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeVC2008.bat
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/ReadMe.txt
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/datCreate.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/yuvRead.h
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/datCreate.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/main.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/yuvRead.c
 create mode 100644 tutorials/org.ietr.preesm.sobel/Scenarios/8coreC6678.scenario

diff --git a/tutorials/org.ietr.preesm.sobel/Archi/8CoreC6678.slam b/tutorials/org.ietr.preesm.sobel/Archi/8CoreC6678.slam
new file mode 100644
index 0000000..29e4e0a
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/Archi/8CoreC6678.slam
@@ -0,0 +1,135 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<spirit:design xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4">
+    <spirit:library>preesm</spirit:library>
+    <spirit:vendor>ietr</spirit:vendor>
+    <spirit:name>4CoreX86</spirit:name>
+    <spirit:version>1</spirit:version>
+    <spirit:componentInstances>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core0</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core1</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core3</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core2</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>shared_mem</spirit:instanceName>
+            <spirit:componentRef spirit:library=""
+                spirit:name="SHARED_MEM" spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core4</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core5</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core6</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+        <spirit:componentInstance>
+            <spirit:instanceName>Core7</spirit:instanceName>
+            <spirit:componentRef spirit:library="" spirit:name="c6678"
+                spirit:vendor="" spirit:version=""/>
+            <spirit:configurableElementValues/>
+        </spirit:componentInstance>
+    </spirit:componentInstances>
+    <spirit:interconnections>
+        <spirit:interconnection>
+            <spirit:name>2</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core1"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>4</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core3"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>3</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core2"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>1</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core0"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>Core4|shared_mem|shared_mem|shared_mem</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core4"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>shared_mem|shared_mem|Core5|shared_mem</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core5"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>Core6|shared_mem|shared_mem|shared_mem</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core6"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+        </spirit:interconnection>
+        <spirit:interconnection>
+            <spirit:name>shared_mem|shared_mem|Core7|shared_mem</spirit:name>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="shared_mem"/>
+            <spirit:activeInterface spirit:busRef="shared_mem" spirit:componentRef="Core7"/>
+        </spirit:interconnection>
+    </spirit:interconnections>
+    <spirit:hierConnections/>
+    <spirit:vendorExtensions>
+        <slam:componentDescriptions xmlns:slam="http://sourceforge.net/projects/dftools/slam">
+            <slam:componentDescription slam:componentRef="c6678"
+                slam:componentType="Operator" slam:refinement=""/>
+            <slam:componentDescription slam:componentRef="SHARED_MEM"
+                slam:componentType="parallelComNode" slam:refinement="" slam:speed="1000000000"/>
+        </slam:componentDescriptions>
+        <slam:linkDescriptions xmlns:slam="http://sourceforge.net/projects/dftools/slam">
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="2"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="4"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="3"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="1"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="Core4|shared_mem|shared_mem|shared_mem"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="shared_mem|shared_mem|Core5|shared_mem"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="Core6|shared_mem|shared_mem|shared_mem"/>
+            <slam:linkDescription slam:directedLink="undirected"
+                slam:linkType="DataLink" slam:referenceId="shared_mem|shared_mem|Core7|shared_mem"/>
+        </slam:linkDescriptions>
+        <slam:designDescription xmlns:slam="http://sourceforge.net/projects/dftools/slam">
+            <slam:parameters/>
+        </slam:designDescription>
+    </spirit:vendorExtensions>
+</spirit:design>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/.ccsproject b/tutorials/org.ietr.preesm.sobel/CodeC6678/.ccsproject
new file mode 100644
index 0000000..bd23304
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/.ccsproject
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?ccsproject version="1.0"?>
+
+<projectOptions>
+<deviceVariant value="TMS320C66XX.TMS320C6678"/>
+<deviceFamily value="C6000"/>
+<deviceEndianness value="little"/>
+<codegenToolVersion value="7.3.4"/>
+<isElfFormat value="true"/>
+<connection value="common/targetdb/connections/TIXDS100usb_Connection.xml"/>
+<rts value="libc.a"/>
+<templateProperties value="id=org.eclipse.rtsc.project.templates.EmptyRtscApplication,buildProfile=release,isHybrid=true,"/>
+</projectOptions>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/.cproject b/tutorials/org.ietr.preesm.sobel/CodeC6678/.cproject
new file mode 100644
index 0000000..bf57b78
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/.cproject
@@ -0,0 +1,196 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?fileVersion 4.0.0?>
+
+<cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
+	<storageModule configRelations="2" moduleId="org.eclipse.cdt.core.settings">
+		<cconfiguration id="com.ti.ccstudio.buildDefinitions.C6000.Debug.504831085">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.ti.ccstudio.buildDefinitions.C6000.Debug.504831085" moduleId="org.eclipse.cdt.core.settings" name="Debug">
+				<externalSettings/>
+				<extensions>
+					<extension id="com.ti.ccstudio.binaryparser.CoffParser" point="org.eclipse.cdt.core.BinaryParser"/>
+					<extension id="com.ti.ccstudio.errorparser.CoffErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="com.ti.ccstudio.errorparser.LinkErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="com.ti.ccstudio.errorparser.AsmErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.rtsc.xdctools.parsers.ErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactExtension="out" artifactName="${ProjName}" buildProperties="" cleanCommand="${CG_CLEAN_CMD}" description="" errorParsers="org.eclipse.rtsc.xdctools.parsers.ErrorParser;com.ti.ccstudio.errorparser.CoffErrorParser;com.ti.ccstudio.errorparser.LinkErrorParser;com.ti.ccstudio.errorparser.AsmErrorParser" id="com.ti.ccstudio.buildDefinitions.C6000.Debug.504831085" name="Debug" parent="com.ti.ccstudio.buildDefinitions.C6000.Debug">
+					<folderInfo id="com.ti.ccstudio.buildDefinitions.C6000.Debug.504831085." name="/" resourcePath="">
+						<toolChain id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.DebugToolchain.1814259901" name="TI Build Tools" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.DebugToolchain" targetTool="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.linkerDebug.259761636">
+							<option id="com.ti.ccstudio.buildDefinitions.core.OPT_TAGS.889416006" superClass="com.ti.ccstudio.buildDefinitions.core.OPT_TAGS" valueType="stringList">
+								<listOptionValue builtIn="false" value="DEVICE_CONFIGURATION_ID=TMS320C66XX.TMS320C6678"/>
+								<listOptionValue builtIn="false" value="DEVICE_ENDIANNESS=little"/>
+								<listOptionValue builtIn="false" value="OUTPUT_FORMAT=ELF"/>
+								<listOptionValue builtIn="false" value="CCS_MBS_VERSION=5.1.0.01"/>
+								<listOptionValue builtIn="false" value="RUNTIME_SUPPORT_LIBRARY=libc.a"/>
+								<listOptionValue builtIn="false" value="RTSC_MBS_VERSION=2.2.0"/>
+								<listOptionValue builtIn="false" value="XDC_VERSION=3.23.4.60"/>
+								<listOptionValue builtIn="false" value="RTSC_PRODUCTS=com.ti.rtsc.IPC:1.24.3.32;com.ti.rtsc.SYSBIOS:6.33.6.50;"/>
+								<listOptionValue builtIn="false" value="OUTPUT_TYPE=rtscApplication:executable"/>
+							</option>
+							<option id="com.ti.ccstudio.buildDefinitions.core.OPT_CODEGEN_VERSION.2003282138" name="Compiler version" superClass="com.ti.ccstudio.buildDefinitions.core.OPT_CODEGEN_VERSION" value="7.3.4" valueType="string"/>
+							<targetPlatform id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.targetPlatformDebug.847946786" name="Platform" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.targetPlatformDebug"/>
+							<builder buildPath="${BuildDirectory}" id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.builderDebug.425933599" keepEnvironmentInBuildfile="false" name="GNU Make" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.builderDebug"/>
+							<tool id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.compilerDebug.2058864218" name="C6000 Compiler" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.compilerDebug">
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.SILICON_VERSION.1316515465" name="Target processor version (--silicon_version, -mv)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.SILICON_VERSION" value="6600" valueType="string"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DEBUGGING_MODEL.1182329187" name="Debugging model" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DEBUGGING_MODEL" value="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DEBUGGING_MODEL.SYMDEBUG__DWARF" valueType="enumerated"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DIAG_WARNING.2089973777" name="Treat diagnostic &lt;id&gt; as warning (--diag_warning, -pdsw)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DIAG_WARNING" valueType="stringList">
+									<listOptionValue builtIn="false" value="225"/>
+								</option>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DISPLAY_ERROR_NUMBER.1183599520" name="Emit diagnostic identifier numbers (--display_error_number, -pden)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DISPLAY_ERROR_NUMBER" value="true" valueType="boolean"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.INCLUDE_PATH.1076473484" name="Add dir to #include search path (--include_path, -I)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.INCLUDE_PATH" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${CG_TOOL_ROOT}/include&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/include}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${CCS_INSTALL_ROOT}/../pdk_C6678_1_1_2_5/packages&quot;"/>
+								</option>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.ABI.1884766032" name="Application binary interface (coffabi, eabi) (--abi)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.ABI" value="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.ABI.eabi" valueType="enumerated"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__C_SRCS.653745487" name="C Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__C_SRCS"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__CPP_SRCS.2104135841" name="C++ Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__CPP_SRCS"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM_SRCS.1862066976" name="Assembly Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM_SRCS"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM2_SRCS.1531078773" name="Assembly Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM2_SRCS"/>
+							</tool>
+							<tool id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.linkerDebug.259761636" name="C6000 Linker" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.linkerDebug">
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.OUTPUT_FILE.955408019" name="Specify output file name (--output_file, -o)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.OUTPUT_FILE" value="&quot;${ProjName}.out&quot;" valueType="string"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.MAP_FILE.1144179433" name="Input and output sections listed into &lt;file&gt; (--map_file, -m)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.MAP_FILE" value="&quot;${ProjName}.map&quot;" valueType="string"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.DISPLAY_ERROR_NUMBER.259967770" name="Emit diagnostic identifier numbers (--display_error_number)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.DISPLAY_ERROR_NUMBER" value="true" valueType="boolean"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.SEARCH_PATH.1874500962" name="Add &lt;dir&gt; to library search path (--search_path, -i)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.SEARCH_PATH" valueType="stringList">
+									<listOptionValue builtIn="false" value="&quot;${CG_TOOL_ROOT}/lib&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${CG_TOOL_ROOT}/include&quot;"/>
+								</option>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.LIBRARY.1098402666" name="Include library file or command file as input (--library, -l)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.LIBRARY" valueType="libs">
+									<listOptionValue builtIn="false" value="&quot;libc.a&quot;"/>
+								</option>
+							</tool>
+							<tool id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.780305147" name="XDCtools" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool">
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.CODEGEN_TOOL_DIR.251881227" name="Compiler tools directory (-c)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.CODEGEN_TOOL_DIR" value="&quot;${CG_TOOL_ROOT}&quot;" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.TARGET.1128355166" name="Target (-t)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.TARGET" value="ti.targets.elf.C66" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM.762568769" name="Platform (-p)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM" value="preesm6678" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM_RAW.1926013290" name="Platform (-p)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM_RAW" value="preesm6678" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.BUILD_PROFILE.451131222" name="Build-profile (-r)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.BUILD_PROFILE" value="release" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.XDC_PATH.1708868835" name="Package repositories (--xdcpath)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.XDC_PATH" valueType="stringList">
+									<listOptionValue builtIn="false" value="&quot;${IPC_CG_ROOT}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${BIOS_CG_ROOT}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/package}&quot;"/>
+								</option>
+							</tool>
+						</toolChain>
+					</folderInfo>
+					<sourceEntries>
+						<entry excluding="yuv2dat|package" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
+					</sourceEntries>
+				</configuration>
+			</storageModule>
+			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
+		</cconfiguration>
+		<cconfiguration id="com.ti.ccstudio.buildDefinitions.C6000.Release.2122852602">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.ti.ccstudio.buildDefinitions.C6000.Release.2122852602" moduleId="org.eclipse.cdt.core.settings" name="Release">
+				<externalSettings/>
+				<extensions>
+					<extension id="com.ti.ccstudio.binaryparser.CoffParser" point="org.eclipse.cdt.core.BinaryParser"/>
+					<extension id="com.ti.ccstudio.errorparser.CoffErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="com.ti.ccstudio.errorparser.LinkErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="com.ti.ccstudio.errorparser.AsmErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.rtsc.xdctools.parsers.ErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactExtension="out" artifactName="${ProjName}" buildProperties="" cleanCommand="${CG_CLEAN_CMD}" description="" errorParsers="org.eclipse.rtsc.xdctools.parsers.ErrorParser;com.ti.ccstudio.errorparser.CoffErrorParser;com.ti.ccstudio.errorparser.LinkErrorParser;com.ti.ccstudio.errorparser.AsmErrorParser" id="com.ti.ccstudio.buildDefinitions.C6000.Release.2122852602" name="Release" parent="com.ti.ccstudio.buildDefinitions.C6000.Release">
+					<folderInfo id="com.ti.ccstudio.buildDefinitions.C6000.Release.2122852602." name="/" resourcePath="">
+						<toolChain id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.ReleaseToolchain.494196198" name="TI Build Tools" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.ReleaseToolchain" targetTool="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.linkerRelease.1293763131">
+							<option id="com.ti.ccstudio.buildDefinitions.core.OPT_TAGS.1998589625" superClass="com.ti.ccstudio.buildDefinitions.core.OPT_TAGS" valueType="stringList">
+								<listOptionValue builtIn="false" value="DEVICE_CONFIGURATION_ID=TMS320C66XX.TMS320C6678"/>
+								<listOptionValue builtIn="false" value="DEVICE_ENDIANNESS=little"/>
+								<listOptionValue builtIn="false" value="OUTPUT_FORMAT=ELF"/>
+								<listOptionValue builtIn="false" value="CCS_MBS_VERSION=5.1.0.01"/>
+								<listOptionValue builtIn="false" value="RUNTIME_SUPPORT_LIBRARY=libc.a"/>
+								<listOptionValue builtIn="false" value="RTSC_MBS_VERSION=2.2.0"/>
+								<listOptionValue builtIn="false" value="XDC_VERSION=3.23.4.60"/>
+								<listOptionValue builtIn="false" value="RTSC_PRODUCTS=ti.mas.dsplib.c66x:3.1.0.0;com.ti.sdo.edma3:2.11.5;com.ti.sdo.grace:1.10.4.36;ti.imglib.c66x:3.1.1.0;com.ti.rtsc.IPC:1.24.3.32;ti.mathlib.c66x:3.0.1.1;com.ti.biosmcsdk.mcsdk:2.1.2.5;com.ti.biosmcsdk.pdk.C6657:1.1.2.5;com.ti.biosmcsdk.pdk.C6670:1.1.2.5;com.ti.biosmcsdk.pdk.C6678L:1.1.2.5;com.ti.rtsc.NDK:2.21.1.38;com.ti.biosmcsdk.openem:1.0.0.2;com.ti.rtsc.OMP:1.1.3.02;com.ti.rtsc.SYSBIOS:6.33.6.50;com.ti.uia:1.1.0.04;com.ti.rtsc.XDAIS:7.21.1.07;"/>
+								<listOptionValue builtIn="false" value="OUTPUT_TYPE=rtscApplication:executable"/>
+							</option>
+							<option id="com.ti.ccstudio.buildDefinitions.core.OPT_CODEGEN_VERSION.1388801738" name="Compiler version" superClass="com.ti.ccstudio.buildDefinitions.core.OPT_CODEGEN_VERSION" value="7.3.4" valueType="string"/>
+							<targetPlatform id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.targetPlatformRelease.2135533312" name="Platform" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.targetPlatformRelease"/>
+							<builder buildPath="${BuildDirectory}" id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.builderRelease.91028809" keepEnvironmentInBuildfile="false" name="GNU Make" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.builderRelease"/>
+							<tool id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.compilerRelease.1843006760" name="C6000 Compiler" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.compilerRelease">
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.SILICON_VERSION.38142782" name="Target processor version (--silicon_version, -mv)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.SILICON_VERSION" value="6600" valueType="string"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DIAG_WARNING.697378198" name="Treat diagnostic &lt;id&gt; as warning (--diag_warning, -pdsw)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DIAG_WARNING" valueType="stringList">
+									<listOptionValue builtIn="false" value="225"/>
+								</option>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DISPLAY_ERROR_NUMBER.7866613" name="Emit diagnostic identifier numbers (--display_error_number, -pden)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.DISPLAY_ERROR_NUMBER" value="true" valueType="boolean"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.INCLUDE_PATH.1786971071" name="Add dir to #include search path (--include_path, -I)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.INCLUDE_PATH" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${CG_TOOL_ROOT}/include&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${CCS_INSTALL_ROOT}/../pdk_C6678_1_1_2_5/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/include}&quot;"/>
+								</option>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.ABI.699018065" name="Application binary interface (coffabi, eabi) (--abi)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.ABI" value="com.ti.ccstudio.buildDefinitions.C6000_7.3.compilerID.ABI.eabi" valueType="enumerated"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__C_SRCS.953078576" name="C Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__C_SRCS"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__CPP_SRCS.845723038" name="C++ Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__CPP_SRCS"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM_SRCS.1089352600" name="Assembly Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM_SRCS"/>
+								<inputType id="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM2_SRCS.1929017772" name="Assembly Sources" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.compiler.inputType__ASM2_SRCS"/>
+							</tool>
+							<tool id="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.linkerRelease.1293763131" name="C6000 Linker" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.exe.linkerRelease">
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.OUTPUT_FILE.1270302045" name="Specify output file name (--output_file, -o)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.OUTPUT_FILE" value="&quot;${ProjName}.out&quot;" valueType="string"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.MAP_FILE.1309018213" name="Input and output sections listed into &lt;file&gt; (--map_file, -m)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.MAP_FILE" value="&quot;${ProjName}.map&quot;" valueType="string"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.DISPLAY_ERROR_NUMBER.1554346243" name="Emit diagnostic identifier numbers (--display_error_number)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.DISPLAY_ERROR_NUMBER" value="true" valueType="boolean"/>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.SEARCH_PATH.198614924" name="Add &lt;dir&gt; to library search path (--search_path, -i)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.SEARCH_PATH" valueType="stringList">
+									<listOptionValue builtIn="false" value="&quot;${CG_TOOL_ROOT}/lib&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${CG_TOOL_ROOT}/include&quot;"/>
+								</option>
+								<option id="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.LIBRARY.513957234" name="Include library file or command file as input (--library, -l)" superClass="com.ti.ccstudio.buildDefinitions.C6000_7.3.linkerID.LIBRARY" valueType="libs">
+									<listOptionValue builtIn="false" value="&quot;libc.a&quot;"/>
+								</option>
+							</tool>
+							<tool id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.342985035" name="XDCtools" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool">
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.CODEGEN_TOOL_DIR.117133195" name="Compiler tools directory (-c)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.CODEGEN_TOOL_DIR" value="&quot;${CG_TOOL_ROOT}&quot;" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.TARGET.1783145860" name="Target (-t)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.TARGET" value="ti.targets.elf.C66" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM.1028027324" name="Platform (-p)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM" value="preesm6678" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM_RAW.817450351" name="Platform (-p)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.PLATFORM_RAW" value="preesm6678" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.BUILD_PROFILE.127619507" name="Build-profile (-r)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.BUILD_PROFILE" value="release" valueType="string"/>
+								<option id="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.XDC_PATH.427433865" name="Package repositories (--xdcpath)" superClass="com.ti.rtsc.buildDefinitions.XDC_3.16.tool.XDC_PATH" valueType="stringList">
+									<listOptionValue builtIn="false" value="&quot;${TI_MAS_DSPLIB_C66X_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${EDMA3_LLD_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${COM_TI_SDO_GRACE_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TI_IMGLIB_C66X_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${IPC_CG_ROOT}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TI_MATHLIB_C66X_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TI_MCSDK_INSTALL_DIR}/demos&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TI_PDK_C6657_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TI_PDK_C6670_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TI_PDK_C6678_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${NDK_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${COM_TI_BIOSMCSDK_OPENEM_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${COM_TI_RTSC_OMP_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${BIOS_CG_ROOT}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${COM_TI_UIA_INSTALL_DIR}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${XDAIS_CG_ROOT}/packages&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${XDAIS_CG_ROOT}/examples&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/package}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${TARGET_CONTENT_BASE}&quot;"/>
+								</option>
+							</tool>
+						</toolChain>
+					</folderInfo>
+					<sourceEntries>
+						<entry excluding="yuv2dat|package" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
+					</sourceEntries>
+				</configuration>
+			</storageModule>
+			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
+		</cconfiguration>
+	</storageModule>
+	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+		<project id="sobel-6678.com.ti.ccstudio.buildDefinitions.C6000.ProjectType.306491531" name="C6000" projectType="com.ti.ccstudio.buildDefinitions.C6000.ProjectType"/>
+	</storageModule>
+	<storageModule moduleId="scannerConfiguration"/>
+	<storageModule moduleId="org.eclipse.cdt.core.language.mapping">
+		<project-mappings>
+			<content-type-mapping configuration="" content-type="org.eclipse.cdt.core.asmSource" language="com.ti.ccstudio.core.TIASMLanguage"/>
+			<content-type-mapping configuration="" content-type="org.eclipse.cdt.core.cHeader" language="com.ti.ccstudio.core.TIGCCLanguage"/>
+			<content-type-mapping configuration="" content-type="org.eclipse.cdt.core.cSource" language="com.ti.ccstudio.core.TIGCCLanguage"/>
+			<content-type-mapping configuration="" content-type="org.eclipse.cdt.core.cxxHeader" language="com.ti.ccstudio.core.TIGPPLanguage"/>
+			<content-type-mapping configuration="" content-type="org.eclipse.cdt.core.cxxSource" language="com.ti.ccstudio.core.TIGPPLanguage"/>
+		</project-mappings>
+	</storageModule>
+	<storageModule moduleId="refreshScope"/>
+</cproject>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/.gitignore b/tutorials/org.ietr.preesm.sobel/CodeC6678/.gitignore
new file mode 100644
index 0000000..2705025
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/.gitignore
@@ -0,0 +1,8 @@
+# Temporary files and generated files #
+#######################################
+Debug/
+Release/
+.settings/
+TMS320C6678.ccxml
+generated
+.config
\ No newline at end of file
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/.project b/tutorials/org.ietr.preesm.sobel/CodeC6678/.project
new file mode 100644
index 0000000..a80beea
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/.project
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>sobel-6678</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
+			<arguments>
+				<dictionary>
+					<key>?name?</key>
+					<value></value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.append_environment</key>
+					<value>true</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.autoBuildTarget</key>
+					<value>all</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.buildArguments</key>
+					<value>-k</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.buildCommand</key>
+					<value>${CCS_UTILS_DIR}/bin/gmake</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.buildLocation</key>
+					<value>${BuildDirectory}</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.cleanBuildTarget</key>
+					<value>clean</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.contents</key>
+					<value>org.eclipse.cdt.make.core.activeConfigSettings</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.enableAutoBuild</key>
+					<value>true</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.enableCleanBuild</key>
+					<value>true</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.enableFullBuild</key>
+					<value>true</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.fullBuildTarget</key>
+					<value>all</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.stopOnError</key>
+					<value>false</value>
+				</dictionary>
+				<dictionary>
+					<key>org.eclipse.cdt.make.core.useDefaultBuildCmd</key>
+					<value>true</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.rtsc.xdctools.buildDefinitions.XDC.xdcNature</nature>
+		<nature>com.ti.ccstudio.core.ccsNature</nature>
+		<nature>org.eclipse.cdt.core.cnature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>
+		<nature>org.eclipse.cdt.core.ccnature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
+	</natures>
+</projectDescription>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/.xdchelp b/tutorials/org.ietr.preesm.sobel/CodeC6678/.xdchelp
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/TMS320C6678.ccxml b/tutorials/org.ietr.preesm.sobel/CodeC6678/TMS320C6678.ccxml
new file mode 100644
index 0000000..5e9e7bb
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/TMS320C6678.ccxml
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<configurations XML_version="1.2" id="configurations_0">
+    <configuration XML_version="1.2" id="configuration_0">
+        <instance XML_version="1.2" desc="Texas Instruments XDS100v1 USB Emulator" href="connections/TIXDS100usb_Connection.xml" id="Texas Instruments XDS100v1 USB Emulator" xml="TIXDS100usb_Connection.xml" xmlpath="connections"/>
+        <connection XML_version="1.2" id="Texas Instruments XDS100v1 USB Emulator">
+            <instance XML_version="1.2" href="drivers/tixds100icepick_d.xml" id="drivers" xml="tixds100icepick_d.xml" xmlpath="drivers"/>
+            <instance XML_version="1.2" href="drivers/tixds100c66xx.xml" id="drivers" xml="tixds100c66xx.xml" xmlpath="drivers"/>
+            <instance XML_version="1.2" href="drivers/tixds100cs_dap.xml" id="drivers" xml="tixds100cs_dap.xml" xmlpath="drivers"/>
+            <instance XML_version="1.2" href="drivers/tixds100csstm.xml" id="drivers" xml="tixds100csstm.xml" xmlpath="drivers"/>
+            <instance XML_version="1.2" href="drivers/tixds100etbcs.xml" id="drivers" xml="tixds100etbcs.xml" xmlpath="drivers"/>
+            <platform XML_version="1.2" id="platform_0">
+                <instance XML_version="1.2" desc="TMS320C6678" href="devices/C6678.xml" id="TMS320C6678" xml="C6678.xml" xmlpath="devices"/>
+            <device HW_revision="1" XML_version="1.2" description="C66x core" id="TMS320C6678" partnum="TMS320C6678">
+                    <router HW_revision="1.0" XML_version="1.2" description="ICEPick_D Router" id="IcePick_D_0" isa="ICEPICK_D">
+                        <subpath id="subpath_0">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_0" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_1">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_1" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_2">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_2" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_3">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_3" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_4">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_4" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_5">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_5" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_6">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_6" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                        <subpath id="subpath_7">
+                            <cpu HW_revision="1.0" XML_version="1.2" description="C66xx CPU" id="C66xx_7" isa="TMS320c66xx">
+                                <property Type="filepathfield" Value="..\..\emulation\boards\evmc6678l\gel\evmc6678l.gel" id="GEL File"/>
+                            </cpu>
+                        </subpath>
+                    </router>
+                </device>
+            </platform>
+        </connection>
+    </configuration>
+</configurations>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/generated/.dummy b/tutorials/org.ietr.preesm.sobel/CodeC6678/generated/.dummy
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_rgb.txt b/tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_rgb.txt
new file mode 100644
index 0000000..f13ce55
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_rgb.txt
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<java version="1.6.0_13" class="java.beans.XMLDecoder">
+ <object class="com.ti.dvt.ui.views.core.ImageProp">
+  <void property="delegateProp">
+   <object class="com.ti.dvt.ui.views.core.RGBProp">
+    <void property="blueMask">
+     <long>255</long>
+    </void>
+    <void property="greenMask">
+     <long>255</long>
+    </void>
+    <void property="lineCount">
+     <int>288</int>
+    </void>
+    <void property="lineStride">
+     <int>352</int>
+    </void>
+    <void property="pixelCountPerLine">
+     <int>352</int>
+    </void>
+    <void property="pixelStride">
+     <int>1</int>
+    </void>
+    <void property="redMask">
+     <long>255</long>
+    </void>
+    <void property="startAddress">
+     <string>y</string>
+    </void>
+   </object>
+  </void>
+  <void property="scrollLock">
+   <boolean>true</boolean>
+  </void>
+ </object>
+</java>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_yuv.txt b/tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_yuv.txt
new file mode 100644
index 0000000..0a64bb2
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/image_analyzer/config_yuv.txt
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<java version="1.6.0_13" class="java.beans.XMLDecoder">
+ <object class="com.ti.dvt.ui.views.core.ImageProp">
+  <void property="delegateProp">
+   <object class="com.ti.dvt.ui.views.core.YUVProp">
+    <void property="ULineStride">
+     <int>176</int>
+    </void>
+    <void property="UMask">
+     <long>255</long>
+    </void>
+    <void property="UPixelStride">
+     <int>1</int>
+    </void>
+    <void property="UStartAddress">
+     <string>0x80018C00</string>
+    </void>
+    <void property="UVvs">
+     <int>2</int>
+    </void>
+    <void property="VLineStride">
+     <int>176</int>
+    </void>
+    <void property="VMask">
+     <long>255</long>
+    </void>
+    <void property="VPixelStride">
+     <int>1</int>
+    </void>
+    <void property="VStartAddress">
+     <string>0x8001EF00</string>
+    </void>
+    <void property="YLineStride">
+     <int>352</int>
+    </void>
+    <void property="YMask">
+     <long>255</long>
+    </void>
+    <void property="YPixelStride">
+     <int>1</int>
+    </void>
+    <void property="YStartAddress">
+     <string>0x80000000</string>
+    </void>
+    <void property="dataFormat">
+     <string>Planar</string>
+    </void>
+    <void property="lineCount">
+     <int>288</int>
+    </void>
+    <void property="pixelCountPerLine">
+     <int>352</int>
+    </void>
+    <void property="resolution">
+     <string>4:2:0</string>
+    </void>
+   </object>
+  </void>
+  <void property="scrollLock">
+   <boolean>true</boolean>
+  </void>
+ </object>
+</java>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/c6678.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/c6678.h
new file mode 100644
index 0000000..0920ece
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/c6678.h
@@ -0,0 +1,16 @@
+/*
+ * c6678.h
+ *
+ *  Created on: 8 août 2013
+ *      Author: Karol
+ */
+
+#ifndef C6678_H_
+#define C6678_H_
+
+#include "yuvDisplay.h"
+#include "yuvRead.h"
+#include "sobel.h"
+#include "splitMerge.h"
+
+#endif /* C6678_H_ */
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/cache.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/cache.h
new file mode 100644
index 0000000..55f18eb
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/cache.h
@@ -0,0 +1,101 @@
+/*
+ ============================================================================
+ Name        : cache.h
+ Author      : kdesnos
+ Version     : 1.1
+ Copyright   : CECILL-C
+ Description : Parameter to configure the cache.
+ ============================================================================
+ */
+
+#ifndef CACHE_H
+#define CACHE_H
+
+#include <ti/csl/csl_cacheAux.h>
+#include <xdc/runtime/System.h>
+
+// SET Cacheable to 1 to activate caches
+// 0 otherwise
+#define CACHEABLE 0
+
+// Activate Cache_level to L1 or L2
+#define L1
+//#define L2
+
+#ifndef L2
+#ifndef L1
+// NO cache is activated
+#define CACHE_LINE_SIZE 1
+#define cache_wbInv(buffer,size)
+#define cache_wb(buffer,size)
+#define cache_inv(buffer,size)
+
+#else
+// L1 is activated
+#define CACHE_LINE_SIZE CACHE_L1D_LINESIZE
+#define cache_wbInv(buffer,size) 	cache_wbInvL1D(buffer,size)
+#define cache_wb(buffer,size) 		cache_wbL1D(buffer,size)
+#define cache_inv(buffer,size)		cache_invL1D(buffer,size)
+
+#endif
+#else
+
+// L2 is activated
+#define CACHE_LINE_SIZE CACHE_L2_LINESIZE
+#define cache_wbInv(buffer,size) 	cache_wbInvL2(buffer,size)
+#define cache_wb(buffer,size) 		cache_wbL2(buffer,size)
+#define cache_inv(buffer,size)		cache_invL2(buffer,size)
+#endif
+
+
+// cf Advisory 7 from sprz334f
+
+/**
+ * L1D Write-back invalidate operation.
+ * This function implements the Advisory 7 from sprz334f to solve cache
+ * coherency problem.
+ * @see CACHE_wbInvL1D for more information.
+ */
+void cache_wbInvL1D(void* buffer, Uint32 size);
+
+/**
+ * L1D Write-back operation.
+ * This function implements the Advisory 7 from sprz334f to solve cache
+ * coherency problem.
+ * @see CACHE_wbL1D for more information.
+ */
+void cache_wbL1D(void* buffer, Uint32 size);
+
+/*!
+ * L1D Invalidate operation.
+ * This function implements the Advisory 7 from sprz334f to solve cache
+ * coherency problem.
+ * @see CACHE_invL1D for more information.
+ */
+void cache_invL1D(void* buffer, Uint32 size);
+
+/**
+ * L2 Write-back invalidate operation.
+ * This function implements the Advisory 7 from sprz334f to solve cache
+ * coherency problem.
+ * @see CACHE_wbInvL2 for more information.
+ */
+void cache_wbInvL2(void* buffer, Uint32 size);
+
+/**
+ * L2 Write-back operation.
+ * This function implements the Advisory 7 from sprz334f to solve cache
+ * coherency problem.
+ * @see CACHE_wbL2 for more information.
+ */
+void cache_wbL2(void* buffer, Uint32 size);
+
+/**
+ * L2 invalidate operation.
+ * This function implements the Advisory 7 from sprz334f to solve cache
+ * coherency problem.
+ * @see CACHE_invL2 for more information.
+ */
+void cache_invL2(void* buffer, Uint32 size);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/communication.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/communication.h
new file mode 100644
index 0000000..0f78c72
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/communication.h
@@ -0,0 +1,53 @@
+/*
+ ============================================================================
+ Name        : communication.h
+ Author      : kdesnos
+ Version     : 1.0
+ Copyright   : CeCILL-C, IETR, INSA Rennes
+ Description : Communication primitives for Preesm generated C6X code.
+ ============================================================================
+ */
+
+#ifndef COMMUNICATION_H
+#define COMMUNICATION_H
+#include <xdc/std.h>
+
+void communicationInit();
+
+/**
+ * Non-blocking function called by the sender to signal that a buffer is ready
+ * to be sent.
+ *
+ * @param[in] coreID
+ *        the ID of the receiver core
+ */
+void sendStart(Uint16 coreID);
+
+/**
+ * Blocking function (not for shared_mem communication) called by the sender to
+ * signal that communication is completed.
+ */
+void sendEnd();
+
+/**
+ * Non-blocking function called by the receiver begin receiving the
+ * data. (not implemented with shared memory communications).
+ */
+void receiveStart();
+
+/**
+ * Blocking function called by the sender to wait for the received data
+ * availability.
+ *
+ * @param[in] coreID
+ *        the ID of the sender core
+ */
+void receiveEnd(Uint16 coreID);
+
+/**
+ * Barrier used to synchronize all the 8 cores of the DSP.
+ * The communication must be initialized in order to use this method.
+ */
+void busy_barrier();
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/cores.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/cores.h
new file mode 100644
index 0000000..5d27000
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/cores.h
@@ -0,0 +1,33 @@
+/*
+ * cores.h
+ *
+ *  Created on: 2013.08.02
+ *      Author: Karol
+ */
+
+#ifndef CORES_H_
+#define CORES_H_
+
+#include "c6678.h"
+
+typedef unsigned char uchar;
+
+#define CORE0
+void core0(void);
+#define CORE1
+void core1(void);
+#define CORE2
+void core2(void);
+#define CORE3
+void core3(void);
+#define CORE4
+void core4(void);
+#define CORE5
+void core5(void);
+#define CORE6
+void core6(void);
+#define CORE7
+void core7(void);
+
+
+#endif /* CORES_H_ */
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/dump.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/dump.h
new file mode 100644
index 0000000..855f355
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/dump.h
@@ -0,0 +1,71 @@
+/*
+	============================================================================
+	Name        : dump.h
+	Author      : kdesnos
+	Version     :
+	Copyright   : CECILL-C
+	Description : Function called by code generated by the Instrumented C
+                  Printer of Preesm
+	============================================================================
+*/
+
+#ifndef DUMP_H
+#define DUMP_H
+
+/**
+* Character string pointing to the "analysis.csv" file generated by Preesm
+* Instrumented C printer
+*/
+#define DUMP_FILE "../../../Code/generated/analysis.csv"
+
+/**
+* Function used to dump the current processor time to the appropriate
+* place in the dumpBuffer.
+*
+* @param id
+*       The id of the current dump. Each id corresponds to a unique instant
+*       of the schedule generated by Preesm.
+* @param dumpBuffer
+*       This buffer stores all the timings dumped by calling the dumpTime
+        function. This timings will be analyzed by the writeTime function.
+*/
+void dumpTime(int id, int* dumpBuffer);
+
+/**
+* Function used to analyze the timings dumped in the dumpBuffer and write the
+* result to the DUMP_FILE file.
+*
+* @param dumpBuffer
+*        This buffer stores all the timings dumped by calling the dumpTime
+*        function. This timings will be analyzed by the writeTime function.
+*
+* @param nbDump
+*        Total number of dumps of the program (i.e. size of dumpBuffer and
+*        nbExec arrays)
+*
+* @param nbExec
+*        This array stores a unique value for each dumpId corresponding to
+*        the number of times the function/actor preceeding this dump should be
+*        executed in order to get a significant time measure. This parameter
+*        is updated when calling the writeTime function.
+*/
+void writeTime(int* dumpBuffer, int nbDump, int* nbExec);
+
+/**
+* Function used to initialize the analysis mechanism.
+* This function:
+* - Initialises the nbExec array with unitary values
+* - Opens/Creates the analysis csv file.
+*
+* @param nbExec
+*        This array stores a unique value for each dumpId corresponding to
+*        the number of times the function/actor preceeding this dump should be
+*        executed in order to get a significant time measure. This parameter
+*        is updated when calling the writeTime function.
+* @param nbDump
+*        Total number of dumps of the program (i.e. size of dumpBuffer and
+*        nbExec arrays)
+*/
+void initNbExec(int* nbExec, int nbDump);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/fifo.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/fifo.h
new file mode 100644
index 0000000..dda0274
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/fifo.h
@@ -0,0 +1,64 @@
+/*
+	============================================================================
+	Name        : fifo.h
+	Author      : kdesnos
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description : FIFO primitive for Preesm Codegen.
+                  Currently, primitives were tested only for x86 with shared_mem.
+	============================================================================
+*/
+
+#ifndef FIFO_H
+#define FIFO_H
+
+/**
+* Initialize a FIFO by filling its memory with 0.
+*
+* @param headBuffer
+*        pointer to the memory space containing the first element of the fifo.
+* @param headSize
+*        Size of the first element of the fifo (>0)
+* @param bodyBuffer
+*        pointer to the memory space containing all but the first element of
+*        the fifo.
+* @param bodySize
+*        Size of the body of the fifo (>=0)
+*/
+void fifoInit(void* headBuffer, int headSize, void* bodyBuffer, int bodySize);
+
+/**
+* Push a new element in the FIFO from an input buffer.
+*
+* @param inputBuffer
+*        pointer to the data pushed in the fifo.
+* @param headBuffer
+*        pointer to the memory space containing the first element of the fifo.
+* @param headSize
+*        Size of the pushed data and of the first element of the fifo (>0)
+* @param bodyBuffer
+*        pointer to the memory space containing all but the first element of
+*        the fifo.
+* @param bodySize
+*        Size of the body of the fifo (>=0)
+*/
+void fifoPush(void * inputBuffer, void* headBuffer, int headSize, void* bodyBuffer, int bodySize);
+
+/**
+* Pop the head element from the FIFO to an output buffer.
+*
+* @param outputBuffer
+*        pointer to the destination of the popped data.
+* @param headBuffer
+*        pointer to the memory space containing the first element of the fifo.
+* @param headSize
+*        Size of the popped data and of the first element of the fifo (>0)
+* @param bodyBuffer
+*        pointer to the memory space containing all but the first element of
+*        the fifo.
+* @param bodySize
+*        Size of the body of the fifo (>=0)
+*/
+void fifoPop(void * outputBuffer, void* headBuffer, int headSize, void* bodyBuffer, int bodySize);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/memory.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/memory.h
new file mode 100644
index 0000000..50a89c5
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/memory.h
@@ -0,0 +1,113 @@
+/*
+	============================================================================
+	Name        : memory.h
+	Author      : kdesnos
+	Version     : 1.1
+	Copyright   : CECILL-C
+	Description : Dynamic memory allocation primitives for C6678.
+	              These functions replace the regular malloc() and free()
+				  functions when code is printed with dynamic allocation and
+				  mergeable broadcast and roundbuffers is activated.
+	============================================================================
+*/
+
+#ifndef MEMORY_H
+#define MEMORY_H
+
+#include <xdc/std.h>
+#include <ti/ipc/HeapMemMP.h>
+#include <ti/ipc/GateMP.h>
+
+#include <cache.h>
+#include <semaphore6678.h>
+
+// Remember to activate SharedRegion 1 in the .cfg file to activate dynamic memory allocation.
+//#define DYNAMIC_MEM_ALLOC
+
+#ifdef DYNAMIC_MEM_ALLOC
+#ifdef L2
+#warn "Using L2 cache with dynamic memory allocation may lead to data corruption for a unknown reason. Contact Preesm developer for more information."
+#endif
+
+
+/**
+* Allocation function used when a single pointer is allocated several times.
+* This method ensures that only its first call actually performs the
+* allocation.
+*
+* @param sharedHeap
+* 		Heap on which the data should be allocated
+* @param pointer
+*		Adress of the pointer to allocate. The pointer value must be null (=0)
+*       if this is the first call to this function. Otherwise, a previous call
+*       to this function will have allocated the memory and the pointer value
+*       will not be null.
+* @param size
+*       The amount of memory to allocate in byte. The function will allocate
+*       more memory than this value in order to store a semaphore used to
+*       ensure that the number of free is correct.
+* @param nbFree
+*       Number of call to the merged_free function for this buffer. Only the
+*       last call will actually free the memory.
+* @param mutex
+*       Semaphore (used as a mutex) used to ensure that no concurrent
+*       calls to multiple_malloc() are effectively running.
+* @param mutexID
+* 		Unique character string used to identify the semaphore associated to
+* 		this memory.
+* @param align
+* 		The desired alignment of the allocated memory.
+*
+* @return a pointer to the allocated memory.
+*
+*/
+void* multiple_malloc(HeapMemMP_Handle sharedheap, void** pointer, int size, int nbFree, sem_t *mutex, const char* mutexID, int align);
+
+/**
+* Allocation function used when a single pointer is allocated once and freed
+* multiple times.
+*
+* @param sharedHeap
+* 		Heap where the memory is allocated
+* @param pointer
+*		Adress of the pointer to allocate.
+* @param size
+*       The amount of memory to allocate in byte. The function will allocate
+*       more memory than this value in order to store a semaphore used to
+*       ensure that the number of free is correct.
+* @param nbFree
+*       Number of call to the merged_free function for this buffer. Only the
+*       last call will actually free the memory.
+* @param mutexID
+* 		Unique character string used to identify the semaphore associated to
+* 		this memory.
+* @param align
+* 		Alignment for the allocation.
+*
+* @return a pointer to the allocated memory
+*
+*/
+void* merged_malloc(HeapMemMP_Handle sharedheap, void** pointer, int size, int nbFree, const char* mutexID, int align);
+
+/**
+* Free function used when a single pointer is allocated once or several times
+* but must be freed only once.
+*
+* @param sharedHeap
+* 		Heap where the memory is allocated
+*
+* @param pointer
+*		Adress of the pointer to free.
+*
+* @param size
+*       The amount of memory to allocate in byte. The function will allocate
+*       more memory than this value in order to store a semaphore used to
+*       ensure that the number of free is correct.
+*
+* @return a pointer to the allocated memory or 0 if the memory was freed.
+*
+*/
+void*  merged_free(HeapMemMP_Handle sharedheap, void* pointer, int size);
+
+#endif // DYNAMIC_MEM_ALLOC
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/preesm.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/preesm.h
new file mode 100644
index 0000000..4a5dd46
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/preesm.h
@@ -0,0 +1,17 @@
+/*
+	============================================================================
+	Name        : preesm.h
+	Author      : kdesnos
+	Version     : 1.0
+	Copyright   : CECILL-C, IETR, INSA Rennes
+	Description : Usefull declarations for all headers used in preesm.
+	============================================================================
+*/
+
+#ifndef PREESM_H
+#define PREESM_H
+
+#define IN
+#define OUT
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/semaphore6678.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/semaphore6678.h
new file mode 100644
index 0000000..60ec388
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/semaphore6678.h
@@ -0,0 +1,141 @@
+/*
+	============================================================================
+	Name        : semaphore6678.h
+	Author      : kdesnos
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description : Set of functions ans structure to handle multicore semaphores
+	              on a C6678 DSP Multicore EVM
+	============================================================================
+*/
+
+#ifndef SEMAPHORE_6678_H
+#define SEMAPHORE_6678_H
+
+#include <xdc/std.h>
+#include <ti/ipc/GateMP.h>
+
+/* Notify event number that the app uses for sem_delete*/
+#define EVENTID_SEM_DELETE         11
+
+/**
+ * Structure used to store all information related to a semaphore.
+ * - mutex:     the GateMP associated to the semaphore and used to prevent
+ *              concurrent accesses to the semaphore value.
+ * - id:        Character string used to identify the GateMP associated to the
+ *              semaphore. This ID must be unique.
+ * - value:     Integer value associated to the semaphore.
+ * - creatorID: Integer id of the core that created this semaphore. Only this
+ *              core may delete the GateMP associated to this semaphore.
+ */
+typedef struct sem_t {
+	GateMP_Handle mutex ;
+	const char* id;
+	int value;
+	int creatorID;
+} sem_t;
+
+
+/**
+ * This function empties the semaphoresToClean array by deleting the GateMP
+ * stored in it.
+ *
+ * Interrupts are disabled during this function call.
+ */
+void sem_clean();
+
+/**
+ * Initialize a new semaphore.
+ * This function creates the GateMP associated to a new semaphore and
+ * initializes the semaphore value.
+ * Only the core calling this function can delete the GateMP associated
+ * to the semaphore. (cf. sem_destroy()).
+ *
+ * This function calls the sem_clean() function.
+ *
+ * @param sem
+ * 		Pointer to the sem_t structure initialized by this function.
+ * @param pshared
+ * 		Parameter not used in current version. (cf. pthread for more info)
+ * @param initValue
+ * 		Initial value of the semaphore.
+ * @param mutexID
+ * 		Character string used as a unique identifier for the GateMP associated
+ * 		to this semaphore. The behavior of this function with a non-unique ID
+ * 		has not been tested.
+ */
+void sem_init(sem_t * sem, int pshared, int initValue, const char* mutexID);
+
+/**
+ * Increment the value of the semaphore.
+ * This function is used to increment the value associated to the semaphore
+ * passed as a parameter. The value incrementation is protected by a GateMP.
+ *
+ * This function calls the sem_clean() function.
+ *
+ * @param sem
+ * 		Pointer to the sem_t structure whose value is incremented by this
+ * 		function. The semaphore passed as a parameter must have been
+ * 		initialized by the sem_init() function before calling sem_post().
+ */
+void sem_post(sem_t *sem);
+
+/**
+ * Decrement the value of the semaphore.
+ * This function waits for the value of the semaphore to be greater than 0.
+ * As soon as this happens, this function decrement the semaphore value and
+ * returns.
+ *
+ * This function calls the sem_clean() function.
+ *
+ * @param sem
+ * 		Pointer to the sem_t structure whose value is decremented by this
+ * 		function. The semaphore passed as a parameter must have been
+ * 		initialized by the sem_init() function before calling sem_post().
+ */
+void sem_wait(sem_t *sem);
+
+/**
+ * Try to decrement the value of the semaphore.
+ * This function checks for the value of the semaphore to be greater than 0.
+ * In such case, the value of the semaphore is decremented and the function
+ * returns 0. Otherwise (value <= 0), the function returns -1.
+ *
+ * This function calls the sem_clean() function.
+ *
+ * @param sem
+ * 		Pointer to the sem_t structure whose value is decremented by this
+ * 		function. The semaphore passed as a parameter must have been
+ * 		initialized by the sem_init() function before calling sem_post().
+ * @return 0 if the value of the semaphore was greater than 0, else -1.
+ */
+int  sem_trywait(sem_t *sem);
+
+/**
+ * Function used to destroy a semaphore.
+ * If the function is called on the same core as the one that initialized the
+ * semaphore (sem_init()), the function closes and deletes the GateMP.
+ * Otherwise, this function sends a notification event to the sem->creatorID
+ * core. This notification will be received by the sem_destroyCallback()
+ * callback function of the remote core.
+ *
+ * This function calls the sem_clean() function.
+ *
+ * @param sem
+ * 		Pointer to the sem_t structure to destroy.
+ */
+void sem_destroy(sem_t *sem);
+
+/**
+ * Callback function called when a remote processor destroys a semaphore
+ * that was initalized by the current core. Since GateMP_delete() cannot
+ * be called from a callback function, this function pushes the received
+ * GateMP_Handle in the semaphoresToClean() array.
+ *
+ * @param payload
+ * 		The GateMP_Handle of the semaphore that must be deleted.
+ */
+Void sem_destroyCallback(UInt16 procId, UInt16 lineId, UInt32 eventId,
+		UArg arg, UInt32 payload);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/sobel.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/sobel.h
new file mode 100644
index 0000000..7029d02
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/sobel.h
@@ -0,0 +1,31 @@
+/*
+	============================================================================
+	Name        : sobel.h
+	Author      : kdesnos
+	Version     : 1.1
+	Copyright   : CeCILL-C
+	Description : 2D Sobel filtering function
+	============================================================================
+*/
+
+#ifndef SOBEL_H
+#define SOBEL_H
+
+#include "preesm.h"
+
+/**
+* Function to apply the sobel filter to an image of size width*height.
+* The 1 pixel-wide border of the image will not be computed.
+*
+* @param width
+*        The width of the processed image
+* @param width
+*        The heigth of the processed image
+* @param input
+*        The input image
+* @param output
+*        The output image
+*/
+void sobel(int width, int height, IN unsigned char *input, OUT unsigned char *output);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/splitMerge.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/splitMerge.h
new file mode 100644
index 0000000..83ba97d
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/splitMerge.h
@@ -0,0 +1,52 @@
+/*
+	============================================================================
+	Name        : splitMerge.h
+	Author      : kdesnos
+	Version     : 1.1
+	Copyright   : CECILL-C
+	Description : Function used to split an image into overlapping slices and
+                  merge them back together.
+	============================================================================
+*/
+
+#ifndef SPLIT_MERGE_H
+#define SPLIT_MERGE_H
+
+#include "preesm.h"
+
+/**
+* Function used to split an input image of size width*height into nbSlices
+* slices of size width*(height/nbSlice+2). It is the developper responsibility
+* to ensure that height is a multiple of nbSlice.
+*
+* @param nbSlice
+*        the number of slices produced
+* @param width
+*        the width of the input image
+* @param height
+*        the height of the input image
+* @param input
+*        the input image of size width*height
+* @param output
+*        the output buffer of size nbSlice*[width*(height/nbSlice+2)]
+*/
+void split(int nbSlice, int width, int height, IN unsigned char *input, OUT unsigned char *output);
+
+/**
+* Function used to assemble nbSlices slices of size width*(height/nbSlice+2)
+* into an output image of size width*height.
+*
+* @param nbSlice
+*        the number of slices assembled
+* @param width
+*        the width of the output image
+* @param height
+*        the height of the output image
+* @param input
+*        the input image slices
+* @param output
+*        the output image of size width*height
+*/
+void merge(int nbSlice, int width, int height, IN unsigned char *input, OUT unsigned char *output);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/utils.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/utils.h
new file mode 100644
index 0000000..1f0c1a5
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/utils.h
@@ -0,0 +1,29 @@
+#ifndef UTILS_H
+#define UTILS_H
+
+#include <xdc/std.h>
+/**
+ * Sets the MPAX register for the indexed segment.</br>
+ * The segment is configured to be readable and writable by users and
+ * supervisors
+ *
+ * @param[in] index
+ * The index of the segment used for this translation.
+ * @param[in] bAddr
+ * The virtual address used to access memory
+ * @param[in] rAddr
+ * The real address accessed when using the virtual address
+ * @param[in] segSize
+ * Code for the size of the translated address range.
+ * @param[in] cacheable
+ * Whether the segment should be cacheable or not
+ *
+ * @see sprugw0c for more information on the parameters
+ */
+extern Bool isEnded[1];
+
+void set_MPAX(int index, Uint32 bAddr, Uint32 rAddr, Uint8 segSize, Bool cacheable);
+
+int endExecution();
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvDisplay.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvDisplay.h
new file mode 100644
index 0000000..711da04
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvDisplay.h
@@ -0,0 +1,73 @@
+/*
+	============================================================================
+	Name        : displayYUV.h
+	Author      : mpelcat & kdesnos
+	Version     :
+	Copyright   :
+	Description : Displaying YUV frames one next to another in a row.
+	============================================================================
+*/
+#ifndef DISPLAY_YUV
+#define DISPLAY_YUV
+
+#include "preesm.h"
+
+#define NB_DISPLAY 1
+#define DISPLAY_W 352*NB_DISPLAY
+#define DISPLAY_H 288
+
+#define INIT_OVERLAY {NULL} // must be se same size as NB_DISPLAY
+
+/**
+* Function called to display one of the YUV frame of the window.
+* The size of the displayed frame must correspond to the one declared
+* when initializing the display.
+*
+* @param id
+*        The id of the frame to display
+* @param y
+*        the Y component of the frame to display
+* @param u
+*        the U component of the frame to display
+* @param v
+*        the V component of the frame to display
+*/
+void yuvDisplay(int id, IN unsigned char *y, IN unsigned char *u, IN unsigned char *v);
+
+/**
+* Initialize a new display with a parameterizable resolution and open a
+* display window (if not already opened).
+* The resolution of the new display must be compatible with the one
+* defined with the pre-processor variables.
+* A single window can contain several display. In such case, the total width
+* of the displays must not exceed DISPLAY_W and the maximum height of a
+* display must not exceed DISPLAY_H. Displays will be placed side by side
+* in ascending id. All displays must have the same width in the current
+* implementation.
+*
+* @param id
+*        The ID of the initialized display.
+* @param width
+*        the width of the initialized display
+* @param height
+*        the height of the initialized display
+*/
+void yuvDisplayInit (int id, int width, int height);
+
+/**
+* Function used to free a display
+*
+* @param id
+*        the id of the freed display
+*/
+void yuvFinalize(int id);
+
+/**
+* Function used to refresh the display with the given id in the windo.
+*
+* @param id
+*        the id of the refreshed display.
+*/
+void yuvRefreshDisplay(int id);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvRead.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvRead.h
new file mode 100644
index 0000000..3762453
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/include/yuvRead.h
@@ -0,0 +1,48 @@
+/*
+	============================================================================
+	Name        : readYUV.h
+	Author      : kdesnos & mpelcat
+	Version     : 1.1
+	Copyright   : CECILL-C
+	Description : Actor code to read a file from the hard drive
+	============================================================================
+*/
+
+#ifndef READ_YUV_H
+#define READ_YUV_H
+
+#include "preesm.h"
+
+//#define PATH "/home/user/Temp/akiyo_cif.yuv"
+#define PATH "./akiyo_cif.yuv"
+
+#define NB_FRAME 300
+
+/**
+* Initialize the readYUV actor.
+* Open the YUV file at the given PATH and check its size.
+*
+* @param width
+*        The width of the opened YUV file
+* @param height
+*        The heigth of the opened YUV file
+*/
+void initReadYUV(int width, int height);
+
+/**
+* Read a new frame from the YUV file.
+*
+* @param width
+*        The width of the opened YUV file
+* @param height
+*        The heigth of the opened YUV file
+* param y
+*       Destination of the Y component read from the file
+* param u
+*       Destination of the U component read from the file
+* param v
+*       Destination of the V component read from the file
+*/
+void readYUV(int width, int height, OUT unsigned char *y, OUT unsigned char *u, OUT unsigned char *v);
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/modelPreesm.cfg b/tutorials/org.ietr.preesm.sobel/CodeC6678/modelPreesm.cfg
new file mode 100644
index 0000000..e856404
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/modelPreesm.cfg
@@ -0,0 +1,91 @@
+
+var MultiProc = xdc.useModule('ti.sdo.utils.MultiProc');
+var Memory = xdc.useModule('xdc.runtime.Memory');
+
+/*
+ *  Get the list of names that the build device supports.
+ *  I.e. ["CORE0", "CORE1", "CORE2" ... ]
+ */
+var nameList = MultiProc.getDeviceProcNames();
+
+/*
+ *  Since this is a single-image example, we don't (at build-time) which
+ *  processor we're building for.  We therefore supply 'null'
+ *  as the local procName and allow IPC to set the local procId at runtime.
+ */
+MultiProc.setConfig(null, nameList);
+
+/*
+ *  The SysStd System provider is a good one to use for debugging
+ *  but does not have the best performance. Use xdc.runtime.SysMin
+ *  for better performance.
+ */
+var System   = xdc.useModule('xdc.runtime.System');
+var SysStd   = xdc.useModule('xdc.runtime.SysStd');
+System.SupportProxy = SysStd;
+/* Support for %f in printf */
+System.extendedFormats = "%f%$S";
+
+/* Modules explicitly used in the application */
+var MessageQ    = xdc.useModule('ti.sdo.ipc.MessageQ');
+var Ipc         = xdc.useModule('ti.sdo.ipc.Ipc');
+var HeapBufMP   = xdc.useModule('ti.sdo.ipc.heaps.HeapBufMP');
+var MultiProc   = xdc.useModule('ti.sdo.utils.MultiProc');
+var Notify = xdc.useModule('ti.sdo.ipc.Notify');
+var Timestamp = xdc.useModule('xdc.runtime.Timestamp');
+
+
+/* BIOS/XDC modules */
+var BIOS        = xdc.useModule('ti.sysbios.BIOS');
+BIOS.heapSize   = 0x8000;
+var Task        = xdc.useModule('ti.sysbios.knl.Task');
+
+var tsk0 = Task.create('&tsk0_func');
+tsk0.instance.name = "tsk0";
+
+/* Synchronize all processors (this will be done in Ipc_start) */
+Ipc.procSync = Ipc.ProcSync_ALL;
+
+/* Shared Memory base address and length */
+var SHAREDMEM           = 0x0C000000;
+var SHAREDMEMSIZE       = 0x000FFFFC; // 1 MByte - 4 byte
+
+/*
+ *  Need to define the shared region. The IPC modules use this
+ *  to make portable pointers. All processors need to add this
+ *  call with their base address of the shared memory region.
+ *  If the processor cannot access the memory, do not add it.
+ */
+var SharedRegion = xdc.useModule('ti.sdo.ipc.SharedRegion');
+SharedRegion.setEntryMeta(0,
+    { base: SHAREDMEM,
+      len:  SHAREDMEMSIZE,
+      ownerProcId: 0,
+      isValid: true,
+      name: "DDR2 RAM",
+    });
+
+/* Create a heap */
+/* Uncomment the following lines only if you are using the dynamic allocation
+var HeapMemMP = xdc.useModule('ti.sdo.ipc.heaps.HeapMemMP');
+SharedRegion.setEntryMeta(1,
+    { base: 0x80000000,
+      len:  0x10000000,
+      ownerProcId: 0,
+      isValid: true,
+      name: "DDR3",
+      createHeap: true,
+    });
+    */
+
+
+/** SharedMemory Section */
+Program.sectMap[".mySharedMem"] = "DDR3";
+Program.sectMap[".MSMCSRAM"] = "MSMCSRAM";
+
+/** Const Section DDR3*/
+Program.sectMap[".myConstMem"] = "DDR3";
+
+Program.sectMap[".myInputVideoMem"] = new Program.SectionSpec();
+Program.sectMap[".myInputVideoMem"].loadSegment ="DDR3";
+Program.sectMap[".myInputVideoMem"].type = "NOINIT";
\ No newline at end of file
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.dlls b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.dlls
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.executables b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.executables
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.interfaces b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.interfaces
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.libraries b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.libraries
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.xdcenv.mak b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.xdcenv.mak
new file mode 100644
index 0000000..eeed687
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/.xdcenv.mak
@@ -0,0 +1,16 @@
+#
+_XDCBUILDCOUNT = 1
+ifneq (,$(findstring path,$(_USEXDCENV_)))
+override XDCPATH =
+override XDCROOT = C:/ti/xdctools_3_23_04_60
+override XDCBUILDCFG = ./config.bld
+endif
+ifneq (,$(findstring args,$(_USEXDCENV_)))
+override XDCARGS =
+override XDCTARGETS =
+endif
+#
+ifeq (0,1)
+PKGPATH = C:/ti/xdctools_3_23_04_60/packages;..
+HOSTOS = Windows
+endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xdc b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xdc
new file mode 100644
index 0000000..5b4dd52
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xdc
@@ -0,0 +1,55 @@
+/*!
+ * File generated by platform wizard. DO NOT MODIFY
+ *
+ */
+
+metaonly module Platform inherits xdc.platform.IPlatform {
+
+    config ti.platforms.generic.Platform.Instance CPU =
+        ti.platforms.generic.Platform.create("CPU", {
+            clockRate:      1000,
+            catalogName:    "ti.catalog.c6000",
+            deviceName:     "TMS320C6678",
+            customMemoryMap:
+           [
+                ["MSMCSRAM",
+                     {
+                        name: "MSMCSRAM",
+                        base: 0x0c000000,
+                        len: 0x00200000,
+                        space: "code/data",
+                        access: "RWX",
+                     }
+                ],
+                ["L2SRAM",
+                     {
+                        name: "L2SRAM",
+                        base: 0x00800000,
+                        len: 0x00080000,
+                        space: "code/data",
+                        access: "RWX",
+                     }
+                ],
+                ["DDR3",
+                     {
+                        name: "DDR3",
+                        base: 0x80000000,
+                        len: 0x20000000,
+                        space: "code/data",
+                        access: "RWX",
+                     }
+                ],
+           ],
+          l2Mode:"0k",
+          l1PMode:"32k",
+          l1DMode:"32k",
+
+    });
+
+instance :
+
+    override config string codeMemory  = "L2SRAM";
+    override config string dataMemory  = "L2SRAM";
+    override config string stackMemory = "L2SRAM";
+
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xs b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xs
new file mode 100644
index 0000000..415acd5
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/Platform.xs
@@ -0,0 +1,31 @@
+/*!
+ * File generated by platform wizard. DO NOT MODIFY.
+ *
+ */
+
+function getCpuDataSheet(cpuId)
+{
+    return this.$module.CPU.getCpuDataSheet(cpuId);
+}
+
+function getCreateArgs()
+{
+    return this.$module.CPU.getCreateArgs();
+}
+
+function getExeContext(prog)
+{
+    return this.$module.CPU.getExeContext(prog);
+}
+
+
+function getExecCmd(prog)
+{
+    return this.$module.CPU.getExecCmd(prog);
+}
+
+
+function getLinkTemplate(prog)
+{
+    return this.$module.CPU.getLinkTemplate(prog);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/config.bld b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/config.bld
new file mode 100644
index 0000000..8e7032b
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/config.bld
@@ -0,0 +1,6 @@
+/*!
+ * File generated by platform wizard. DO NOT MODIFY
+ *
+ */
+
+Build.useTargets = null;
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.bld b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.bld
new file mode 100644
index 0000000..2b778b0
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.bld
@@ -0,0 +1,7 @@
+/*!
+ * File generated by platform wizard. DO NOT MODIFY.
+ *
+ */
+
+Pkg.attrs.archiver = "zip";
+Pkg.attrs.exportAll = true;
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.mak b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.mak
new file mode 100644
index 0000000..79f8f43
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.mak
@@ -0,0 +1,159 @@
+#
+#  Do not edit this file.  This file is generated from
+#  package.bld.  Any modifications to this file will be
+#  overwritten whenever makefiles are re-generated.
+#
+
+unexport MAKEFILE_LIST
+MK_NOGENDEPS := $(filter clean,$(MAKECMDGOALS))
+override PKGDIR = preesm6678
+XDCINCS = -I. -I$(strip $(subst ;, -I,$(subst $(space),\$(space),$(XPKGPATH))))
+XDCCFGDIR = package/cfg/
+
+#
+# The following dependencies ensure package.mak is rebuilt
+# in the event that some included BOM script changes.
+#
+ifneq (clean,$(MAKECMDGOALS))
+C:/ti/xdctools_3_23_04_60/include/utils.tci:
+package.mak: C:/ti/xdctools_3_23_04_60/include/utils.tci
+C:/ti/xdctools_3_23_04_60/packages/xdc/xdc.tci:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/xdc.tci
+C:/ti/xdctools_3_23_04_60/packages/xdc/template.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/template.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/om2.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/om2.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/xmlgen.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/xmlgen.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/xmlgen2.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/xmlgen2.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/IPackage.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/IPackage.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/package.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/package.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/global/Clock.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/services/global/Clock.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/global/Trace.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/services/global/Trace.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/bld.js:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/bld.js
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/BuildEnvironment.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/BuildEnvironment.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/PackageContents.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/PackageContents.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/_gen.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/_gen.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Library.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Library.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Executable.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Executable.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Repository.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Repository.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Configuration.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Configuration.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Script.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Script.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Manifest.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Manifest.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Utils.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/Utils.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/ITarget.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/ITarget.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/ITarget2.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/ITarget2.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/ITargetFilter.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/ITargetFilter.xs
+C:/ti/xdctools_3_23_04_60/packages/xdc/bld/package.xs:
+package.mak: C:/ti/xdctools_3_23_04_60/packages/xdc/bld/package.xs
+package.mak: config.bld
+package.mak: package.bld
+endif
+
+
+all: .executables
+.executables: .libraries .dlls
+.libraries: .interfaces
+
+PKGCFGS := $(wildcard package.xs) package/build.cfg
+.interfaces: package/package.xdc.inc package/package.defs.h package.xdc $(PKGCFGS)
+
+-include package/package.xdc.dep
+package/%.xdc.inc package/%_preesm6678.c package/%.defs.h: %.xdc $(PKGCFGS)
+	@$(MSG) generating interfaces for package preesm6678" (because $@ is older than $(firstword $?))" ...
+	$(XSRUN) -f xdc/services/intern/cmd/build.xs $(MK_IDLOPTS) -m package/package.xdc.dep -i package/package.xdc.inc package.xdc
+
+ifeq (,$(MK_NOGENDEPS))
+-include package/package.cfg.dep
+endif
+
+package/package.ext.xml: package/package.cfg.xdc.inc
+package/package.cfg.xdc.inc: $(XDCROOT)/packages/xdc/cfg/cfginc.js package.xdc
+	@$(MSG) generating schema include file list ...
+	$(CONFIG) -f $(XDCROOT)/packages/xdc/cfg/cfginc.js preesm6678 $@
+
+test:;
+%,copy:
+	@$(if $<,,$(MSG) don\'t know how to build $*; exit 1)
+	@$(MSG) cp $< $@
+	$(RM) $@
+	$(CP) $< $@
+
+$(XDCCFGDIR)%.c $(XDCCFGDIR)%.h $(XDCCFGDIR)%.xdl: $(XDCCFGDIR)%.cfg .interfaces $(XDCROOT)/packages/xdc/cfg/Main.xs
+	@$(MSG) "configuring $(_PROG_NAME) from $< ..."
+	$(CONFIG) $(_PROG_XSOPTS) xdc.cfg $(_PROG_NAME) $(XDCCFGDIR)$*.cfg $(XDCCFGDIR)$*
+
+.PHONY: release,preesm6678
+preesm6678.zip: package/package.bld.xml
+preesm6678.zip: package/package.ext.xml
+preesm6678.zip: package/package.rel.dot
+preesm6678.zip: package/build.cfg
+preesm6678.zip: package/package.xdc.inc
+preesm6678.zip: package/package.cfg.xdc.inc
+ifeq (,$(MK_NOGENDEPS))
+-include package/rel/preesm6678.zip.dep
+endif
+package/rel/preesm6678/preesm6678/package/package.rel.xml:
+
+preesm6678.zip: package/rel/preesm6678.xdc.inc package/rel/preesm6678/preesm6678/package/package.rel.xml
+	@$(MSG) making release file $@ "(because of $(firstword $?))" ...
+	-$(RM) $@
+	$(call MKRELZIP,package/rel/preesm6678.xdc.inc,package/rel/preesm6678.zip.dep)
+
+
+release release,preesm6678: all preesm6678.zip
+clean:: .clean
+	-$(RM) preesm6678.zip
+	-$(RM) package/rel/preesm6678.xdc.inc
+	-$(RM) package/rel/preesm6678.zip.dep
+
+clean:: .clean
+	-$(RM) .libraries .libraries,*
+clean::
+	-$(RM) .dlls .dlls,*
+#
+# The following clean rule removes user specified
+# generated files or directories.
+#
+
+ifneq (clean,$(MAKECMDGOALS))
+ifeq (,$(wildcard package))
+    $(shell $(MKDIR) package)
+endif
+ifeq (,$(wildcard package/cfg))
+    $(shell $(MKDIR) package/cfg)
+endif
+ifeq (,$(wildcard package/lib))
+    $(shell $(MKDIR) package/lib)
+endif
+ifeq (,$(wildcard package/rel))
+    $(shell $(MKDIR) package/rel)
+endif
+ifeq (,$(wildcard package/internal))
+    $(shell $(MKDIR) package/internal)
+endif
+ifeq (,$(wildcard package/external))
+    $(shell $(MKDIR) package/external)
+endif
+endif
+clean::
+	-$(RMDIR) package
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.xdc b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.xdc
new file mode 100644
index 0000000..6a31c40
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package.xdc
@@ -0,0 +1,8 @@
+/*!
+ * File generated by platform wizard. DO NOT MODIFY.
+ *
+ */
+
+package preesm6678 {
+    module Platform;
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_b150 b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_b150
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_g180 b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_g180
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_r170 b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.vers_r170
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.xdc-y30 b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/.xdc-y30
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/build.cfg b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/build.cfg
new file mode 100644
index 0000000..5ec1eb1
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/build.cfg
@@ -0,0 +1,9 @@
+if (pkg.$vers.length >= 3) {
+    pkg.$vers.push(Packages.xdc.services.global.Vers.getDate(xdc.csd() + '/..'));
+}
+
+pkg.build.libraries = [
+];
+
+pkg.build.libDesc = [
+];
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.bld.xml b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.bld.xml
new file mode 100644
index 0000000..ced03cc
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.bld.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="windows-1252"?>
+<!--  This file conforms to the DTD xdc/bld/build.dtd -->
+<package name="preesm6678" version="" producerId="undefined">
+    <units>
+        <module name="Platform"/>
+    </units>
+    <sources>
+    </sources>
+    <configscripts>
+    </configscripts>
+    <makefiles>
+        <srcFile name="package.mak" src="package.bld"/>
+        <srcFile name="package/package.xdc.dep" src="package.xdc"/>
+        <srcFile name="package/package.cfg.dep" src="package.xdc"/>
+        <srcFile name="package/rel/preesm6678.zip.dep" src="package/rel/preesm6678.xdc.inc"/>
+    </makefiles>
+    <targets>
+    </targets>
+    <libraries>
+    </libraries>
+    <configurations>
+    </configurations>
+    <executables>
+    </executables>
+    <tests>
+    </tests>
+    <releases relDir="package/rel/">
+    <release name="preesm6678"
+        pname="preesm6678.zip"
+        label="default"
+    >
+        <file name="package/package.bld.xml"/>
+        <file name="package/package.ext.xml"/>
+        <file name="package/package.rel.dot"/>
+        <file name="package/build.cfg"/>
+        <file name="package/package.xdc.inc"/>
+        <file name="package/package.cfg.xdc.inc"/>
+    </release>
+    </releases>
+    <repositories>
+    </repositories>
+</package>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.dep b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.dep
new file mode 100644
index 0000000..70768ff
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.dep
@@ -0,0 +1,52 @@
+#
+# The following is generated by utils.genDep for package/package.cfg
+#
+package/package.cfg.c package/package.cfg.h package/package.cfg.xdl:Platform.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/Arctic.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IAntara.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IDaVinci.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IHimalaya.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IOMAP2x3x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IOMAP3xxx.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITI811X.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITI8148.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITI8168.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C642x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_128K.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_1M.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_256K.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_512K.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C6655.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C6x0x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C6x1x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDM6467.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDRA44x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDRA45x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDRx40x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI6484.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI6486.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI648x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI6497.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320DA8xx.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320TCI6608.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320TCI6616.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320TCI663x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/Kepler.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/OMAP4430.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/OMAP5430.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6421.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6428.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6452.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6454.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CDM6431.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CDM647.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CDM648.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CF761990.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CTNETV2685.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TNETV107X.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/Vayu.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/c6x.xs C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/package.xs C:/ti/xdctools_3_23_04_60/packages/ti/platforms/generic/Platform.xs C:/ti/xdctools_3_23_04_60/packages/ti/platforms/generic/package.xs
+
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/Arctic.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IAntara.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IDaVinci.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IHimalaya.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IOMAP2x3x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/IOMAP3xxx.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITI811X.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITI8148.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITI8168.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C642x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_128K.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_1M.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_256K.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C64_512K.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C6655.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C6x0x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320C6x1x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDM6467.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDRA44x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDRA45x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CDRx40x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI6484.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI6486.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI648x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320CTCI6497.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320DA8xx.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320TCI6608.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320TCI6616.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/ITMS320TCI663x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/Kepler.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/OMAP4430.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/OMAP5430.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6421.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6428.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6452.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320C6454.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CDM6431.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CDM647.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CDM648.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CF761990.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TMS320CTNETV2685.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/TNETV107X.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/Vayu.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/c6x.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/catalog/c6000/package.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/platforms/generic/Platform.xs:
+C:/ti/xdctools_3_23_04_60/packages/ti/platforms/generic/package.xs:
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.xdc.inc b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.xdc.inc
new file mode 100644
index 0000000..096a295
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.cfg.xdc.inc
@@ -0,0 +1 @@
+Platform.xs
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.defs.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.defs.h
new file mode 100644
index 0000000..a1b096c
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.defs.h
@@ -0,0 +1,13 @@
+/*
+ *  Do not modify this file; it is automatically
+ *  generated and any modifications will be overwritten.
+ *
+ * @(#) xdc-y30
+ */
+
+#ifndef preesm6678__
+#define preesm6678__
+
+
+
+#endif /* preesm6678__ */
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.ext.xml b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.ext.xml
new file mode 100644
index 0000000..011a052
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.ext.xml
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="windows-1252"?>
+<!--  This file conforms to the DTD xdc/bld/release.dtd -->
+<release name="" label="" date="" buildCount="" producerId="">
+<package name="preesm6678"
+    version=""/>
+<imports>
+</imports>
+<references>
+    <package name="xdc"
+        version="1, 1, 1, 1340817876462"
+        providerId="xdccore">
+        <file name="IPackage.xdc"/>
+        <file name="IPackage.xs"/>
+        <file name="om2.xs"/>
+        <file name="package.xs"/>
+        <file name="template.xs"/>
+        <file name="xdc.tci"/>
+        <file name="xmlgen.xs"/>
+        <file name="xmlgen2.xs"/>
+    </package>
+    <package name="xdc.services.global"
+        version="1, 0, 0, 1340817902737"
+        providerId="xdccore">
+        <file name="Clock.xs"/>
+        <file name="Trace.xs"/>
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.bld"
+        version="1, 0, 2, 1340817883203"
+        providerId="xdccore">
+        <file name="BuildEnvironment.xs"/>
+        <file name="Configuration.xs"/>
+        <file name="Executable.xs"/>
+        <file name="ITarget.xs"/>
+        <file name="ITarget2.xs"/>
+        <file name="ITargetFilter.xs"/>
+        <file name="Library.xs"/>
+        <file name="Manifest.xs"/>
+        <file name="PackageContents.xs"/>
+        <file name="Repository.xs"/>
+        <file name="Script.xs"/>
+        <file name="Utils.xs"/>
+        <file name="_gen.xs"/>
+        <file name="bld.js"/>
+        <file name="package.xs"/>
+    </package>
+    <package name="xdc.platform"
+        version="1, 0, 1, 0, 1340817887431"
+        providerId="xdccore">
+        <file name="ICpuDataSheet.xdc"/>
+        <file name="IExeContext.xdc"/>
+        <file name="IPeripheral.xdc"/>
+        <file name="IPlatform.xdc"/>
+    </package>
+    <package name="ti.platforms.generic"
+        version="1, 0, 0, 1, 1341354351027"
+        providerId="xdccore">
+        <file name="Platform.xdc"/>
+    </package>
+    <package name="xdc.shelf"
+        version="1, 0, 0, 1340817922719"
+        providerId="xdccore">
+        <file name="java\antlr.jar"/>
+        <file name="java\ecj.jar"/>
+        <file name="java\js.jar"/>
+        <file name="java\tar.jar"/>
+    </package>
+    <package name="xdc.services.intern.xsr"
+        version="1, 0, 0, 1340817908153"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.services.spec"
+        version="1, 0, 0, 0, 1340817915472"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.services.intern.gen"
+        version="1, 0, 0, 0, 1340817907115"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.services.intern.cmd"
+        version="1, 0, 0, 0, 1340817906479"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <xdcRoot base="C:/ti/xdctools_3_23_04_60/">
+        <file name="/packages/xdc/package.xdc"/>
+        <file name="include\utils.tci"/>
+        <xdcCorePkg version="16, 0, 2, 0, 1340817885154" producerId="/db/ztree/library/trees/xdc/xdc-y30x/src/packages" buildCount="369" releaseName="xdc_corevers" label="default" date="1340817885154"/>
+    </xdcRoot>
+</references>
+<orphans>
+</orphans>
+</release>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.rel.dot b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.rel.dot
new file mode 100644
index 0000000..62b278d
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.rel.dot
@@ -0,0 +1,258 @@
+digraph dependencies {
+    label="\nPackage preesm6678 Dependency Graph";
+    size="7.5,10";
+    rankdir=LR;
+    ranksep=".75";
+    concentrate="true";
+    node [fixedsize=true, width=1.5, style=filled, color=black];
+    node [font=Helvetica, fontsize=12, fillcolor=lightgrey];
+    preesm6678 [shape=record,label="preesm6678|", URL="package.rel.xml"];
+    node [fontsize=10, fillcolor=white];
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    xdc [shape=record,label="xdc|1, 1, 1", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\package/package.rel.svg"];
+    preesm6678 -> xdc;
+    xdc_services_global [shape=record,label="xdc.services.global|1, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\services\global\package/package.rel.svg"];
+    preesm6678 -> xdc_services_global;
+    xdc_bld [shape=record,label="xdc.bld|1, 0, 2", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\bld\package/package.rel.svg"];
+    preesm6678 -> xdc_bld;
+    xdc_platform [shape=record,label="xdc.platform|1, 0, 1, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\platform\package/package.rel.svg"];
+    preesm6678 -> xdc_platform;
+    ti_platforms_generic [shape=record,label="ti.platforms.generic|1, 0, 0, 1", URL="../C:\ti\xdctools_3_23_04_60\packages\ti\platforms\generic\package/package.rel.svg"];
+    preesm6678 -> ti_platforms_generic;
+    xdc_shelf [shape=record,label="xdc.shelf|1, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\shelf\package/package.rel.svg"];
+    preesm6678 -> xdc_shelf;
+    xdc_services_intern_xsr [shape=record,label="xdc.services.intern.xsr|1, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\services\intern\xsr\package/package.rel.svg"];
+    preesm6678 -> xdc_services_intern_xsr;
+    xdc_services_spec [shape=record,label="xdc.services.spec|1, 0, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\services\spec\package/package.rel.svg"];
+    preesm6678 -> xdc_services_spec;
+    xdc_services_intern_gen [shape=record,label="xdc.services.intern.gen|1, 0, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\services\intern\gen\package/package.rel.svg"];
+    preesm6678 -> xdc_services_intern_gen;
+    xdc_services_intern_cmd [shape=record,label="xdc.services.intern.cmd|1, 0, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\xdc\services\intern\cmd\package/package.rel.svg"];
+    preesm6678 -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+    xdc_services_intern_cmd -> xdc_shelf;
+    xdc_services_intern_cmd -> xdc_services_spec;
+    xdc_services_intern_cmd -> xdc_services_global;
+    xdc_services_intern_cmd -> xdc_services_intern_gen;
+
+    edge [style=solid, color=lightgrey]
+    xdc_utils_tconf [shape=record,label="xdc.utils.tconf|not found"style=rounded, ];
+    xdc_services_intern_cmd -> xdc_utils_tconf;
+    xdc_services_intern_cmd -> xdc_services_global;
+    xdc_services_intern_cmd -> xdc_shelf;
+    xdc_services_intern_cmd -> xdc_services_spec;
+    xdc_services_intern_cmd -> xdc_services_intern_xsr;
+    xdc_services_intern_cmd -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+
+    edge [style=solid, color=blue]
+    xdc_services_intern_gen -> xdc_shelf;
+    xdc_services_intern_gen -> xdc_services_spec;
+    xdc_services_intern_gen -> xdc_services_global;
+    xdc_services_intern_gen -> xdc_services_intern_xsr;
+
+    edge [style=solid, color=lightgrey]
+    xdc_services_intern_gen -> xdc_utils_tconf;
+    xdc_services_intern_gen -> xdc_services_global;
+    xdc_services_intern_gen -> xdc_shelf;
+    xdc_services_intern_gen -> xdc_services_spec;
+    xdc_services_intern_gen -> xdc_services_intern_xsr;
+    xdc_services_intern_gen -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+    xdc_services_spec -> xdc_shelf;
+
+    edge [style=solid, color=lightgrey]
+    xdc_services_spec -> xdc_utils_tconf;
+    xdc_services_spec -> xdc_services_global;
+    xdc_services_spec -> xdc_shelf;
+    xdc_services_spec -> xdc_services_intern_xsr;
+    xdc_services_spec -> xdc_services_intern_cmd;
+    xdc_services_spec -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+    xdc_services_intern_xsr -> xdc_services_global;
+
+    edge [style=solid, color=lightgrey]
+    xdc_services_intern_xsr -> xdc_utils_tconf;
+    xdc_services_intern_xsr -> xdc_services_global;
+    xdc_services_intern_xsr -> xdc_shelf;
+    xdc_services_intern_xsr -> xdc_services_spec;
+    xdc_services_intern_xsr -> xdc_services_intern_cmd;
+    xdc_services_intern_xsr -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    xdc_shelf -> xdc_utils_tconf;
+    xdc_shelf -> xdc_services_global;
+    xdc_shelf -> xdc_services_spec;
+    xdc_shelf -> xdc_services_intern_xsr;
+    xdc_shelf -> xdc_services_intern_cmd;
+    xdc_shelf -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+    ti_platforms_generic -> xdc_platform;
+
+    edge [style=solid, color=lightgrey]
+    ti_platforms_generic -> xdc_services_global;
+    ti_targets [shape=record,label="ti.targets|1, 0, 3", URL="../C:\ti\xdctools_3_23_04_60\packages\ti\targets\package/package.rel.svg"];
+    ti_platforms_generic -> ti_targets;
+    gnu_targets [shape=record,label="gnu.targets|1, 0, 1", URL="../C:\ti\xdctools_3_23_04_60\packages\gnu\targets\package/package.rel.svg"];
+    ti_platforms_generic -> gnu_targets;
+    ti_targets_arm [shape=record,label="ti.targets.arm|2, 0, 1, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\ti\targets\arm\package/package.rel.svg"];
+    ti_platforms_generic -> ti_targets_arm;
+    ti_targets_elf [shape=record,label="ti.targets.elf|1, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\ti\targets\elf\package/package.rel.svg"];
+    ti_platforms_generic -> ti_targets_elf;
+    ti_targets_arp32_elf [shape=record,label="ti.targets.arp32.elf|1, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\ti\targets\arp32\elf\package/package.rel.svg"];
+    ti_platforms_generic -> ti_targets_arp32_elf;
+    ti_targets_arm_elf [shape=record,label="ti.targets.arm.elf|1, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\ti\targets\arm\elf\package/package.rel.svg"];
+    ti_platforms_generic -> ti_targets_arm_elf;
+    gnu_targets_arm [shape=record,label="gnu.targets.arm|1, 0, 0, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\gnu\targets\arm\package/package.rel.svg"];
+    ti_platforms_generic -> gnu_targets_arm;
+    microsoft_targets [shape=record,label="microsoft.targets|1, 0, 2, 0", URL="../C:\ti\xdctools_3_23_04_60\packages\microsoft\targets\package/package.rel.svg"];
+    ti_platforms_generic -> microsoft_targets;
+    ti_platforms_generic -> xdc_platform;
+    ti_platforms_generic -> xdc_shelf;
+    ti_platforms_generic -> xdc_services_spec;
+    ti_platforms_generic -> xdc_services_intern_cmd;
+    ti_platforms_generic -> xdc_services_intern_gen;
+    ti_platforms_generic -> xdc_services_intern_xsr;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    microsoft_targets -> xdc_services_global;
+    microsoft_targets -> xdc_services_intern_xsr;
+    microsoft_targets -> xdc_shelf;
+    microsoft_targets -> xdc_services_intern_gen;
+    microsoft_targets -> xdc_services_spec;
+    microsoft_targets -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+    gnu_targets_arm -> gnu_targets;
+
+    edge [style=solid, color=lightgrey]
+    gnu_targets_arm -> xdc_services_global;
+    gnu_targets_arm -> gnu_targets;
+    gnu_targets_arm -> xdc_services_intern_xsr;
+    gnu_targets_arm -> xdc_shelf;
+    gnu_targets_arm -> xdc_services_intern_gen;
+    gnu_targets_arm -> xdc_services_spec;
+    gnu_targets_arm -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+    ti_targets_arm_elf -> ti_targets;
+
+    edge [style=solid, color=lightgrey]
+    ti_targets_arm_elf -> xdc_services_global;
+    ti_targets_arm_elf -> ti_targets;
+    ti_targets_arm_elf -> ti_targets_arm;
+    ti_targets_arm_elf -> xdc_services_intern_xsr;
+    ti_targets_arm_elf -> xdc_shelf;
+    ti_targets_arm_elf -> xdc_services_intern_gen;
+    ti_targets_arm_elf -> xdc_services_spec;
+    ti_targets_arm_elf -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    ti_targets_arp32_elf -> xdc_services_global;
+    ti_targets_arp32_elf -> ti_targets;
+    ti_targets_arp32_elf -> xdc_services_intern_xsr;
+    ti_targets_arp32_elf -> xdc_shelf;
+    ti_targets_arp32_elf -> xdc_services_intern_gen;
+    ti_targets_arp32_elf -> xdc_services_spec;
+    ti_targets_arp32_elf -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    ti_targets_elf -> xdc_services_global;
+    ti_targets_elf -> ti_targets;
+    ti_targets_elf -> xdc_services_intern_xsr;
+    ti_targets_elf -> xdc_shelf;
+    ti_targets_elf -> xdc_services_intern_gen;
+    ti_targets_elf -> xdc_services_spec;
+    ti_targets_elf -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+    ti_targets_arm -> ti_targets;
+
+    edge [style=solid, color=lightgrey]
+    ti_targets_arm -> xdc_services_global;
+    ti_targets_arm -> ti_targets;
+    ti_targets_arm -> xdc_services_intern_xsr;
+    ti_targets_arm -> xdc_shelf;
+    ti_targets_arm -> xdc_services_intern_gen;
+    ti_targets_arm -> xdc_services_spec;
+    ti_targets_arm -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    gnu_targets -> xdc_services_global;
+    gnu_targets -> xdc_services_intern_xsr;
+    gnu_targets -> xdc_shelf;
+    gnu_targets -> xdc_services_intern_gen;
+    gnu_targets -> xdc_services_spec;
+    gnu_targets -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    ti_targets -> xdc_services_global;
+    ti_targets -> xdc_services_intern_xsr;
+    ti_targets -> xdc_shelf;
+    ti_targets -> xdc_services_intern_gen;
+    ti_targets -> xdc_services_spec;
+    ti_targets -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    xdc_platform -> xdc_utils_tconf;
+    xdc_platform -> xdc_services_global;
+    xdc_platform -> xdc_shelf;
+    xdc_platform -> xdc_services_spec;
+    xdc_platform -> xdc_services_intern_xsr;
+    xdc_platform -> xdc_services_intern_cmd;
+    xdc_platform -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+    xdc_bld -> xdc_services_global;
+    xdc_bld -> xdc_services_intern_cmd;
+
+    edge [style=solid, color=lightgrey]
+    xdc_bld -> xdc_utils_tconf;
+    xdc_bld -> xdc;
+    xdc_bld -> xdc_services_global;
+    xdc_bld -> xdc_shelf;
+    xdc_bld -> xdc_services_spec;
+    xdc_bld -> xdc_services_intern_xsr;
+    xdc_bld -> xdc_services_intern_cmd;
+    xdc_bld -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    xdc_services_global -> xdc_utils_tconf;
+    xdc_services_global -> xdc_shelf;
+    xdc_services_global -> xdc_services_spec;
+    xdc_services_global -> xdc_services_intern_xsr;
+    xdc_services_global -> xdc_services_intern_cmd;
+    xdc_services_global -> xdc_services_intern_gen;
+
+    edge [style=solid, color=blue]
+
+    edge [style=solid, color=lightgrey]
+    xdc -> xdc_utils_tconf;
+    xdc -> xdc_services_global;
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.dep b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.dep
new file mode 100644
index 0000000..00a31c5
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.dep
@@ -0,0 +1,68 @@
+clean::
+	$(RM) package/preesm6678.sch
+	$(RM) package/.vers_g180
+	$(RM) package/.vers_r170
+	$(RM) package/.vers_b150
+	$(RM) package/.xdc-y30
+	$(RM) package/preesm6678.java
+	$(RM) package/preesm6678.class
+	$(RM) package/package_preesm6678.c
+	$(RM) package/package.defs.h
+	$(RM) package/preesm6678.ccs
+
+.interfaces: package/preesm6678.sch package/.vers_g180 package/.vers_r170 package/.vers_b150 package/.xdc-y30 package/preesm6678.java package/package_preesm6678.c package/package.defs.h package/preesm6678.ccs
+package/package.xdc.inc: package/.vers_g180
+package/.vers_g180:
+package/package.xdc.inc: package/.vers_r170
+package/.vers_r170:
+package/package.xdc.inc: package/.vers_b150
+package/.vers_b150:
+
+.interfaces: Platform.xdc
+
+# schema include file dependencies
+Platform.xs:
+package/package.xdc.inc: Platform.xs
+
+# schema update dependencies
+package/package.xdc.inc: Platform.xdc
+package/package.xdc.inc: xdc/IPackage.xdc
+xdc/IPackage.xdc:
+vpath xdc/IPackage.xdc $(XPKGVPATH)
+package/package.xdc.inc: xdc/platform/IPlatform.xdc
+xdc/platform/IPlatform.xdc:
+vpath xdc/platform/IPlatform.xdc $(XPKGVPATH)
+package/package.xdc.inc: ti/platforms/generic/Platform.xdc
+ti/platforms/generic/Platform.xdc:
+vpath ti/platforms/generic/Platform.xdc $(XPKGVPATH)
+package/package.xdc.inc: xdc/platform/IExeContext.xdc
+xdc/platform/IExeContext.xdc:
+vpath xdc/platform/IExeContext.xdc $(XPKGVPATH)
+package/package.xdc.inc: xdc/platform/ICpuDataSheet.xdc
+xdc/platform/ICpuDataSheet.xdc:
+vpath xdc/platform/ICpuDataSheet.xdc $(XPKGVPATH)
+package/package.xdc.inc: xdc/platform/IPeripheral.xdc
+xdc/platform/IPeripheral.xdc:
+vpath xdc/platform/IPeripheral.xdc $(XPKGVPATH)
+
+ifneq (clean,$(MAKECMDGOALS))
+C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/antlr.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/antlr.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/global/java/package.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/services/global/java/package.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/intern/xsr/java/package.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/services/intern/xsr/java/package.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/spec/java/package.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/services/spec/java/package.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/intern/gen/java/package.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/services/intern/gen/java/package.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/ecj.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/ecj.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/tar.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/tar.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/services/intern/cmd/java/package.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/services/intern/cmd/java/package.jar
+C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/js.jar:
+package/package.xdc.inc: C:/ti/xdctools_3_23_04_60/packages/xdc/shelf/java/js.jar
+endif
+# goals for files generated during schema generation but unspecified by schema's pattern rule
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.inc b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.inc
new file mode 100644
index 0000000..8864596
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package.xdc.inc
@@ -0,0 +1,13 @@
+package.xdc
+Platform.xdc
+Platform.xs
+package/preesm6678.sch
+package/.vers_g180
+package/.vers_r170
+package/.vers_b150
+package/.xdc-y30
+package/preesm6678.java
+package/preesm6678.class
+package/package_preesm6678.c
+package/package.defs.h
+package/preesm6678.ccs
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package_preesm6678.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package_preesm6678.c
new file mode 100644
index 0000000..a23d11a
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/package_preesm6678.c
@@ -0,0 +1,20 @@
+/*
+ *  Do not modify this file; it is automatically
+ *  generated and any modifications will be overwritten.
+ *
+ * @(#) xdc-y30
+ */
+
+#include <xdc/std.h>
+
+__FAR__ char preesm6678__dummy__;
+
+#define __xdc_PKGVERS null
+#define __xdc_PKGNAME preesm6678
+#define __xdc_PKGPREFIX preesm6678_
+
+#ifdef __xdc_bld_pkg_c__
+#define __stringify(a) #a
+#define __local_include(a) __stringify(a)
+#include __local_include(__xdc_bld_pkg_c__)
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.ccs b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.ccs
new file mode 100644
index 0000000000000000000000000000000000000000..451b5b2dfa064daf3c426b1b7ae888cf442c8197
GIT binary patch
literal 8558
zcmb_hU2Ggz6~6nwv6DD<;^x=sX5#`?n)NmgCQ3>ZXV*@x?%G?g)24}E#<SO(sb^;<
zGk2YFK|w`OMAeFywloijKDKIKio}mfsptc=0*UlT2&o7menJHVp{UIp2+p}PcXrkp
zduNmQVLUtco^$T~&Uene_uSY2MG}@t2JM=hv#7bO$kfVN29<M_rTX0)e)q<+zwO@<
zCA}q*T97PSR7^$&N>513(ugW)^^qzw6|H`(M3M_lt)|io<PwRLNROg1YEDZHYB93K
z>EC3EI#N<B2EAiTbVYPkby-rYVA8@b(Gp2F6icp}zTbL{t8&|WbatMaZ4xHE&{Rw+
zG$fju!o-jGGBx>o#5T!YH&1k0uhGX|eQ)K)$y_Q*QfEm@vEZ97!<;3?%(7%K(&w84
ze1It=u+6if!BiR9Q3CZN0>=@=ab%q74aCQgOscWqJ~#wad7&w(0N7Tau?el&s8Yl%
zWi=ZO$#ihD4PqGJxPbYf!KdC@xVq=%sdu6zHbvs9qR|qGFDjmY;*8piI{+{l(#?8K
z(wJ)I%%;Ya2F(@pMnl);^d+kOQh)I;iI*DhM@f2$q~!CGrcrf@48WUN(Jh53x;CYi
zz{C_uC|Zr$u0{B1G09}`(_*>-|JaIw<7nA72>kue{lj<P-zIEKGSX{E@{&}iIe?at
z9>b*6YK)D2=?G4L7@3$uX60O<hO5+6BvpA*!huyx-CjwgKKlLg+^;@}BDs30N*mya
zIT#Bg{XQxeRLQcAog-<t2RNetoUa`X9J7t(K+qon&xyeg5CW)f=0n3E;Y0H`8ckEE
z&Uqb<z4F{Y4vu~}@=_GUIWUamC&6WzI@PEtF<Q$ktYi#TVvD-j$XtXenzdY}IFp&4
znah-Cic^!1Gcr>=I)6%G^A1i2C1A-sYcd@{vF6d!3T0-_Y0g>t0#)Y=K)(V)I`3lb
zN(+>?woo27O=$&#*naB6q08?|-;0q5I#_v<I)lC#hne=+29J!L@E&o#FtV}Y4jnyd
zd+o%P@IJT#{PzZgZ9Rgdki;7qNeksI#Ytg!3kKy>#ZRMM_(?zsZN8B)vX3cVn>E7G
zSLBiQK6}~~OxU!bL&~$6L({$O%>|=bl$caKPpR8sm3#$AYd}(y)R5o=lJGQSy?;La
z#(~m~$um(hh~e5aE5K^VX>!wI57kWgrpSx+g2v90w4#AYNR;@hFFY}+O7*iOVPMRF
zgvl)Y0uq)dfqur15XJC~y9i<`C7V<NiZQY$AORMstPW4w8YZ|JybGyVO|3JsJwT$`
z!~`2(v^CK;q4<8pm4-tvFdb7Y2`O+N^lvP9`8Z`P)p5z-DGr(p)8Pe3#G4i_O8$h7
z`PIg*F-)rX(vf$Nn6|f4(JFFyWJFbIu5dHHZfoLm5GWnHgl_}D+o|d5-1u~1!uwF3
zm>Zv&E<G+jBq6d-mnLo@8Gs$gB@m5~2#LV|NQ4gsgEGxyV+&-^yMd{zSAJM8A;O0z
z6}xH7Jed0FTlS5MJbA{^e>iej;$r|Yf3;zG+}#QxhyiM9l3Jz>-CW^|=SH+4qK%K?
z0Y-MVM39?$!xKQQ$3?fTt!}V>f=fYTTZjHu2aC$gYle00=BaTmLZmJ#^($9i$d7-k
zahEeO1wtoyZJw|V6WNH1S8xwpN{$8ZEzn+m|1%%W{C(5&QA91S!)_#44fgGphG~Q%
z&q%CLIgPKmAhJcUWsDJmD<&qMRsO~q4i_+lAO6v6AN=+GzCSvcNTwIzv4&n_WGEn3
zx$qn{VQCD^N!b4C(d0Ltp8M>pd}Z@E7<KaVdSlWxiyi*;4?p|UuF~5azSy$F`Iq3~
zTIIUdi`DJ8kZy26N@M}0EZEz<1_lpF*7@=u(yxC#sSa}pVoHshz_bCDop+yU45gGi
z4K%XeQ22hP#~sQB8Fsx(v#_XloC25Yb>(_xSVmNx=eBT?8(qns8pX}Mw~y{P)J?8n
z->T>gXZC<Aom3B%VRsQu=ss5{rQTl&FLkgbRYa-Q4#4l4M>`H-5V;~86u&>8&vTK^
zf}CW+Ljzf+<XkW1<T22a?M97o*QV@TxjK3%&$ngB*|p-9Z^(Xjg?;V$KYvByF_OUj
zE4LY4Mb(&(s!iSl2`u6eVGKFhJ{R(yY`I!4RA<M_&Lq!zN)tX)9jVsus*7WO=PEji
z3<wcCm4*}9>Waiv>g+2z8rkMbBrMn$hqN;2$|NNjM64DW{fLBwS>Uo7=FZ}r%L1dG
zyq%YUi15de3Mnq|Lh<~eZp3*&2=IEdG6dyF4H8#ZksyFfWM>~cleHZnZ;Q1%T-T(t
zr9-#P*<G%(E;zeeh=k|t9#<qhXNO#gZaBNwmAMm~6}Ys69FlSZAx^m?-B6AbUZBOr
z^ISe8;W=XkbhpY_0pp!x>^|X`Y_T{ydRsYmzpJVXz77kK@O-_;6$#JR&$$xa@b&Yq
z%$?w?z$NK}I3!yIK0r5ztKH>Sffa~5*)_B{XR842R@o{*6l`@8Z0D(S<6?Uk&*qo9
z%Iac^m&lGD>P}K@^BhT757yqt<8dVU=Fi{x?rU#fagH+7q>I6|hFQ7@r#o@3IOXn`
z0xROs^~?_*`Q#Uu&5xrb0hJP7xh|2YQbR%};E<rfQitzJJRh4jBYOjmO#BeaE0b6f
zv1HxgG6^W4@pQG`zT|-aK$GNk7iVJvCu*<kz{ob(gn9?=oLj=`T-s>UJ`|)QC(2-W
zmfUyqISS9h!#F_+Dweu={oS$mj$gXk!@bbLDZ#Kb9(<tW8nC#(#(@&sr_WtJ_x(m{
znI9+-?@}-uJY9b~_nlpze*5ERqa+S~Q>@dP1>S-~EeAXW-m(~XA|BBhkOh@q<z)C&
z)Pz0>=^b$<Pfx+=Rnlbc+-o7h7sBg<&qqBe2DTnw_~~&JX9HD&9^8pJWfuGrSS*NP
z%VB(si3(JD=Fy4S*{LGbpzfJFPct>TC^c1<v1lDD=@}?TXHYYIkg@1)@!<g>x3x+$
z?UtSDPRLv%M&G`pxQ;{oFSm3f0u`uO#l4LQ;ieN9L_%%Sxx(sH_`@PJiV?J1VI)3$
z>ST$V5AO#KEBXO9!{Pk^79){$ut#m{Vc%}8E9}LHZ^k|{Ah5^b_3|HKp?9>R+-3ud
zd6B*@f&3x}A)$LAz~rT_ksMl!#ata93$S;v#okqBx`I%QH2}hWw+^AB)eoVwe#5x8
zw8rhM4+xesWIXO~<tOu<VwQca-Y0dqP-=B<SJeX9Q3b8O(yY@eYOko{%lJ5fkCX6-
zY{y3&AAH|Z6y|+Z;5udgdlD4&Ol@zC61!ool8(FO$u&B)u4LLY`En9yf=+Uw(LU++
zA;HDw(j0BzV#*Wwan$xOKK=ub2p-WR8Q*o6d(6krNAPhJ9}nQ;L42HO6$Ea&`0_pk
z?mpmB<l6P$6n6jn-sj*}7gj9A+jhjnf(45g-h2nwm+^K8?k_p=>n$046Oe?#VubPg
zWwDdUd0ya3LWFypt|Y9tP1W13Z1A+9t>brQV2E*<j}E!s(HUrYlh@tnfd1B%Csu{w
zhUm@WH(z-1CqF(M!|U0L8$tV)<0s$=1vJ!hja#;%X%{&`zCiYqdr5}aq()?NkgSkV
Ik|#a?2Ui|=dH?_b

literal 0
HcmV?d00001

diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.java b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.java
new file mode 100644
index 0000000..65c2cac
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.java
@@ -0,0 +1,355 @@
+/*
+ *  Do not modify this file; it is automatically
+ *  generated and any modifications will be overwritten.
+ *
+ * @(#) xdc-y30
+ */
+import java.util.*;
+import org.mozilla.javascript.*;
+import xdc.services.intern.xsr.*;
+import xdc.services.spec.Session;
+
+public class preesm6678
+{
+    static final String VERS = "@(#) xdc-y30\n";
+
+    static final Proto.Elm $$T_Bool = Proto.Elm.newBool();
+    static final Proto.Elm $$T_Num = Proto.Elm.newNum();
+    static final Proto.Elm $$T_Str = Proto.Elm.newStr();
+    static final Proto.Elm $$T_Obj = Proto.Elm.newObj();
+
+    static final Proto.Fxn $$T_Met = new Proto.Fxn(null, null, 0, -1, false);
+    static final Proto.Map $$T_Map = new Proto.Map($$T_Obj);
+    static final Proto.Arr $$T_Vec = new Proto.Arr($$T_Obj);
+
+    static final XScriptO $$DEFAULT = Value.DEFAULT;
+    static final Object $$UNDEF = Undefined.instance;
+
+    static final Proto.Obj $$Package = (Proto.Obj)Global.get("$$Package");
+    static final Proto.Obj $$Module = (Proto.Obj)Global.get("$$Module");
+    static final Proto.Obj $$Instance = (Proto.Obj)Global.get("$$Instance");
+    static final Proto.Obj $$Params = (Proto.Obj)Global.get("$$Params");
+
+    static final Object $$objFldGet = Global.get("$$objFldGet");
+    static final Object $$objFldSet = Global.get("$$objFldSet");
+    static final Object $$proxyGet = Global.get("$$proxyGet");
+    static final Object $$proxySet = Global.get("$$proxySet");
+    static final Object $$delegGet = Global.get("$$delegGet");
+    static final Object $$delegSet = Global.get("$$delegSet");
+
+    Scriptable xdcO;
+    Session ses;
+    Value.Obj om;
+
+    boolean isROV;
+    boolean isCFG;
+
+    Proto.Obj pkgP;
+    Value.Obj pkgV;
+
+    ArrayList<Object> imports = new ArrayList<Object>();
+    ArrayList<Object> loggables = new ArrayList<Object>();
+    ArrayList<Object> mcfgs = new ArrayList<Object>();
+    ArrayList<Object> icfgs = new ArrayList<Object>();
+    ArrayList<String> inherits = new ArrayList<String>();
+    ArrayList<Object> proxies = new ArrayList<Object>();
+    ArrayList<Object> sizes = new ArrayList<Object>();
+    ArrayList<Object> tdefs = new ArrayList<Object>();
+
+    void $$IMPORTS()
+    {
+        Global.callFxn("loadPackage", xdcO, "xdc");
+        Global.callFxn("loadPackage", xdcO, "xdc.corevers");
+        Global.callFxn("loadPackage", xdcO, "ti.platforms.generic");
+        Global.callFxn("loadPackage", xdcO, "xdc.platform");
+    }
+
+    void $$OBJECTS()
+    {
+        pkgP = (Proto.Obj)om.bind("preesm6678.Package", new Proto.Obj());
+        pkgV = (Value.Obj)om.bind("preesm6678", new Value.Obj("preesm6678", pkgP));
+    }
+
+    void Platform$$OBJECTS()
+    {
+        Proto.Obj po, spo;
+        Value.Obj vo;
+
+        po = (Proto.Obj)om.bind("preesm6678.Platform.Module", new Proto.Obj());
+        vo = (Value.Obj)om.bind("preesm6678.Platform", new Value.Obj("preesm6678.Platform", po));
+        pkgV.bind("Platform", vo);
+        // decls
+        om.bind("preesm6678.Platform.Board", om.findStrict("xdc.platform.IPlatform.Board", "preesm6678"));
+        om.bind("preesm6678.Platform.Memory", om.findStrict("xdc.platform.IPlatform.Memory", "preesm6678"));
+        // insts
+        Object insP = om.bind("preesm6678.Platform.Instance", new Proto.Obj());
+        po = (Proto.Obj)om.bind("preesm6678.Platform$$Object", new Proto.Obj());
+        Object objP = om.bind("preesm6678.Platform.Object", new Proto.Str(po, true));
+        po = (Proto.Obj)om.bind("preesm6678.Platform$$Params", new Proto.Obj());
+        om.bind("preesm6678.Platform.Params", new Proto.Str(po, true));
+    }
+
+    void Platform$$CONSTS()
+    {
+        // module Platform
+    }
+
+    void Platform$$CREATES()
+    {
+        Proto.Fxn fxn;
+        StringBuilder sb;
+
+        fxn = (Proto.Fxn)om.bind("preesm6678.Platform$$create", new Proto.Fxn(om.findStrict("preesm6678.Platform.Module", "preesm6678"), om.findStrict("preesm6678.Platform.Instance", "preesm6678"), 3, 2, false));
+                fxn.addArg(0, "name", $$T_Str, $$UNDEF);
+                fxn.addArg(1, "args", $$T_Obj, $$UNDEF);
+                fxn.addArg(2, "__params", (Proto)om.findStrict("preesm6678.Platform.Params", "preesm6678"), Global.newObject());
+        sb = new StringBuilder();
+        sb.append("preesm6678$Platform$$create = function( name, args, __params ) {\n");
+            sb.append("var __mod = xdc.om['preesm6678.Platform'];\n");
+            sb.append("var __inst = xdc.om['preesm6678.Platform.Instance'].$$make();\n");
+            sb.append("__inst.$$bind('$package', xdc.om['preesm6678']);\n");
+            sb.append("__inst.$$bind('$index', __mod.$instances.length);\n");
+            sb.append("__inst.$$bind('$category', 'Instance');\n");
+            sb.append("__inst.$$bind('$args', {name:name, args:args});\n");
+            sb.append("__inst.$$bind('$module', __mod);\n");
+            sb.append("__mod.$instances.$add(__inst);\n");
+            sb.append("__inst.externalMemoryMap = __mod.PARAMS.externalMemoryMap;\n");
+            sb.append("__inst.customMemoryMap = __mod.PARAMS.customMemoryMap;\n");
+            sb.append("__inst.renameMap = __mod.PARAMS.renameMap;\n");
+            sb.append("__inst.dataMemory = __mod.PARAMS.dataMemory;\n");
+            sb.append("__inst.codeMemory = __mod.PARAMS.codeMemory;\n");
+            sb.append("__inst.stackMemory = __mod.PARAMS.stackMemory;\n");
+            sb.append("__inst.sectMap = __mod.PARAMS.sectMap;\n");
+            sb.append("for (var __p in __params) __inst[__p] = __params[__p];\n");
+            sb.append("var save = xdc.om.$curpkg;\n");
+            sb.append("xdc.om.$$bind('$curpkg', __mod.$package.$name);\n");
+            sb.append("__mod.instance$meta$init.$fxn.apply(__inst, [name, args]);\n");
+            sb.append("xdc.om.$$bind('$curpkg', save);\n");
+            sb.append("__inst.$$bless();\n");
+            sb.append("return __inst;\n");
+        sb.append("}\n");
+        Global.eval(sb.toString());
+        fxn = (Proto.Fxn)om.bind("preesm6678.Platform$$construct", new Proto.Fxn(om.findStrict("preesm6678.Platform.Module", "preesm6678"), null, 4, 2, false));
+                fxn.addArg(0, "__obj", (Proto)om.findStrict("preesm6678.Platform$$Object", "preesm6678"), null);
+                fxn.addArg(1, "name", $$T_Str, $$UNDEF);
+                fxn.addArg(2, "args", $$T_Obj, $$UNDEF);
+                fxn.addArg(3, "__params", (Proto)om.findStrict("preesm6678.Platform.Params", "preesm6678"), Global.newObject());
+        sb = new StringBuilder();
+        sb.append("preesm6678$Platform$$construct = function( __obj, name, args, __params ) {\n");
+            sb.append("var __mod = xdc.om['preesm6678.Platform'];\n");
+            sb.append("var __inst = __obj;\n");
+            sb.append("__inst.$$bind('$args', {name:name, args:args});\n");
+            sb.append("__inst.$$bind('$module', __mod);\n");
+            sb.append("__mod.$objects.$add(__inst);\n");
+            sb.append("__inst.externalMemoryMap = __mod.PARAMS.externalMemoryMap;\n");
+            sb.append("__inst.customMemoryMap = __mod.PARAMS.customMemoryMap;\n");
+            sb.append("__inst.renameMap = __mod.PARAMS.renameMap;\n");
+            sb.append("__inst.dataMemory = __mod.PARAMS.dataMemory;\n");
+            sb.append("__inst.codeMemory = __mod.PARAMS.codeMemory;\n");
+            sb.append("__inst.stackMemory = __mod.PARAMS.stackMemory;\n");
+            sb.append("__inst.sectMap = __mod.PARAMS.sectMap;\n");
+            sb.append("for (var __p in __params) __inst[__p] = __params[__p];\n");
+            sb.append("__inst.$$bless();\n");
+            sb.append("return null;\n");
+        sb.append("}\n");
+        Global.eval(sb.toString());
+    }
+
+    void Platform$$FUNCTIONS()
+    {
+        Proto.Fxn fxn;
+
+    }
+
+    void Platform$$SIZES()
+    {
+    }
+
+    void Platform$$TYPES()
+    {
+        Scriptable cap;
+        Proto.Obj po;
+        Proto.Str ps;
+        Proto.Typedef pt;
+        Object fxn;
+
+        cap = (Scriptable)Global.callFxn("loadCapsule", xdcO, "preesm6678/Platform.xs");
+        om.bind("preesm6678.Platform$$capsule", cap);
+        po = (Proto.Obj)om.findStrict("preesm6678.Platform.Module", "preesm6678");
+        po.init("preesm6678.Platform.Module", om.findStrict("xdc.platform.IPlatform.Module", "preesm6678"));
+                po.addFld("$hostonly", $$T_Num, 1, "r");
+        po.addFld("CPU", (Proto)om.findStrict("ti.platforms.generic.Platform.Instance", "preesm6678"), $$UNDEF, "wh");
+                po.addFxn("create", (Proto.Fxn)om.findStrict("preesm6678.Platform$$create", "preesm6678"), Global.get("preesm6678$Platform$$create"));
+                po.addFxn("construct", (Proto.Fxn)om.findStrict("preesm6678.Platform$$construct", "preesm6678"), Global.get("preesm6678$Platform$$construct"));
+        fxn = Global.get(cap, "module$use");
+        if (fxn != null) om.bind("preesm6678.Platform$$module$use", true);
+        if (fxn != null) po.addFxn("module$use", $$T_Met, fxn);
+        fxn = Global.get(cap, "module$meta$init");
+        if (fxn != null) om.bind("preesm6678.Platform$$module$meta$init", true);
+        if (fxn != null) po.addFxn("module$meta$init", $$T_Met, fxn);
+        fxn = Global.get(cap, "instance$meta$init");
+        if (fxn != null) om.bind("preesm6678.Platform$$instance$meta$init", true);
+        if (fxn != null) po.addFxn("instance$meta$init", $$T_Met, fxn);
+        fxn = Global.get(cap, "module$validate");
+        if (fxn != null) om.bind("preesm6678.Platform$$module$validate", true);
+        if (fxn != null) po.addFxn("module$validate", $$T_Met, fxn);
+        po = (Proto.Obj)om.findStrict("preesm6678.Platform.Instance", "preesm6678");
+        po.init("preesm6678.Platform.Instance", om.findStrict("xdc.platform.IPlatform.Instance", "preesm6678"));
+                po.addFld("$hostonly", $$T_Num, 1, "r");
+        po.addFld("codeMemory", $$T_Str, "L2SRAM", "wh");
+        po.addFld("dataMemory", $$T_Str, "L2SRAM", "wh");
+        po.addFld("stackMemory", $$T_Str, "L2SRAM", "wh");
+                fxn = Global.get(cap, "getCpuDataSheet");
+                if (fxn != null) po.addFxn("getCpuDataSheet", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getCpuDataSheet", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getCreateArgs");
+                if (fxn != null) po.addFxn("getCreateArgs", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getCreateArgs", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getExeContext");
+                if (fxn != null) po.addFxn("getExeContext", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getExeContext", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getExecCmd");
+                if (fxn != null) po.addFxn("getExecCmd", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getExecCmd", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getLinkTemplate");
+                if (fxn != null) po.addFxn("getLinkTemplate", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getLinkTemplate", "preesm6678"), fxn);
+        po = (Proto.Obj)om.findStrict("preesm6678.Platform$$Params", "preesm6678");
+        po.init("preesm6678.Platform.Params", om.findStrict("xdc.platform.IPlatform$$Params", "preesm6678"));
+                po.addFld("$hostonly", $$T_Num, 1, "r");
+        po.addFld("codeMemory", $$T_Str, "L2SRAM", "wh");
+        po.addFld("dataMemory", $$T_Str, "L2SRAM", "wh");
+        po.addFld("stackMemory", $$T_Str, "L2SRAM", "wh");
+        po = (Proto.Obj)om.findStrict("preesm6678.Platform$$Object", "preesm6678");
+        po.init("preesm6678.Platform.Object", om.findStrict("preesm6678.Platform.Instance", "preesm6678"));
+                fxn = Global.get(cap, "getCpuDataSheet");
+                if (fxn != null) po.addFxn("getCpuDataSheet", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getCpuDataSheet", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getCreateArgs");
+                if (fxn != null) po.addFxn("getCreateArgs", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getCreateArgs", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getExeContext");
+                if (fxn != null) po.addFxn("getExeContext", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getExeContext", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getExecCmd");
+                if (fxn != null) po.addFxn("getExecCmd", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getExecCmd", "preesm6678"), fxn);
+                fxn = Global.get(cap, "getLinkTemplate");
+                if (fxn != null) po.addFxn("getLinkTemplate", (Proto.Fxn)om.findStrict("xdc.platform.IPlatform$$getLinkTemplate", "preesm6678"), fxn);
+    }
+
+    void Platform$$ROV()
+    {
+    }
+
+    void $$SINGLETONS()
+    {
+        pkgP.init("preesm6678.Package", (Proto.Obj)om.findStrict("xdc.IPackage.Module", "preesm6678"));
+        pkgP.bind("$capsule", $$UNDEF);
+        pkgV.init2(pkgP, "preesm6678", Value.DEFAULT, false);
+        pkgV.bind("$name", "preesm6678");
+        pkgV.bind("$category", "Package");
+        pkgV.bind("$$qn", "preesm6678.");
+        pkgV.bind("$vers", Global.newArray());
+        Value.Map atmap = (Value.Map)pkgV.getv("$attr");
+        atmap.seal("length");
+        imports.clear();
+        pkgV.bind("$imports", imports);
+        StringBuilder sb = new StringBuilder();
+        sb.append("var pkg = xdc.om['preesm6678'];\n");
+        sb.append("if (pkg.$vers.length >= 3) {\n");
+            sb.append("pkg.$vers.push(Packages.xdc.services.global.Vers.getDate(xdc.csd() + '/..'));\n");
+        sb.append("}\n");
+        sb.append("pkg.build.libraries = [\n");
+        sb.append("];\n");
+        sb.append("pkg.build.libDesc = [\n");
+        sb.append("];\n");
+        Global.eval(sb.toString());
+    }
+
+    void Platform$$SINGLETONS()
+    {
+        Proto.Obj po;
+        Value.Obj vo;
+
+        vo = (Value.Obj)om.findStrict("preesm6678.Platform", "preesm6678");
+        po = (Proto.Obj)om.findStrict("preesm6678.Platform.Module", "preesm6678");
+        vo.init2(po, "preesm6678.Platform", $$DEFAULT, false);
+        vo.bind("Module", po);
+        vo.bind("$category", "Module");
+        vo.bind("$capsule", om.findStrict("preesm6678.Platform$$capsule", "preesm6678"));
+        vo.bind("Instance", om.findStrict("preesm6678.Platform.Instance", "preesm6678"));
+        vo.bind("Params", om.findStrict("preesm6678.Platform.Params", "preesm6678"));
+        vo.bind("PARAMS", ((Proto.Str)om.findStrict("preesm6678.Platform.Params", "preesm6678")).newInstance());
+        vo.bind("$package", om.findStrict("preesm6678", "preesm6678"));
+        tdefs.clear();
+        proxies.clear();
+        mcfgs.clear();
+        icfgs.clear();
+        inherits.clear();
+        vo.bind("Board", om.findStrict("xdc.platform.IPlatform.Board", "preesm6678"));
+        tdefs.add(om.findStrict("xdc.platform.IPlatform.Board", "preesm6678"));
+        vo.bind("Memory", om.findStrict("xdc.platform.IPlatform.Memory", "preesm6678"));
+        tdefs.add(om.findStrict("xdc.platform.IPlatform.Memory", "preesm6678"));
+        vo.bind("MemoryMap", om.findStrict("xdc.platform.IPlatform.MemoryMap", "preesm6678"));
+        vo.bind("$$tdefs", Global.newArray(tdefs.toArray()));
+        vo.bind("$$proxies", Global.newArray(proxies.toArray()));
+        vo.bind("$$mcfgs", Global.newArray(mcfgs.toArray()));
+        vo.bind("$$icfgs", Global.newArray(icfgs.toArray()));
+        inherits.add("xdc.platform");
+        vo.bind("$$inherits", Global.newArray(inherits.toArray()));
+        ((Value.Arr)pkgV.getv("$modules")).add(vo);
+        ((Value.Arr)om.findStrict("$modules", "preesm6678")).add(vo);
+        vo.bind("$$instflag", 1);
+        vo.bind("$$iobjflag", 1);
+        vo.bind("$$sizeflag", 1);
+        vo.bind("$$dlgflag", 0);
+        vo.bind("$$iflag", 1);
+        vo.bind("$$romcfgs", "|");
+        vo.bind("$$nortsflag", 0);
+        Proto.Str ps = (Proto.Str)vo.find("Module_State");
+        if (ps != null) vo.bind("$object", ps.newInstance());
+        vo.bind("$$meta_iobj", om.has("preesm6678.Platform$$instance$static$init", null) ? 1 : 0);
+        vo.bind("$$fxntab", Global.newArray());
+        vo.bind("$$logEvtCfgs", Global.newArray());
+        vo.bind("$$errorDescCfgs", Global.newArray());
+        vo.bind("$$assertDescCfgs", Global.newArray());
+        Value.Map atmap = (Value.Map)vo.getv("$attr");
+        atmap.seal("length");
+        vo.bind("Object", om.findStrict("preesm6678.Platform.Object", "preesm6678"));
+        pkgV.bind("Platform", vo);
+        ((Value.Arr)pkgV.getv("$unitNames")).add("Platform");
+    }
+
+    void $$INITIALIZATION()
+    {
+        Value.Obj vo;
+
+        if (isCFG) {
+        }//isCFG
+        Global.callFxn("module$meta$init", (Scriptable)om.findStrict("preesm6678.Platform", "preesm6678"));
+        vo = (Value.Obj)om.findStrict("preesm6678.Platform", "preesm6678");
+        Global.put(vo, "CPU", Global.callFxn("create", (Scriptable)om.find("ti.platforms.generic.Platform"), "CPU", Global.newObject("clockRate", 1000L, "catalogName", "ti.catalog.c6000", "deviceName", "TMS320C6678", "customMemoryMap", Global.newArray(new Object[]{Global.newArray(new Object[]{"MSMCSRAM", Global.newObject("name", "MSMCSRAM", "base", 0x0c000000L, "len", 0x00200000L, "space", "code/data", "access", "RWX")}), Global.newArray(new Object[]{"L2SRAM", Global.newObject("name", "L2SRAM", "base", 0x00800000L, "len", 0x00080000L, "space", "code/data", "access", "RWX")}), Global.newArray(new Object[]{"DDR3", Global.newObject("name", "DDR3", "base", 0x80000000L, "len", 0x20000000L, "space", "code/data", "access", "RWX")})}), "l2Mode", "0k", "l1PMode", "32k", "l1DMode", "32k")));
+        Global.callFxn("init", pkgV);
+        ((Value.Obj)om.getv("preesm6678.Platform")).bless();
+        ((Value.Arr)om.findStrict("$packages", "preesm6678")).add(pkgV);
+    }
+
+    public void exec( Scriptable xdcO, Session ses )
+    {
+        this.xdcO = xdcO;
+        this.ses = ses;
+        om = (Value.Obj)xdcO.get("om", null);
+
+        Object o = om.geto("$name");
+        String s = o instanceof String ? (String)o : null;
+        isCFG = s != null && s.equals("cfg");
+        isROV = s != null && s.equals("rov");
+
+        $$IMPORTS();
+        $$OBJECTS();
+        Platform$$OBJECTS();
+        Platform$$CONSTS();
+        Platform$$CREATES();
+        Platform$$FUNCTIONS();
+        Platform$$SIZES();
+        Platform$$TYPES();
+        if (isROV) {
+            Platform$$ROV();
+        }//isROV
+        $$SINGLETONS();
+        Platform$$SINGLETONS();
+        $$INITIALIZATION();
+    }
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.sch b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/preesm6678.sch
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc
new file mode 100644
index 0000000..d6fd3fc
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc
@@ -0,0 +1,11 @@
+config.bld
+package.bld
+package.xdc
+Platform.xdc
+Platform.xs
+package/package.bld.xml
+package/package.ext.xml
+package/package.rel.dot
+package/build.cfg
+package/package.xdc.inc
+package/package.cfg.xdc.inc
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc.manifest b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc.manifest
new file mode 100644
index 0000000..0d0f543
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.inc.manifest
@@ -0,0 +1,19 @@
+preesm6678/Platform.xdc
+preesm6678/Platform.xs
+preesm6678/config.bld
+preesm6678/package/.vers_b150
+preesm6678/package/.vers_g180
+preesm6678/package/.vers_r170
+preesm6678/package/.xdc-y30
+preesm6678/package/build.cfg
+preesm6678/package/package.bld.xml
+preesm6678/package/package.defs.h
+preesm6678/package/package.ext.xml
+preesm6678/package/package.rel.dot
+preesm6678/package/package_preesm6678.c
+preesm6678/package/preesm6678.ccs
+preesm6678/package/preesm6678.class
+preesm6678/package/preesm6678.java
+preesm6678/package/preesm6678.sch
+preesm6678/package.bld
+preesm6678/package.xdc
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.ninc b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.xdc.ninc
new file mode 100644
index 0000000..e69de29
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.zip.dep b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.zip.dep
new file mode 100644
index 0000000..649db2c
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678.zip.dep
@@ -0,0 +1,38 @@
+preesm6678.zip: Platform.xdc
+Platform.xdc:
+preesm6678.zip: Platform.xs
+Platform.xs:
+preesm6678.zip: config.bld
+config.bld:
+preesm6678.zip: package/.vers_b150
+package/.vers_b150:
+preesm6678.zip: package/.vers_g180
+package/.vers_g180:
+preesm6678.zip: package/.vers_r170
+package/.vers_r170:
+preesm6678.zip: package/.xdc-y30
+package/.xdc-y30:
+preesm6678.zip: package/build.cfg
+package/build.cfg:
+preesm6678.zip: package/package.bld.xml
+package/package.bld.xml:
+preesm6678.zip: package/package.defs.h
+package/package.defs.h:
+preesm6678.zip: package/package.ext.xml
+package/package.ext.xml:
+preesm6678.zip: package/package.rel.dot
+package/package.rel.dot:
+preesm6678.zip: package/package_preesm6678.c
+package/package_preesm6678.c:
+preesm6678.zip: package/preesm6678.ccs
+package/preesm6678.ccs:
+preesm6678.zip: package/preesm6678.class
+package/preesm6678.class:
+preesm6678.zip: package/preesm6678.java
+package/preesm6678.java:
+preesm6678.zip: package/preesm6678.sch
+package/preesm6678.sch:
+preesm6678.zip: package.bld
+package.bld:
+preesm6678.zip: package.xdc
+package.xdc:
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678/preesm6678/package/package.rel.xml b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678/preesm6678/package/package.rel.xml
new file mode 100644
index 0000000..c496f8f
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/package/preesm6678/package/rel/preesm6678/preesm6678/package/package.rel.xml
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="windows-1252"?>
+<!--  This file conforms to the DTD xdc/bld/release.dtd -->
+<release name="preesm6678" label="default" date="1437035478545" buildCount="1" producerId="undefined">
+<package name="preesm6678"
+    version=""/>
+<imports>
+</imports>
+<references>
+    <package name="xdc"
+        version="1, 1, 1, 1340817876462"
+        providerId="xdccore">
+        <file name="IPackage.xdc"/>
+        <file name="IPackage.xs"/>
+        <file name="om2.xs"/>
+        <file name="package.xs"/>
+        <file name="template.xs"/>
+        <file name="xdc.tci"/>
+        <file name="xmlgen.xs"/>
+        <file name="xmlgen2.xs"/>
+    </package>
+    <package name="xdc.services.global"
+        version="1, 0, 0, 1340817902737"
+        providerId="xdccore">
+        <file name="Clock.xs"/>
+        <file name="Trace.xs"/>
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.bld"
+        version="1, 0, 2, 1340817883203"
+        providerId="xdccore">
+        <file name="BuildEnvironment.xs"/>
+        <file name="Configuration.xs"/>
+        <file name="Executable.xs"/>
+        <file name="ITarget.xs"/>
+        <file name="ITarget2.xs"/>
+        <file name="ITargetFilter.xs"/>
+        <file name="Library.xs"/>
+        <file name="Manifest.xs"/>
+        <file name="PackageContents.xs"/>
+        <file name="Repository.xs"/>
+        <file name="Script.xs"/>
+        <file name="Utils.xs"/>
+        <file name="_gen.xs"/>
+        <file name="bld.js"/>
+        <file name="package.xs"/>
+    </package>
+    <package name="xdc.platform"
+        version="1, 0, 1, 0, 1340817887431"
+        providerId="xdccore">
+        <file name="ICpuDataSheet.xdc"/>
+        <file name="IExeContext.xdc"/>
+        <file name="IPeripheral.xdc"/>
+        <file name="IPlatform.xdc"/>
+    </package>
+    <package name="ti.platforms.generic"
+        version="1, 0, 0, 1, 1341354351027"
+        providerId="xdccore">
+        <file name="Platform.xdc"/>
+    </package>
+    <package name="xdc.shelf"
+        version="1, 0, 0, 1340817922719"
+        providerId="xdccore">
+        <file name="java\antlr.jar"/>
+        <file name="java\ecj.jar"/>
+        <file name="java\js.jar"/>
+        <file name="java\tar.jar"/>
+    </package>
+    <package name="xdc.services.intern.xsr"
+        version="1, 0, 0, 1340817908153"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.services.spec"
+        version="1, 0, 0, 0, 1340817915472"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.services.intern.gen"
+        version="1, 0, 0, 0, 1340817907115"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <package name="xdc.services.intern.cmd"
+        version="1, 0, 0, 0, 1340817906479"
+        providerId="xdccore">
+        <file name="java\package.jar"/>
+    </package>
+    <xdcRoot base="C:/ti/xdctools_3_23_04_60/">
+        <file name="/packages/xdc/package.xdc"/>
+        <file name="include\utils.tci"/>
+        <xdcCorePkg version="16, 0, 2, 0, 1340817885154" producerId="/db/ztree/library/trees/xdc/xdc-y30x/src/packages" buildCount="369" releaseName="xdc_corevers" label="default" date="1340817885154"/>
+    </xdcRoot>
+</references>
+<orphans>
+</orphans>
+</release>
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/cache.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/cache.c
new file mode 100644
index 0000000..dae6d26
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/cache.c
@@ -0,0 +1,65 @@
+/*
+ * cache.c
+ *
+ *  Created on: 7 nov. 2013
+ *      Author: kdesnos
+ */
+
+
+#include <cache.h>
+#include <ti/csl/csl_xmcAux.h>
+#include <ti/sysbios/hal/Hwi.h>
+
+#define cacheOperationCode(buffer,size,call)		\
+	Uint32 key;										\
+	Uint32 rest = size;								\
+													\
+    /* Process at most 65535*4 bytes at a time */	\
+    while(rest>0){									\
+		Uint32 processed = (rest > 65535*4)?		\
+								65535*4 : rest;		\
+													\
+													\
+		/* Disable Interrupts */					\
+		key = Hwi_disable();						\
+													\
+		/*  Cleanup the prefetch buffer also.*/		\
+		CSL_XMC_invalidatePrefetchBuffer();			\
+													\
+		/* Invalidate the cache. */					\
+		call((char*)buffer+(size-rest),				\
+				processed, CACHE_FENCE_WAIT);		\
+													\
+		asm (" nop  4");							\
+		asm (" nop  4");							\
+		asm (" nop  4");							\
+		asm (" nop  4");							\
+													\
+		/* Reenable Interrupts.*/					\
+		Hwi_restore(key);							\
+       rest = rest-processed;						\
+    }												\
+
+void cache_wbInvL1D(void* buffer,Uint32 size){
+	cacheOperationCode(buffer,size,CACHE_wbInvL1d);
+}
+
+void cache_wbL1D(void* buffer, Uint32 size){
+	cacheOperationCode(buffer,size,CACHE_wbL1d);
+}
+
+void cache_invL1D(void* buffer, Uint32 size){
+	cacheOperationCode(buffer,size,CACHE_invL1d);
+}
+
+void cache_wbInvL2(void* buffer,Uint32 size){
+	cacheOperationCode(buffer,size,CACHE_wbInvL2);
+}
+
+void cache_wbL2(void* buffer, Uint32 size){
+	cacheOperationCode(buffer,size,CACHE_wbL2);
+}
+
+void cache_invL2(void* buffer, Uint32 size){
+	cacheOperationCode(buffer,size,CACHE_invL2);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/communication.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/communication.c
new file mode 100644
index 0000000..0d6d029
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/communication.c
@@ -0,0 +1,129 @@
+/*
+ ============================================================================
+ Name        : communication.c
+ Author      : kdesnos
+ Version     : 1.0
+ Copyright   : CECILL-C
+ Description : Comunication primitives for C6678
+ ============================================================================
+ */
+#include <xdc/std.h>
+/*  ----------------------------------- IPC module Headers           */
+#include <ti/ipc/Ipc.h>
+#include <ti/ipc/Notify.h>
+#include <ti/sysbios/knl/Semaphore.h>
+#include <xdc/runtime/System.h>
+#include "communication.h"
+#include <ti/sysbios/BIOS.h>
+#include <ti/csl/csl_cacheAux.h>
+#include <ti/csl/csl_semAux.h>
+#include <ti/ipc/MultiProc.h>
+#include <ti/sysbios/knl/Task.h>
+#include "cache.h"
+#include "semaphore6678.h"
+
+// 8 local semaphore for each core (1 useless)
+Semaphore_Handle interCoreSem[8];
+
+/* Interrupt line used (0 is default) */
+#define INTERRUPT_LINE  0
+
+/* Notify event number that the app uses for send/receive*/
+#define EVENTIDSENDRECEIVE         10
+
+
+#pragma DATA_SECTION(barrier, ".MSMCSRAM")
+#pragma DATA_ALIGN(barrier, CACHE_LINE_SIZE);
+Char barrier = 0x00;
+
+Void callbackInterCoreCom(UInt16 procId, UInt16 lineId, UInt32 eventId,
+		UArg arg, UInt32 payload) {
+	Semaphore_post(interCoreSem[procId]);
+}
+
+void sendStart(Uint16 coreID) {
+	/* Send an event to the next processor */
+	// The last parameter (TRUE) may cause this function to block.
+	// In such case, maybe the penultimate parameter could be used to signal
+	// that several send are grouped within a single notify event
+	Int status = Notify_sendEvent(coreID, INTERRUPT_LINE, EVENTIDSENDRECEIVE, 0, TRUE);
+	if (status < 0) {
+		System_abort("sendEvent failed\n");
+	}
+}
+
+void receiveEnd(Uint16 coreID){
+	Semaphore_pend(interCoreSem[coreID], BIOS_WAIT_FOREVER);
+}
+
+void communicationInit() {
+	int i;
+
+	/*
+	 *  Ipc_start() calls Ipc_attach() to synchronize all remote processors
+	 *  because 'Ipc.procSync' is set to 'Ipc.ProcSync_ALL' in *.cfg
+	 */
+	int status = Ipc_start();
+	if (status < 0) {
+		System_abort("Ipc_start failed\n");
+	}
+
+	// Allocate and initialize a new semaphores and return its handle
+	for (i = 0; i < 8; i++) {
+		interCoreSem[i] = Semaphore_create(0, NULL, NULL);
+	}
+
+	/*
+	 *  Register the same callback for all remote processor
+	 */
+	for (i = 0; i < 8; i++) {
+		status = Notify_registerEvent(i, INTERRUPT_LINE, EVENTIDSENDRECEIVE,
+				(Notify_FnNotifyCbck) callbackInterCoreCom, NULL);
+		if (status < 0) {
+			System_abort("Notify_registerEvent failed\n");
+		}
+	}
+
+	/*
+	 * Register sem_deleteCallback for all remote processors
+	 */
+	for (i = 0; i < 8; i++) {
+		status = Notify_registerEvent(i, INTERRUPT_LINE, EVENTID_SEM_DELETE,
+				(Notify_FnNotifyCbck) sem_destroyCallback, NULL);
+		if (status < 0) {
+			System_abort("Notify_registerEvent failed\n");
+		}
+	}
+}
+
+void receiveStart(){}
+void sendEnd(){}
+
+void busy_barrier() {
+	Uint8 status;
+	Char procNumber = MultiProc_self();
+
+	do {
+		status = CSL_semAcquireDirect(2);
+	} while (status == 0);
+
+	cache_inv(&barrier, 1);
+	barrier |= (1 << procNumber);
+	cache_wbInvL2(&barrier, 1);
+	CSL_semReleaseSemaphore(2);
+
+	if (procNumber == 0) {
+		while (barrier != (Char) 0xFF) {
+			Task_sleep(1);
+			cache_invL2(&barrier, 1);
+		}
+		barrier = (Char)0x00;
+		cache_wbInvL2(&barrier, 1);
+		sendStart(1);
+		receiveEnd(7);
+	} else {
+		receiveEnd(procNumber-1);
+		sendStart((procNumber+1)%8);
+
+	}
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/dump.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/dump.c
new file mode 100644
index 0000000..58bd5ef
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/dump.c
@@ -0,0 +1,43 @@
+/*
+	============================================================================
+	Name        : dump.c
+	Author      : kdesnos
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description :
+	============================================================================
+*/
+
+#include <ti/csl/csl_cacheAux.h>
+#include <xdc/runtime/System.h>
+#include <xdc/runtime/Timestamp.h>
+
+void dumpTime(int id, int* dumpBuffer){
+    dumpBuffer[id] = Timestamp_get32();
+    CACHE_wbInvL2(dumpBuffer+id, sizeof(int), CACHE_WAIT);
+}
+
+void initNbExec(int* nbExec, int nbDump){
+    int i = 0;
+
+    for(i=1; i<nbDump; i++){
+        //*(nbExec+i) = 1;
+        System_printf("%d;",i);
+    }
+    System_printf("\n");
+}
+
+void writeTime(int* dumpBuffer, int nbDump, int* nbExec){
+    int i ;
+
+    CACHE_invL2(dumpBuffer, nbDump*sizeof(int), CACHE_WAIT);
+
+	for(i=1;i< nbDump;i++){
+		int res;
+		res = dumpBuffer[i]-dumpBuffer[i-1];
+		System_printf("%d;",res);
+	}
+	System_printf("\n");
+
+
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/fifo.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/fifo.c
new file mode 100644
index 0000000..009dc91
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/fifo.c
@@ -0,0 +1,35 @@
+/*
+	============================================================================
+	Name        : fifo.c
+	Author      : kdesnos
+	Version     :
+	Copyright   :
+	Description :
+	============================================================================
+*/
+#include <string.h>
+#include "fifo.h"
+
+void fifoInit(void* headBuffer, int headSize, void* bodyBuffer, int bodySize) {
+    memset(headBuffer,0,headSize);
+    if(bodyBuffer != NULL) {
+        memset(bodyBuffer,0,bodySize);
+    }
+}
+
+
+void fifoPush(void * inputBuffer, void* headBuffer, int headSize, void* bodyBuffer, int bodySize){
+    if(bodyBuffer != NULL){
+        memcpy(headBuffer,bodyBuffer,headSize);
+        memcpy(bodyBuffer, (char *)bodyBuffer+headSize, bodySize-headSize);
+        memcpy((char *)bodyBuffer+bodySize-headSize,  inputBuffer, headSize);
+    } else {
+        memcpy(headBuffer,inputBuffer,headSize);
+    }
+    //memcpy(headBuffer, headBuffer+outputSize, fifoSize-outputSize);
+    //memset(headBuffer+fifoSize-outputSize, 0, outputSize); // Useless
+}
+
+void fifoPop(void * outputBuffer, void* headBuffer, int headSize, void* bodyBuffer, int bodySize){
+    memcpy(outputBuffer, headBuffer, headSize);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/main.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/main.c
new file mode 100644
index 0000000..b925419
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/main.c
@@ -0,0 +1,109 @@
+#include <xdc/std.h>
+#include <string.h>
+
+/*  -----------------------------------XDC.RUNTIME module Headers    */
+#include <xdc/runtime/System.h>
+
+/*  ----------------------------------- BIOS6 module Headers         */
+#include <ti/sysbios/BIOS.h>
+#include <ti/sysbios/knl/Task.h>
+
+/*  ----------------------------------- IPC module Headers           */
+#include <ti/ipc/MultiProc.h>
+
+#include "utils.h"
+#include "cores.h"
+#include <ti/csl/csl_cacheAux.h>
+#include "communication.h"
+#include "cache.h"
+
+Void tsk0_func(UArg arg0, UArg arg1) {
+
+	switch (MultiProc_self()) {
+#ifdef CORE0
+	case 0:
+		core0();
+		break;
+#endif
+
+#ifdef CORE1
+	case 1:
+		core1();
+		break;
+#endif
+
+#ifdef CORE2
+	case 2:
+		core2();
+		break;
+#endif
+
+#ifdef CORE3
+	case 3:
+		core3();
+		break;
+#endif
+
+#ifdef CORE4
+	case 4:
+		core4();
+		break;
+#endif
+
+#ifdef CORE5
+	case 5:
+		core5();
+		break;
+#endif
+
+#ifdef CORE6
+	case 6:
+		core6();
+		break;
+#endif
+
+#ifdef CORE7
+	case 7:
+		core7();
+		break;
+#endif
+	default:
+		communicationInit();
+		while (1) {
+			busy_barrier();
+		}
+		//break;
+	}
+
+	System_printf("The test is complete\n");
+	BIOS_exit(0);
+}
+
+Int main(Int argc, Char* argv[]) {
+
+	/*
+	// Because MSMC memory cannot be non-cacheable, a new entry is added to
+	// the memory map as follows:
+	//     name            origin    length
+	// SHARED_NO_CACHE     80000000   80000000
+	// Cache is disabled for this new memory range
+	// Then a new section is created for this memory range (cf .cfg). Memory
+	// translation is then used to make the region beginning fall into the
+	// MSMCSRAM. The rest naturally falls into DDR3.
+	// "translate" 2MB (0x14) from 0x80000000 to 0x00c200000 using the MPAX number 3
+	set_MPAX(3, 0x80000, 0x00c200, 0x14, CACHEABLE);
+	*/
+
+	// Disable caching from 0x80000000 to 0xFFFFFFFF
+	if(!CACHEABLE){
+		int index;
+		for (index = 0x80; index <= 0xFF; index++) {
+			CACHE_disableCaching(index);
+		}
+	}
+
+
+	BIOS_start();
+
+	return (0);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/memory.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/memory.c
new file mode 100644
index 0000000..8a440fd
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/memory.c
@@ -0,0 +1,66 @@
+/*
+ * memory.c
+ *
+ *  Created on: 18 nov. 2013
+ *      Author: kdesnos
+ */
+
+#include <cache.h>
+#include <memory.h>
+#include <ti/ipc/GateMP.h>
+
+#ifdef DYNAMIC_MEM_ALLOC
+
+inline int gapForAlignment(int size, unsigned long alignmentSize, int desiredAlignment) {
+	// End of data
+	unsigned long end = alignmentSize + size;
+	int gap =
+			(end % desiredAlignment != 0) ?
+					desiredAlignment - end % desiredAlignment : 0;
+	return gap;
+}
+
+void* multiple_malloc(HeapMemMP_Handle sharedHeap, void** pointer, int size, int nbFree, sem_t *mutex, const char* mutexID, int align){
+
+	sem_wait(mutex);
+	cache_inv(pointer,1);
+	if(*pointer == 0){
+		*pointer =  (void*) merged_malloc(sharedHeap, pointer, size, nbFree, mutexID, align);
+		cache_wb(pointer,1);
+	}
+	sem_post(mutex);
+
+	return *pointer;
+}
+
+void* merged_malloc(HeapMemMP_Handle sharedHeap, void** pointer, int size, int nbFree, const char* mutexID, int align){
+
+	// Allocate a buffer whose size is:
+	// - The given data size
+	// - A gap to align the sem_t structure in memory
+	// - The size of a semaphore
+	int gap = gapForAlignment(size, align, CACHE_LINE_SIZE);
+	*pointer = HeapMemMP_alloc(sharedHeap, size+sizeof(sem_t)+ gap, align);
+
+	// Initialize the semaphore to nbFree - 1
+	sem_init(((sem_t*)((char*)(*pointer)+size + gap)), 0, nbFree-1, mutexID);
+
+	return *pointer;
+}
+
+void*  merged_free(HeapMemMP_Handle sharedHeap, void* pointer, int size){
+	char* ptr = (char*)pointer;
+	int gap = gapForAlignment(size, (unsigned long)pointer, CACHE_LINE_SIZE);
+
+	if(sem_trywait(((sem_t*)(ptr+size+gap))) == -1){
+		// If the semaphore value was 0
+		// The current free is the last so we do
+		// the free
+		sem_destroy(((sem_t*)(ptr+size+gap)));
+		HeapMemMP_free(sharedHeap, pointer, size+gap+sizeof(sem_t));
+		return 0;
+	}
+
+	return pointer;
+}
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/semaphore6678.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/semaphore6678.c
new file mode 100644
index 0000000..2ee83e2
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/semaphore6678.c
@@ -0,0 +1,250 @@
+/*
+	============================================================================
+	Name        : semaphore6678.c
+	Author      : kdesnos
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description : Set of functions ans structure to handle multicore semaphores
+	              on a C6678 DSP Multicore EVM
+	============================================================================
+*/
+
+#include <semaphore6678.h>
+#include <cache.h>
+#include <xdc/std.h>
+#include <ti/ipc/SharedRegion.h>
+#include <ti/ipc/GateMP.h>
+#include <ti/ipc/Notify.h>
+#include <ti/sysbios/hal/Hwi.h>
+#include <ti/ipc/MultiProc.h>
+
+/* Interrupt line used (0 is default) */
+#define INTERRUPT_LINE  0
+
+/**
+ *  Shared region used to allocate the GateMP of the semaphores
+ */
+#define SEMAPHORE_SHARED_REGION_ID 0
+
+// Local set of semaphore that must be cleaned
+// (one for each core)
+/**
+ * Maximum number of GateMP in the semaphoresToClean array.
+ */
+#define MAX_NB_SEM_TO_CLEAN 100
+
+/**
+ * Current number of semaphore in the semaphoresToClean array for the local
+ * core.
+ */
+int nbSemaphoresToClean = 0;
+
+/**
+ * This non-shared array stores the GateMP whose destruction was initiated by
+ * a remote processor calling sem_destroy(). The sem_clean() function empties
+ * this array.
+ */
+GateMP_Handle semaphoresToClean[MAX_NB_SEM_TO_CLEAN];
+
+void sem_init(sem_t *sem, int pshared, int initValue, const char* mutexID) {
+	GateMP_Params params;
+	int status;
+	int nbFail = 0;
+
+	// cleanup
+	sem_clean();
+
+	// Init semaphores
+	GateMP_Params_init(&params);
+	params.name = (String) mutexID;
+	params.regionId = SEMAPHORE_SHARED_REGION_ID;
+	sem->mutex = GateMP_create(&params);
+
+	do {
+		status = GateMP_open((String) mutexID, &sem->mutex);
+		if (status < 0) {
+			nbFail++;
+		}
+	} while (status < 0);
+
+	// Init value
+	sem->value = initValue;
+	sem->id = mutexID;
+	sem->creatorID = MultiProc_self();
+
+	// Write Back
+	cache_wb(sem, sizeof(sem_t));
+}
+
+void sem_post(sem_t *sem) {
+	GateMP_Handle handle;
+	int status;
+	int nbFail = 0;
+
+	// cleanup
+	sem_clean();
+
+	// Invalidate the sem
+	cache_inv(sem, sizeof(sem_t));
+
+	// Open the Semaphore
+	if (sem->creatorID != MultiProc_self()) {
+		do {
+			status = GateMP_open((String) sem->id, &handle);
+			if (status < 0) {
+				nbFail++;
+			}
+		} while (status < 0);
+	} else {
+		handle = sem->mutex;
+	}
+
+	// Post the value
+	IArg key = GateMP_enter(handle);
+	// invalidate again (in case tha value cas changed)
+	cache_inv(sem, sizeof(sem_t));
+	sem->value++;
+	// WB the new value
+	cache_wb(sem, sizeof(sem_t));
+	GateMP_leave(handle, key);
+
+	// Close the sem
+	if (sem->creatorID != MultiProc_self()) {
+		GateMP_close(&handle);
+	}
+}
+
+void sem_wait(sem_t *sem) {
+	int done = 0;
+	IArg key;
+	int status;
+	int nbFail=0;
+	GateMP_Handle handle;
+
+	// cleanup
+	sem_clean();
+
+	// While the operation is not completed
+	while (done == 0) {
+		do {
+			cache_inv(sem, sizeof(sem_t));
+		} while (sem->value <= 0);
+
+		// Open the Semaphore
+		if (sem->creatorID != MultiProc_self()) {
+			do {
+				status = GateMP_open((String) sem->id, &handle);
+				if (status < 0) {
+					nbFail++;
+				}
+			} while (status < 0);
+		} else {
+			handle = sem->mutex;
+		}
+
+		key = GateMP_enter(handle);
+		cache_inv(sem, sizeof(sem_t));
+		if (sem->value >= 1) {
+			done = 1;
+			sem->value--;
+			cache_wb(sem, sizeof(sem_t));
+		}
+		GateMP_leave(handle, key);
+
+		// Close the sem
+		if (sem->creatorID != MultiProc_self()) {
+			GateMP_close(&handle);
+		}
+	}
+}
+
+int sem_trywait(sem_t *sem) {
+	IArg key;
+	int success = -1;
+	int status = -1;
+	int nbFail = 0;
+	GateMP_Handle handle;
+
+	// cleanup
+	sem_clean();
+
+	cache_inv(sem, sizeof(sem_t));
+
+	// Open the Semaphore
+	if (sem->creatorID != MultiProc_self()) {
+		do {
+			status = GateMP_open((String) sem->id, &handle);
+			if (status < 0) {
+				nbFail++;
+			}
+		} while (status < 0);
+	} else {
+		handle = sem->mutex;
+	}
+
+	key = GateMP_enter(handle);
+	cache_inv(sem, sizeof(sem_t));
+	if (sem->value >= 1) {
+		sem->value--;
+		cache_wb(sem, sizeof(sem_t));
+		success = 0;
+	}
+	GateMP_leave(handle, key);
+
+	// Close the sem
+	if (sem->creatorID != MultiProc_self()) {
+		GateMP_close(&handle);
+	}
+	return success;
+}
+
+void sem_destroy(sem_t *sem) {
+
+	// cleanup
+	sem_clean();
+
+	cache_inv(sem, sizeof(sem_t));
+	if (sem->creatorID == MultiProc_self()) {
+		GateMP_Handle copyHandle;
+		copyHandle = sem->mutex;
+		GateMP_close(&copyHandle);
+		GateMP_delete(&sem->mutex);
+	} else {
+		Int status = Notify_sendEvent(sem->creatorID, INTERRUPT_LINE,
+				EVENTID_SEM_DELETE, (UInt32) sem->mutex, TRUE);
+		if (status < 0) {
+			System_abort("sendEvent failed\n");
+		}
+	}
+
+}
+
+void sem_clean() {
+	if (nbSemaphoresToClean > 0) {
+		/* Disable Interrupts */
+		Uint32 key = Hwi_disable();
+		do {
+			GateMP_Handle copyHandle;
+			nbSemaphoresToClean--;
+			copyHandle = semaphoresToClean[nbSemaphoresToClean];
+			GateMP_close(&copyHandle);
+			GateMP_delete(&semaphoresToClean[nbSemaphoresToClean]);
+		} while (nbSemaphoresToClean > 0);
+
+		/* Reenable Interrupts.*/
+		Hwi_restore(key);
+	}
+}
+
+Void sem_destroyCallback(UInt16 procId, UInt16 lineId, UInt32 eventId, UArg arg,
+		UInt32 payload) {
+	// Unless there are already too many GateMP to clean
+	if (nbSemaphoresToClean < MAX_NB_SEM_TO_CLEAN) {
+		// Push the GateMP_Handle received as a payload in the semaphores
+		// to clean array.
+		semaphoresToClean[nbSemaphoresToClean] = (GateMP_Handle) payload;
+		nbSemaphoresToClean++;
+	} else {
+		System_abort("Too many uncleaned semaphores.\n");
+	}
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/sobel.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/sobel.c
new file mode 100644
index 0000000..99fddbd
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/sobel.c
@@ -0,0 +1,36 @@
+/*
+	============================================================================
+	Name        : sobel.c
+	Author      : kdesnos
+	Version     : 1.1
+	Copyright   : CECILL-C
+	Description :
+	============================================================================
+*/
+
+#include <string.h>
+
+
+#include "sobel.h"
+#include <xdc/runtime/System.h>
+
+void sobel(int width, int height, unsigned char *input, unsigned char *output){
+    int i,j;
+    // Apply the filter
+    for(j=1; j<height-1; j++){
+        for(i=1; i<width-1; i++){
+            int gx = -input[(j-1)*width + i-1] -2*input[  j*width + i-1] -input[(j+1)*width + i-1]
+                     +input[(j-1)*width + i+1] +2*input[  j*width + i+1] +input[(j+1)*width + i+1];
+            int gy = -input[(j-1)*width + i-1] -2*input[(j-1)*width + i] -input[(j-1)*width + i+1]
+                     +input[(j+1)*width + i-1] +2*input[(j+1)*width + i] +input[(j+1)*width + i+1];
+
+            output[j*width + i] = (abs(gx) + abs(gy))/8;
+        }
+    }
+
+    // Fill the left and right sides
+    for(j=0; j<height ; j++){
+        output[j*width] = 0;
+        output[(j+1)*width-1] = 0;
+    }
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/splitMerge.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/splitMerge.c
new file mode 100644
index 0000000..83117e2
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/splitMerge.c
@@ -0,0 +1,57 @@
+/*
+ ============================================================================
+ Name        : splitMerge.c
+ Author      : kdesnos
+ Version     : 1.1
+ Copyright   : CECILL-C
+ Description :
+ ============================================================================
+ */
+
+#include <string.h>
+
+#include "splitMerge.h"
+#include <xdc/runtime/System.h>
+
+void split(int nbSlice, int width, int height, unsigned char *input,
+		unsigned char *output) {
+	int i;
+	int sliceSize = width * height / nbSlice;
+
+	// Fill first and last line with 0
+	memset(output, 0, width);
+	// First Slice
+	memcpy(output + width, input, sliceSize);
+	// Copy next line if several slice
+	if (nbSlice > 1) {
+		memcpy(output + width + sliceSize, input + sliceSize, width);
+	}
+	// Slice other than first and last
+	for (i = 1; i < nbSlice - 1; i++) {
+		int destIndex = i * (sliceSize + 2 * width);
+		memcpy(output + destIndex, input + i * sliceSize - width,
+				sliceSize + 2 * width);
+	}
+	// Last Slice
+	i = nbSlice - 1;
+	if (nbSlice > 1) {
+		// we have i = nbSlice -1;
+		int destIndex = i * (sliceSize + 2 * width);
+		memcpy(output + destIndex, input + i * sliceSize - width,
+				sliceSize + width);
+	}
+	// Last line
+	memset(output + (height + nbSlice * 2 - 1) * width, 0, width);
+}
+
+void merge(int nbSlice, int width, int height, unsigned char *input,
+		unsigned char *output) {
+	int i;
+	int sliceSize = width * height / nbSlice;
+
+	// Copy the slice content except the first and last lines
+	for (i = 0; i < nbSlice; i++) {
+		int idx = i * (sliceSize + 2 * width);
+		memcpy(output + i * sliceSize, input + idx + width, sliceSize);
+	}
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/utils.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/utils.c
new file mode 100644
index 0000000..aeffb00
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/utils.c
@@ -0,0 +1,41 @@
+#include <ti/sysbios/knl/Task.h>
+#include <ti/sysbios/BIOS.h>
+
+#include <xdc/runtime/System.h>
+
+#include <ti/ipc/MultiProc.h>
+/*  ----------------------------------- To get globals from .cfg Header */
+#include <xdc/cfg/global.h>
+
+/*  ----------------------------------- cache management */
+#include <ti/csl/csl_xmcAux.h>
+#include <ti/csl/csl_cacheAux.h>
+#include <ti/csl/csl_semAux.h>
+
+#include "utils.h"
+#include "communication.h"
+
+void set_MPAX(int index, Uint32 bAddr, Uint32 rAddr, Uint8 segSize,
+		Bool cacheable) {
+
+	if (!cacheable) {
+		// TODO need to check if several MPAX are covered by this address and size
+		CACHE_disableCaching(bAddr >> 12);
+	}
+
+	CSL_XMC_XMPAXH mpaxh;
+	mpaxh.bAddr = bAddr;
+	mpaxh.segSize = segSize;
+
+	CSL_XMC_XMPAXL mpaxl;
+	mpaxl.rAddr = rAddr;
+	mpaxl.sr = 1;
+	mpaxl.sw = 1;
+	mpaxl.sx = 1;
+	mpaxl.ur = 1;
+	mpaxl.uw = 1;
+	mpaxl.ux = 1;
+
+	CSL_XMC_setXMPAXH(index, &mpaxh);
+	CSL_XMC_setXMPAXL(index, &mpaxl);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvDisplay.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvDisplay.c
new file mode 100644
index 0000000..f684f86
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvDisplay.c
@@ -0,0 +1,41 @@
+
+
+#include "yuvDisplay.h"
+#include <time.h>
+#include <xdc/runtime/System.h>
+
+
+/**
+* Initializes a display frame. Be careful, once a window size has been chosen,
+* all videos must share the same window size
+*
+* @param id display unique identifier
+* @param width
+* @param height
+*/
+void yuvDisplayInit (int id, int width, int height)
+{
+	//System_printf("yuvDisplayInit\n");
+
+}
+/**
+* Display one YUV frame
+*
+* @param id display unique identifier
+* @param y luma
+* @param u chroma U
+* @param v chroma V
+*/
+void yuvDisplay(int id, unsigned char *y, unsigned char *u, unsigned char *v)
+{
+	//System_printf("yuvDisplay\n");
+
+}
+void yuvRefreshDisplay(int id)
+{
+}
+
+void yuvFinalize(int id)
+{
+
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvRead.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvRead.c
new file mode 100644
index 0000000..ee67c5f
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/src/yuvRead.c
@@ -0,0 +1,66 @@
+
+
+#include "yuvRead.h"
+#include <xdc/runtime/System.h>
+#include <string.h>
+#include <xdc/runtime/Timestamp.h>
+#include <xdc/runtime/Types.h>
+
+#define NB_FRAMES 10
+#define WIDTH 352
+#define HEIGHT 288
+#define PICSIZE WIDTH*HEIGHT*3/2
+
+// Reserving memory for the input sequence
+// This memory should be loaded by the Load function of CCS
+// Forcing in DDR3
+#pragma DATA_SECTION(input_sequence, ".myInputVideoMem");
+static unsigned char input_sequence [PICSIZE*NB_FRAMES];
+
+int currentFrameIndex;
+
+/*========================================================================
+
+   Global Variable
+
+   ======================================================================*/
+
+/*========================================================================
+
+   initReadYUV DEFINITION
+
+   ======================================================================*/
+void initReadYUV(int width, int height) {
+	//System_printf("initYUV\n");
+	currentFrameIndex = 0;
+}
+
+/*========================================================================
+
+   readYUV DEFINITION
+
+   ======================================================================*/
+void readYUV(int width, int height, unsigned char *y, unsigned char *u, unsigned char *v) {
+
+	static int i = 0;
+	static unsigned int time = 0;
+	unsigned int now;
+	unsigned char* input_y = input_sequence + currentFrameIndex*PICSIZE;
+	unsigned char* input_u = input_y + height*width;
+	unsigned char* input_v = input_u + (height*width/4);
+
+	if(i==0){
+	now = Timestamp_get32();
+	unsigned int delta = (now-time)/100;
+	float fps = 1000000000.0 / (float)delta;
+	System_printf("fps: %f\n", fps);
+	time = Timestamp_get32();
+	}
+	i = (i +1) %100;
+	memcpy(y,input_y,height*width*sizeof(char));
+	memcpy(u,input_u,height*width*sizeof(char)/4);
+	memcpy(v,input_v,height*width*sizeof(char)/4);
+
+	currentFrameIndex++;
+	currentFrameIndex = currentFrameIndex%NB_FRAMES;
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeCodeblock.bat b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeCodeblock.bat
new file mode 100644
index 0000000..dc87121
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeCodeblock.bat
@@ -0,0 +1,8 @@
+@echo off
+mkdir bin
+cd bin
+mkdir CB_main
+cd CB_main
+
+cmake ..\..\ -G "CodeBlocks - MinGW Makefiles"
+pause
\ No newline at end of file
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeGCC.sh b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeGCC.sh
new file mode 100644
index 0000000..0150f96
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeGCC.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+mkdir bin
+cd bin
+mkdir make
+cd make
+# Generating the Makefile
+# Run ccmake gui to debug cmake problems
+cmake ../..
\ No newline at end of file
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeLists.txt b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeLists.txt
new file mode 100644
index 0000000..6b476f9
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeLists.txt
@@ -0,0 +1,33 @@
+cmake_minimum_required(VERSION 2.6)
+
+# *******************************************
+# ************* CMake Content ***************
+# *******************************************
+# This CMake create a workspace containing the following projects
+#
+# Programs
+#  - yuv2dat
+
+# IDE dependent config
+if(${CMAKE_GENERATOR} MATCHES "Visual Studio 9 2008")
+	MESSAGE("Add definition for ${CMAKE_GENERATOR}")
+	add_definitions( -D_CRT_SECURE_NO_WARNINGS )
+endif()
+
+project(yuv2dat)
+set(LIBS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib)
+set(CMAKE_C_FLAGS "-std=c99 -DVERBOSE")
+
+# *******************************************
+# **************** yuv2dat  ****************
+# *******************************************
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
+file(
+	GLOB_RECURSE
+	source_files
+	./src/*.c
+	./src/*.h
+	./include/*.h
+)
+
+add_executable( yuv2dat ${source_files} ${header_files})
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeVC2008.bat b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeVC2008.bat
new file mode 100644
index 0000000..5e18f8e
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/CMakeVC2008.bat
@@ -0,0 +1,11 @@
+@echo off
+mkdir bin
+cd bin
+mkdir VS_main
+cd VS_main
+mkdir Debug
+mkdir Release
+
+cmake ..\..\ -G "Visual Studio 9 2008"
+
+pause
\ No newline at end of file
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/ReadMe.txt b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/ReadMe.txt
new file mode 100644
index 0000000..37d3200
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/ReadMe.txt
@@ -0,0 +1,20 @@
+***************************************
+***             yuv2dat             ***
+***************************************
+
+This executable aims at converting a yuv file into a dat file that can be loaded in c6678 memory.
+The dat file contains textual hexadecimal bytes that can be loaded in the memory of the c6678 via CCS.
+
+Hexa Data Format:
+
+1651 6 0 0 4
+0x04
+0x00
+0x04
+0x00
+
+1651: Magic number
+6: data type
+0: original address
+0: original page number
+4: number of elements
\ No newline at end of file
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/datCreate.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/datCreate.h
new file mode 100644
index 0000000..858b2bc
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/datCreate.h
@@ -0,0 +1,39 @@
+/*
+	============================================================================
+	Name        : datCreate.h
+	Author      : mpelcat
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description : creating a data file to load in CCS
+	============================================================================
+*/
+
+#ifndef DATCREATE_H
+#define DATCREATE_H
+
+#define SUCCESS 0
+#define FAILURE -1
+
+/**
+* Initialize the dat file.
+*
+* @param fileName
+*        The path of the created Dat file
+* @param size
+*        The number of bytes to store in total
+*/
+int createDatFile(char* filePath, int size);
+
+/**
+* Writing a buffer in the dat file.
+*
+* @param buffer
+*        the buffer to write
+* @param size
+*        The number of bytes to store
+*/
+void writeData(unsigned char* buffer, int size);
+
+void closeDatFile();
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/yuvRead.h b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/yuvRead.h
new file mode 100644
index 0000000..af37bc1
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/include/yuvRead.h
@@ -0,0 +1,50 @@
+/*
+	============================================================================
+	Name        : readYUV.h
+	Author      : kdesnos & mpelcat
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description : Actor code to read a file from the hard drive
+	============================================================================
+*/
+
+#ifndef READ_YUV_H
+#define READ_YUV_H
+
+#define SUCCESS 0
+#define FAILURE -1
+
+/**
+* Initialize the readYUV actor.
+* Open the YUV file at the given PATH and check its size.
+*
+* @param fileName
+*        The path of the opened YUV file
+* @param xSize
+*        The width of the opened YUV file
+* @param ySize
+*        The heigth of the opened YUV file
+* @param nbFrames
+*        The number of frames to read
+*/
+int initReadYUV(char* filePath, int xSize, int ySize, int nbFrames);
+
+/**
+* Read a new frame from the YUV file.
+*
+* @param xSize
+*        The width of the opened YUV file
+* @param ySize
+*        The heigth of the opened YUV file
+* param y
+*       Destination of the Y component read from the file
+* param u
+*       Destination of the U component read from the file
+* param v
+*       Destination of the V component read from the file
+*/
+void readYUV(int xSize, int ySize, unsigned char *y, unsigned char *u, unsigned char *v);
+
+void closeYuvFile();
+
+#endif
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/datCreate.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/datCreate.c
new file mode 100644
index 0000000..94966fd
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/datCreate.c
@@ -0,0 +1,57 @@
+/*
+	============================================================================
+	Name        : datCreate.c
+    Author      : mpelcat
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description :
+	============================================================================
+*/
+
+#include "datCreate.h"
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+#define LINESIZE 80
+/*========================================================================
+
+   Global Variable
+
+   ======================================================================*/
+static FILE *ptDatFile = NULL ;
+
+/*========================================================================
+
+   Initialize the dat file.
+
+   ======================================================================*/
+int createDatFile(char* filePath, int size){
+	//unsigned char temp[LINESIZE];
+	if((ptDatFile = fopen(filePath, "w")) != NULL )
+    {
+        fprintf (ptDatFile, "1651 6 0 0 %x\n", size);
+
+		#ifdef VERBOSE
+			printf("Opened file '%s'\n", filePath);
+		#endif
+        return SUCCESS;
+    }
+    else{
+        fprintf(stderr,"ERROR: Task read cannot open dat_file '%s'\n", filePath);
+        return FAILURE;
+    }
+
+}
+
+void writeData(unsigned char* buffer, int size){
+    unsigned char temp[LINESIZE];
+    int i=0;
+    for(i=0;i<size;i++){
+        fprintf (ptDatFile, "0x%02x\n", buffer[i]);
+    }
+}
+
+void closeDatFile(){
+    fclose(ptDatFile);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/main.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/main.c
new file mode 100644
index 0000000..9e8632a
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/main.c
@@ -0,0 +1,97 @@
+/*
+	============================================================================
+	Name        : main.c
+	Author      : mpelcat
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description : This executable aims at converting a yuv file into a dat file
+				  that can be loaded in c6678 memory.
+				  The dat file contains textual hexadecimal bytes that can be
+				  loaded in the memory of the c6678 via CCS.
+	============================================================================
+*/
+
+#include "yuvRead.h"
+#include "datCreate.h"
+#include <stdio.h>
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+#define SUCCESS 0
+#define FAILURE -1
+
+int xsize = 0;
+int ysize = 0;
+char* inputFileName = NULL;
+char* outputFileName = NULL;
+int nbFrames = 0;
+
+int parseCmdLine(int argc, char *argv[]){
+	int i=0;
+	for (i=0;i<argc;i++){
+		char* option = argv[i];
+		if(strstr (option,"-x=") == option){
+			xsize = atoi (option+3);
+		}
+		else if(strstr (option,"-y=") == option){
+			ysize = atoi (option+3);
+		}
+		else if(strstr (option,"-i=") == option){
+			inputFileName = option+3;
+		}
+		else if(strstr (option,"-o=") == option){
+			outputFileName = option+3;
+		}
+		else if(strstr (option,"-f=") == option){
+			nbFrames = atoi (option+3);
+		}
+	}
+
+	if(xsize <= 0 || ysize <= 0 || inputFileName == NULL || outputFileName == NULL || nbFrames <= 0){
+		printf("Invalid arguments. The arguments should look like (for example):\n");
+		printf("yuv2dat -x=352 -y=288 -i=akiyo.yuv -o=akiyo.dat -f=300\n");
+
+		return FAILURE;
+	}
+
+#ifdef VERBOSE
+    printf("Arguments xsize %d ysize %d %s %s nbFrames %d\n", xsize, ysize, inputFileName, outputFileName, nbFrames);
+#endif
+
+	return SUCCESS;
+}
+
+int main(int argc, char *argv[])
+{
+	int i=0;
+
+	if(parseCmdLine(argc, argv) == SUCCESS &&
+		initReadYUV(inputFileName, xsize, ysize, nbFrames) == SUCCESS &&
+		createDatFile(outputFileName, xsize*ysize*nbFrames/2*3) == SUCCESS){
+
+			int lumasize = xsize * ysize * sizeof(unsigned char);
+			int chromasize = lumasize / 4;
+			unsigned char *y = (unsigned char *) malloc(lumasize);
+			unsigned char *u = (unsigned char *) malloc(chromasize);
+			unsigned char *v = (unsigned char *) malloc(chromasize);
+
+		for(i=0;i<nbFrames;i++){
+			readYUV(xsize, ysize, y, u, v);
+			writeData(y,lumasize);
+			writeData(u,chromasize);
+			writeData(v,chromasize);
+		}
+
+		free(y);
+		free(u);
+		free(v);
+
+        closeDatFile();
+        closeYuvFile();
+		return SUCCESS;
+	}
+	else{
+		return FAILURE;
+	}
+}
diff --git a/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/yuvRead.c b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/yuvRead.c
new file mode 100644
index 0000000..cef19d0
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/CodeC6678/yuv2dat/src/yuvRead.c
@@ -0,0 +1,82 @@
+/*
+	============================================================================
+	Name        : readYUV.c
+	Author      : kdesnos
+    Author      : mpelcat
+	Version     : 1.0
+	Copyright   : CECILL-C
+	Description :
+	============================================================================
+*/
+
+#include "yuvRead.h"
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+/*========================================================================
+
+   Global Variable
+
+   ======================================================================*/
+static FILE *ptYuvFile = NULL ;
+static int setNbFrames = 0;
+
+/*========================================================================
+
+   initReadYUV DEFINITION
+
+   ======================================================================*/
+int initReadYUV(char* filePath, int xSize, int ySize, int nbFrames) {
+    int fsize;
+    if((ptYuvFile = fopen(filePath, "rb")) == NULL )
+    {
+        fprintf(stderr,"ERROR: Task read cannot open yuv_file '%s'\n", filePath);
+        return FAILURE;
+    }
+
+#ifdef VERBOSE
+    printf("Opened file '%s'\n", filePath);
+#endif
+
+    // Obtain file size:
+    fseek (ptYuvFile , 0 , SEEK_END);
+    fsize = ftell (ptYuvFile);
+    rewind (ptYuvFile);
+    if(fsize < nbFrames*(xSize*ySize + xSize*ySize/2))
+    {
+        fprintf(stderr,"ERROR: Task read yuv_file incorrect size");
+        return FAILURE;
+    }
+
+#ifdef VERBOSE
+    printf("Correct size for yuv_file '%s'\n", filePath);
+#endif
+
+    setNbFrames = nbFrames;
+
+    return SUCCESS;
+}
+
+/*========================================================================
+
+   readYUV DEFINITION
+
+   ======================================================================*/
+void readYUV(int xSize, int ySize, unsigned char *y, unsigned char *u, unsigned char *v) {
+#ifdef VERBOSE
+    printf("Reading xsize %d ysize %d\n", xSize, ySize);
+#endif
+	// Writing circularly if we go further than input file size
+    if( ftell(ptYuvFile)/(xSize*ySize + xSize*ySize/2) >= setNbFrames){
+        rewind(ptYuvFile);
+    }
+
+    fread(y, sizeof(char), xSize * ySize, ptYuvFile);
+    fread(u, sizeof(char), xSize * ySize / 4, ptYuvFile);
+    fread(v, sizeof(char), xSize * ySize / 4, ptYuvFile);
+}
+
+void closeYuvFile(){
+    fclose(ptYuvFile);
+}
diff --git a/tutorials/org.ietr.preesm.sobel/Scenarios/8coreC6678.scenario b/tutorials/org.ietr.preesm.sobel/Scenarios/8coreC6678.scenario
new file mode 100644
index 0000000..6f4278b
--- /dev/null
+++ b/tutorials/org.ietr.preesm.sobel/Scenarios/8coreC6678.scenario
@@ -0,0 +1,108 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<scenario>
+    <files>
+        <algorithm url="/org.ietr.preesm.sobel/Algo/top_display.pi"/>
+        <architecture url="/org.ietr.preesm.sobel/Archi/8CoreC6678.slam"/>
+        <codegenDirectory url="/org.ietr.preesm.sobel/CodeC6678/generated"/>
+    </files>
+    <constraints excelUrl="">
+        <constraintGroup>
+            <operator name="Core0"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core3"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core6"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core5"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core1"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core7"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core2"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+        <constraintGroup>
+            <operator name="Core4"/>
+            <task name="top_display/Read_YUV"/>
+            <task name="top_display/Merge"/>
+            <task name="top_display/display"/>
+            <task name="top_display"/>
+            <task name="top_display/Split"/>
+            <task name="top_display/Sobel"/>
+        </constraintGroup>
+    </constraints>
+    <relativeconstraints excelUrl=""/>
+    <timings excelUrl="">
+        <memcpyspeed opname="c6678" setuptime="1" timeperunit="5.0E-5"/>
+    </timings>
+    <simuParams>
+        <mainCore>Core0</mainCore>
+        <mainComNode>shared_mem</mainComNode>
+        <averageDataSize>1000</averageDataSize>
+        <dataTypes>
+            <dataType name="uchar" size="1"/>
+            <dataType name="char" size="1"/>
+        </dataTypes>
+        <specialVertexOperators>
+            <specialVertexOperator path="Core3"/>
+            <specialVertexOperator path="Core4"/>
+            <specialVertexOperator path="Core5"/>
+            <specialVertexOperator path="Core6"/>
+            <specialVertexOperator path="Core0"/>
+            <specialVertexOperator path="Core1"/>
+            <specialVertexOperator path="Core2"/>
+            <specialVertexOperator path="Core7"/>
+        </specialVertexOperators>
+        <numberOfTopExecutions>1</numberOfTopExecutions>
+    </simuParams>
+    <variables excelUrl=""/>
+    <parameterValues/>
+</scenario>
--
1.8.3.msysgit.0

